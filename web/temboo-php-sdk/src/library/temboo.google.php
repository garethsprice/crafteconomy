<?php

/**
 * Temboo PHP SDK Google classes
 *
 * Execute Choreographies from the Temboo Google bundle.
 *
 * PHP version 5
 *
 * LICENSE: Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @category   Services
 * @package    Temboo
 * @subpackage Google
 * @author     Temboo, Inc.
 * @copyright  2012 Temboo, Inc.
 * @license    http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0
 * @version    1.7
 * @link       http://live.temboo.com/sdk/php
 */


/**
 * Gets the developer site data.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetDeveloperSiteData extends Temboo_Choreography
{
    /**
     * Gets the developer site data.
     *
     * @param Temboo_Session $session The session that owns this GetDeveloperSiteData choreography.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetDeveloperSiteData/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetDeveloperSiteData choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetDeveloperSiteData_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetDeveloperSiteData choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetDeveloperSiteData choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetDeveloperSiteData choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetDeveloperSiteData input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Email input for this GetDeveloperSiteData choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetDeveloperSiteData choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetDeveloperSiteData choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetDeveloperSiteData choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetDeveloperSiteData_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetDeveloperSiteData choreography.
     *
     * @param Temboo_Session $session The session that owns this GetDeveloperSiteData execution.
     * @param Google_AdSenseHost_AccountService_GetDeveloperSiteData $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetDeveloperSiteData_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetDeveloperSiteData $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetDeveloperSiteData execution.
     *
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetDeveloperSiteData execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetDeveloperSiteData_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetDeveloperSiteData choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetDeveloperSiteData_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetDeveloperSiteData choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetDeveloperSiteData_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetDeveloperSiteData execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a named search result style. If a search result style with this name is already saved, this will overwrite the style's contents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle extends Temboo_Choreography
{
    /**
     * Adds a named search result style. If a search result style with this name is already saved, this will overwrite the style's contents.
     *
     * @param Temboo_Session $session The session that owns this SaveSearchResultStyle choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/SaveSearchResultStyle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SaveSearchResultStyle choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SaveSearchResultStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SaveSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SaveSearchResultStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SaveSearchResultStyle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the BackgroundColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The background color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setBackgroundColor($value)
    {
        return $this->set('BackgroundColor', $value);
    }

    /**
     * Set the value for the BorderColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The border color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setBorderColor($value)
    {
        return $this->set('BorderColor', $value);
    }

    /**
     * Set the value for the ClientID input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The ID of the publisher to save the search result style for.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FaintTextColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The faint text color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setFaintTextColor($value)
    {
        return $this->set('FaintTextColor', $value);
    }

    /**
     * Set the value for the LogoBackgroundColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The logo background color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoBackgroundColor($value)
    {
        return $this->set('LogoBackgroundColor', $value);
    }

    /**
     * Set the value for the LogoDestURL input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The URL of the destination when the logo is clicked in the search result.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoDestURL($value)
    {
        return $this->set('LogoDestURL', $value);
    }

    /**
     * Set the value for the LogoHeight input for this SaveSearchResultStyle choreography.
     *
     * @param int $value (integer) The height of the logo in the search result.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoHeight($value)
    {
        return $this->set('LogoHeight', $value);
    }

    /**
     * Set the value for the LogoPlacement input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) One of 'Top' or 'Left'.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoPlacement($value)
    {
        return $this->set('LogoPlacement', $value);
    }

    /**
     * Set the value for the LogoURL input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The URL of the logo for the search result.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoURL($value)
    {
        return $this->set('LogoURL', $value);
    }

    /**
     * Set the value for the LogoWidth input for this SaveSearchResultStyle choreography.
     *
     * @param int $value (integer) The width of the logo in the search result.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setLogoWidth($value)
    {
        return $this->set('LogoWidth', $value);
    }

    /**
     * Set the value for the Password input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SearchResultStyleName input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The name of this style.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setSearchResultStyleName($value)
    {
        return $this->set('SearchResultStyleName', $value);
    }

    /**
     * Set the value for the SynServiceID input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }

    /**
     * Set the value for the TextColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The text color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setTextColor($value)
    {
        return $this->set('TextColor', $value);
    }

    /**
     * Set the value for the TitleColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The title color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setTitleColor($value)
    {
        return $this->set('TitleColor', $value);
    }

    /**
     * Set the value for the URLColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The URL color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setURLColor($value)
    {
        return $this->set('URLColor', $value);
    }

    /**
     * Set the value for the VisitedURLColor input for this SaveSearchResultStyle choreography.
     *
     * @param string $value (string) The visited URL color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs For method chaining.
     */
    public function setVisitedURLColor($value)
    {
        return $this->set('VisitedURLColor', $value);
    }
}


/**
 * Execution object for the SaveSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SaveSearchResultStyle choreography.
     *
     * @param Temboo_Session $session The session that owns this SaveSearchResultStyle execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SaveSearchResultStyle execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SaveSearchResultStyle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SaveSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SaveSearchResultStyle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_SaveSearchResultStyle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SaveSearchResultStyle execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a specific contact with a given id.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById extends Temboo_Choreography
{
    /**
     * Retrieves a specific contact with a given id.
     *
     * @param Temboo_Session $session The session that owns this GetContactById choreography.
     * @return Google_Contacts_GetContactById New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetContactById/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetContactById choreography.
     *
     * @param Google_Contacts_GetContactById_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactById_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetContactById_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetContactById choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactById_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetContactById_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetContactById choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetContactById choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactById_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetContactById input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetContactById choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetContactById choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetContactById choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContactId input for this GetContactById choreography.
     *
     * @param string $value (required, string) The id associated with the contact to return. This can either be the individual id of the contact, or the full 'edit' link returned in the entry nodes of the GetAllContacts output.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setContactId($value)
    {
        return $this->set('ContactId', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetContactById choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserEmail input for this GetContactById choreography.
     *
     * @param string $value (required, string) The email address of the user whose contacts you want to retrieve. Defaults to "default," or the user whose OAuth access token is passed.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setUserEmail($value)
    {
        return $this->set('UserEmail', $value);
    }
}


/**
 * Execution object for the GetContactById choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetContactById choreography.
     *
     * @param Temboo_Session $session The session that owns this GetContactById execution.
     * @param Google_Contacts_GetContactById $choreo The choregraphy object for this execution.
     * @param Google_Contacts_GetContactById_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactById_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetContactById $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetContactById execution.
     *
     * @return Google_Contacts_GetContactById_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetContactById execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetContactById_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetContactById_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetContactById choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetContactById choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetContactById_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetContactById execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetContactById execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Updates a worksheet row in a Google spreadsheet using a simple XML file you provide.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows extends Temboo_Choreography
{
    /**
     * Updates a worksheet row in a Google spreadsheet using a simple XML file you provide.
     *
     * @param Temboo_Session $session The session that owns this UpdateListRows choreography.
     * @return Google_Spreadsheets_UpdateListRows New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateListRows/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateListRows choreography.
     *
     * @param Google_Spreadsheets_UpdateListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateListRows_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateListRows_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateListRows choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateListRows_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateListRows_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateListRows choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateListRows_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateListRows input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RowsetXML input for this UpdateListRows choreography.
     *
     * @param string $value (XML) The row of data that you want to update in XML format. Your XML needs to be in the rowset/row schema described in the Choreo documentation.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setRowsetXML($value)
    {
        return $this->set('RowsetXML', $value);
    }

    /**
     * Set the value for the Password input for this UpdateListRows choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowId input for this UpdateListRows choreography.
     *
     * @param string $value (string) The unique id of the row you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setRowId($value)
    {
        return $this->set('RowId', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateListRows choreography.
     *
     * @param string $value (string) The unique key of the spreadsheet that contains the worksheet you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this UpdateListRows choreography.
     *
     * @param string $value (string) Your Google username
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateListRows choreography.
     *
     * @param string $value (string) The unique id of the worksheet that you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateListRows choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateListRows execution.
     * @param Google_Spreadsheets_UpdateListRows $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_UpdateListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateListRows_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateListRows $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateListRows execution.
     *
     * @return Google_Spreadsheets_UpdateListRows_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateListRows execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateListRows_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateListRows_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateListRows choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateListRows_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateListRows execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Returns all of the people in the specified collection for a particular activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity extends Temboo_Choreography
{
    /**
     *  Returns all of the people in the specified collection for a particular activity.
     *
     * @param Temboo_Session $session The session that owns this ListByActivity choreography.
     * @return Google_Plus_People_ListByActivity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/ListByActivity/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListByActivity choreography.
     *
     * @param Google_Plus_People_ListByActivity_Inputs|array $inputs (optional) Inputs as Google_Plus_People_ListByActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_ListByActivity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_ListByActivity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListByActivity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_ListByActivity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_ListByActivity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListByActivity choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListByActivity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_ListByActivity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListByActivity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListByActivity choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this ListByActivity choreography.
     *
     * @param string $value (required, string) The ID of the activity to get the list of people for. ActiviyIDs can be retrieved by running the Google.Plus.Activities.Search Choreo.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this ListByActivity choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this ListByActivity choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListByActivity choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Collection input for this ListByActivity choreography.
     *
     * @param string $value (required, string) Valid values are: "plusoners" (lists all people who have +1'd this activity) and "resharers" (lists all people who have reshared this activity).
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCollection($value)
    {
        return $this->set('Collection', $value);
    }

    /**
     * Set the value for the Fields input for this ListByActivity choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this ListByActivity choreography.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this ListByActivity choreography.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this ListByActivity choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListByActivity choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this ListByActivity choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the ListByActivity choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListByActivity choreography.
     *
     * @param Temboo_Session $session The session that owns this ListByActivity execution.
     * @param Google_Plus_People_ListByActivity $choreo The choregraphy object for this execution.
     * @param Google_Plus_People_ListByActivity_Inputs|array $inputs (optional) Inputs as Google_Plus_People_ListByActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_ListByActivity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_ListByActivity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListByActivity execution.
     *
     * @return Google_Plus_People_ListByActivity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListByActivity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_ListByActivity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_ListByActivity_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListByActivity choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListByActivity choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_ListByActivity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListByActivity execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this ListByActivity execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Create a new contact.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact extends Temboo_Choreography
{
    /**
     * Create a new contact.
     *
     * @param Temboo_Session $session The session that owns this CreateContact choreography.
     * @return Google_Contacts_CreateContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/CreateContact/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateContact choreography.
     *
     * @param Google_Contacts_CreateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_CreateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_CreateContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_CreateContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_CreateContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_CreateContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_CreateContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateContact choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateContact choreography.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateContact choreography.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Email input for this CreateContact choreography.
     *
     * @param string $value (required, string) The new contact's email address.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the FirstName input for this CreateContact choreography.
     *
     * @param string $value (required, string) The new contact's first name.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setFirstName($value)
    {
        return $this->set('FirstName', $value);
    }

    /**
     * Set the value for the LastName input for this CreateContact choreography.
     *
     * @param string $value (required, string) The new contact's last name.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setLastName($value)
    {
        return $this->set('LastName', $value);
    }

    /**
     * Set the value for the Phone input for this CreateContact choreography.
     *
     * @param string $value (required, string) The phone number for the new contact. It's best to use the "(555) 123-4567" format.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setPhone($value)
    {
        return $this->set('Phone', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateContact choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the CreateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateContact choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateContact execution.
     * @param Google_Contacts_CreateContact $choreo The choregraphy object for this execution.
     * @param Google_Contacts_CreateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_CreateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_CreateContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_CreateContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateContact execution.
     *
     * @return Google_Contacts_CreateContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_CreateContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_CreateContact_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateContact choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_CreateContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateContact execution.
     *
     * @return string (xml) The response from the API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this CreateContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }

    /**
     * Retrieve the value for the "ContactID" output from this CreateContact execution.
     *
     * @return string (string) The unique ID supplied by Google for the new user.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }
}

/**
 *  Returns a list of all activities in the specified collection for a particular user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List extends Temboo_Choreography
{
    /**
     *  Returns a list of all activities in the specified collection for a particular user.
     *
     * @param Temboo_Session $session The session that owns this List choreography.
     * @return Google_Plus_Activities_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/List/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this List choreography.
     *
     * @param Google_Plus_Activities_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the List choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this List choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this List choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Collection input for this List choreography.
     *
     * @param string $value (required, string) The collection of activities to list. Defaults to "public".
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCollection($value)
    {
        return $this->set('Collection', $value);
    }

    /**
     * Set the value for the Fields input for this List choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this List choreography.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List choreography.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this List choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this List choreography.
     *
     * @param string $value (required, string) The ID of the person to get the profile for. The value "me" is set as the default to indicate the authenticated user.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

    /**
     * Set the value for the UserIP input for this List choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List choreography.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Plus_Activities_List $choreo The choregraphy object for this execution.
     * @param Google_Plus_Activities_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Plus_Activities_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_List_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the List choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this List execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * List all albums created in a Google Picasa account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums extends Temboo_Choreography
{
    /**
     * List all albums created in a Google Picasa account.
     *
     * @param Temboo_Session $session The session that owns this ListAlbums choreography.
     * @return Google_Picasa_ListAlbums New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/ListAlbums/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListAlbums choreography.
     *
     * @param Google_Picasa_ListAlbums_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListAlbums_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListAlbums_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_ListAlbums_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAlbums choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListAlbums_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_ListAlbums_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAlbums choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListAlbums choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListAlbums_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAlbums input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListAlbums choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this ListAlbums choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListAlbums choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListAlbums choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this ListAlbums choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the ListAlbums choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAlbums choreography.
     *
     * @param Temboo_Session $session The session that owns this ListAlbums execution.
     * @param Google_Picasa_ListAlbums $choreo The choregraphy object for this execution.
     * @param Google_Picasa_ListAlbums_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListAlbums_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListAlbums_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_ListAlbums $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAlbums execution.
     *
     * @return Google_Picasa_ListAlbums_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListAlbums execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_ListAlbums_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_ListAlbums_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListAlbums choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListAlbums choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_ListAlbums_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListAlbums execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this ListAlbums execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Adds one or more rows to a worksheet in a Google spreadsheet using a simple XML file you provide.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows extends Temboo_Choreography
{
    /**
     * Adds one or more rows to a worksheet in a Google spreadsheet using a simple XML file you provide.
     *
     * @param Temboo_Session $session The session that owns this AddListRows choreography.
     * @return Google_Spreadsheets_AddListRows New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/AddListRows/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddListRows choreography.
     *
     * @param Google_Spreadsheets_AddListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddListRows_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_AddListRows_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddListRows choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddListRows_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_AddListRows_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddListRows choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddListRows_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddListRows input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RowsetXML input for this AddListRows choreography.
     *
     * @param string $value (required, xml) The rows of data that you want to add to a worksheet in XML format. Your XML needs to be in the rowset/row schema described in the Choreo documentation.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setRowsetXML($value)
    {
        return $this->set('RowsetXML', $value);
    }

    /**
     * Set the value for the Password input for this AddListRows choreography.
     *
     * @param string $value (required, string) Your Google password
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this AddListRows choreography.
     *
     * @param string $value (required, string) The unique key of the spreadsheet that contains the worksheet you want to add rows to
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this AddListRows choreography.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this AddListRows choreography.
     *
     * @param string $value (required, string) The unique id of the worksheet that you want to add rows to
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the AddListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddListRows choreography.
     *
     * @param Temboo_Session $session The session that owns this AddListRows execution.
     * @param Google_Spreadsheets_AddListRows $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_AddListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddListRows_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_AddListRows $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddListRows execution.
     *
     * @return Google_Spreadsheets_AddListRows_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddListRows execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_AddListRows_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_AddListRows_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddListRows choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddListRows choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_AddListRows_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddListRows execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the Channels associated with this syndication service for the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetChannels extends Temboo_Choreography
{
    /**
     * Returns the Channels associated with this syndication service for the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetChannels choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetChannels/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetChannels choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetChannels_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetChannels input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ChannelServiceType input for this GetChannels choreography.
     *
     * @param string $value (string) One of 'Url' or 'Custom'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setChannelServiceType($value)
    {
        return $this->set('ChannelServiceType', $value);
    }

    /**
     * Set the value for the ClientID input for this GetChannels choreography.
     *
     * @param string $value (string) The ID of the publisher to get the channels of.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetChannels choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetChannels choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetChannels choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetChannels choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetChannels_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetChannels choreography.
     *
     * @param Temboo_Session $session The session that owns this GetChannels execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetChannels $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetChannels $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetChannels execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetChannels execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetChannels_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetChannels_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetChannels choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetChannels_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetChannels execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the service data for the SyndicationService (returns either 'ContentAds' or 'SearchAds').
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSyndicationService extends Temboo_Choreography
{
    /**
     * Returns the service data for the SyndicationService (returns either 'ContentAds' or 'SearchAds').
     *
     * @param Temboo_Session $session The session that owns this GetSyndicationService choreography.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetSyndicationService/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetSyndicationService choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetSyndicationService_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetSyndicationService_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSyndicationService_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetSyndicationService input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetSyndicationService choreography.
     *
     * @param string $value (string) The ID of the publisher to get the syndication service data from.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetSyndicationService choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetSyndicationService choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetSyndicationService choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceType input for this GetSyndicationService choreography.
     *
     * @param string $value (string) One of 'ContentAds' or 'SearchAds'.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Inputs For method chaining.
     */
    public function setSynServiceType($value)
    {
        return $this->set('SynServiceType', $value);
    }
}


/**
 * Execution object for the GetSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSyndicationService_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetSyndicationService choreography.
     *
     * @param Temboo_Session $session The session that owns this GetSyndicationService execution.
     * @param Google_AdSenseHost_AccountService_GetSyndicationService $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetSyndicationService $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetSyndicationService execution.
     *
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetSyndicationService execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetSyndicationService_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSyndicationService_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetSyndicationService choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetSyndicationService_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetSyndicationService execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the ad styles created by the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdStyles extends Temboo_Choreography
{
    /**
     * Returns the ad styles created by the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetAdStyles choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetAdStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAdStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAdStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetAdStyles choreography.
     *
     * @param string $value (string) The ID of the publisher to get the ad styles of.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAdStyles choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAdStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAdStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetAdStyles choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAdStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAdStyles execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetAdStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAdStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAdStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAdStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAdStyles execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Toggle settings for a document or file on or off, depending on its current state.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties extends Temboo_Choreography
{
    /**
     * Toggle settings for a document or file on or off, depending on its current state.
     *
     * @param Temboo_Session $session The session that owns this ToggleProperties choreography.
     * @return Google_Documents_ToggleProperties New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/ToggleProperties/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ToggleProperties choreography.
     *
     * @param Google_Documents_ToggleProperties_Inputs|array $inputs (optional) Inputs as Google_Documents_ToggleProperties_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ToggleProperties_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_ToggleProperties_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ToggleProperties choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ToggleProperties_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_ToggleProperties_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ToggleProperties choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ToggleProperties choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ToggleProperties_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ToggleProperties input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ToggleProperties choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this ToggleProperties choreography.
     *
     * @param string $value (required, string) The title of the document with the properties you want to toggle. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this ToggleProperties choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ToggleProperties choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ToggleProperties choreography.
     *
     * @param Temboo_Session $session The session that owns this ToggleProperties execution.
     * @param Google_Documents_ToggleProperties $choreo The choregraphy object for this execution.
     * @param Google_Documents_ToggleProperties_Inputs|array $inputs (optional) Inputs as Google_Documents_ToggleProperties_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ToggleProperties_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_ToggleProperties $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ToggleProperties execution.
     *
     * @return Google_Documents_ToggleProperties_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ToggleProperties execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_ToggleProperties_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_ToggleProperties_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ToggleProperties choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ToggleProperties choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_ToggleProperties_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ToggleProperties execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "EditLink" output from this ToggleProperties execution.
     *
     * @return string (string) The edit link URL for the document, parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }
}

/**
 * Retrieve data for all events in a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents extends Temboo_Choreography
{
    /**
     * Retrieve data for all events in a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this GetAllEvents choreography.
     * @return Google_Calendar_GetAllEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllEvents/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllEvents choreography.
     *
     * @param Google_Calendar_GetAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllEvents choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetAllEvents choreography.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllEvents choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllEvents choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllEvents choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllEvents choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllEvents choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllEvents execution.
     * @param Google_Calendar_GetAllEvents $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllEvents execution.
     *
     * @return Google_Calendar_GetAllEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllEvents_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllEvents choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllEvents execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetAllEvents execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Allows you to perform simple test to verify connectivity with your Google Checkout account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount extends Temboo_Choreography
{
    /**
     * Allows you to perform simple test to verify connectivity with your Google Checkout account.
     *
     * @param Temboo_Session $session The session that owns this TestAccount choreography.
     * @return Google_Checkout_TestAccount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/TestAccount/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this TestAccount choreography.
     *
     * @param Google_Checkout_TestAccount_Inputs|array $inputs (optional) Inputs as Google_Checkout_TestAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_TestAccount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_TestAccount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TestAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_TestAccount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_TestAccount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TestAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the TestAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_TestAccount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TestAccount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Endpoint input for this TestAccount choreography.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this TestAccount choreography.
     *
     * @param int $value (required, integer) The Merchant Id provided by Google
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this TestAccount choreography.
     *
     * @param string $value (required, string) The Merchant Key provided by Google
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }
}


/**
 * Execution object for the TestAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TestAccount choreography.
     *
     * @param Temboo_Session $session The session that owns this TestAccount execution.
     * @param Google_Checkout_TestAccount $choreo The choregraphy object for this execution.
     * @param Google_Checkout_TestAccount_Inputs|array $inputs (optional) Inputs as Google_Checkout_TestAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_TestAccount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_TestAccount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TestAccount execution.
     *
     * @return Google_Checkout_TestAccount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this TestAccount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_TestAccount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_TestAccount_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the TestAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the TestAccount choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_TestAccount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this TestAccount execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes a tag from a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag extends Temboo_Choreography
{
    /**
     * Removes a tag from a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this DeleteTag choreography.
     * @return Google_Picasa_DeleteTag New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/DeleteTag/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteTag choreography.
     *
     * @param Google_Picasa_DeleteTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteTag_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_DeleteTag_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteTag choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteTag_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_DeleteTag_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteTag choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteTag_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteTag input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteTag choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumId input for this DeleteTag choreography.
     *
     * @param int $value (required, integer) The id for the album which has the tagged photo. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setAlbumId($value)
    {
        return $this->set('AlbumId', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteTag choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteTag choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the PhotoID input for this DeleteTag choreography.
     *
     * @param int $value (required, integer) The id for the photo that has a tag to delete.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteTag choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the TagID input for this DeleteTag choreography.
     *
     * @param string $value (required, string) The Id (or tag name) for the tag that you want to delete.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setTagID($value)
    {
        return $this->set('TagID', $value);
    }

    /**
     * Set the value for the UserID input for this DeleteTag choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the DeleteTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteTag choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteTag execution.
     * @param Google_Picasa_DeleteTag $choreo The choregraphy object for this execution.
     * @param Google_Picasa_DeleteTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteTag_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_DeleteTag $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteTag execution.
     *
     * @return Google_Picasa_DeleteTag_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteTag execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_DeleteTag_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_DeleteTag_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteTag choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_DeleteTag_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteTag execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteTag execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Creates an association between the developer and the publisher. If an association already exists, the method does nothing.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AssociateAccount extends Temboo_Choreography
{
    /**
     * Creates an association between the developer and the publisher. If an association already exists, the method does nothing.
     *
     * @param Temboo_Session $session The session that owns this AssociateAccount choreography.
     * @return Google_AdSenseHost_AccountService_AssociateAccount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/AssociateAccount/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AssociateAccount choreography.
     *
     * @param Google_AdSenseHost_AccountService_AssociateAccount_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_AssociateAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_AssociateAccount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AssociateAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_AssociateAccount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AssociateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AssociateAccount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AssociateAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AssociateAccount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the DeveloperURL input for this AssociateAccount choreography.
     *
     * @param string $value (string) The site to be associated with this publisher.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setDeveloperURL($value)
    {
        return $this->set('DeveloperURL', $value);
    }

    /**
     * Set the value for the Email input for this AssociateAccount choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this AssociateAccount choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this AssociateAccount choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Phone input for this AssociateAccount choreography.
     *
     * @param int $value (integer) The last five digits of the publisher's phone number, in the form '99999'.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setPhone($value)
    {
        return $this->set('Phone', $value);
    }

    /**
     * Set the value for the PostalCode input for this AssociateAccount choreography.
     *
     * @param int $value (integer) The publisher's 5-digit postal code.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setPostalCode($value)
    {
        return $this->set('PostalCode', $value);
    }

    /**
     * Set the value for the PublisherEmail input for this AssociateAccount choreography.
     *
     * @param string $value (string) The publisher's email address.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Inputs For method chaining.
     */
    public function setPublisherEmail($value)
    {
        return $this->set('PublisherEmail', $value);
    }
}


/**
 * Execution object for the AssociateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AssociateAccount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AssociateAccount choreography.
     *
     * @param Temboo_Session $session The session that owns this AssociateAccount execution.
     * @param Google_AdSenseHost_AccountService_AssociateAccount $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_AssociateAccount_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_AssociateAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_AssociateAccount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AssociateAccount execution.
     *
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AssociateAccount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_AssociateAccount_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AssociateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AssociateAccount_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AssociateAccount choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_AssociateAccount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AssociateAccount execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Specify whether a user has checked into a place.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests extends Temboo_Choreography
{
    /**
     * Specify whether a user has checked into a place.
     *
     * @param Temboo_Session $session The session that owns this PlaceCheckInRequests choreography.
     * @return Google_Places_PlaceCheckInRequests New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceCheckInRequests/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PlaceCheckInRequests choreography.
     *
     * @param Google_Places_PlaceCheckInRequests_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceCheckInRequests_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceCheckInRequests_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceCheckInRequests_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceCheckInRequests choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceCheckInRequests_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceCheckInRequests_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceCheckInRequests choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PlaceCheckInRequests choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceCheckInRequests_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceCheckInRequests input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceCheckInRequests choreography.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the PlaceReference input for this PlaceCheckInRequests choreography.
     *
     * @param string $value (required, string) The unique place reference. This is returned in the PlaceSearch Choreo.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setPlaceReference($value)
    {
        return $this->set('PlaceReference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceCheckInRequests choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceCheckInRequests choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the PlaceCheckInRequests choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceCheckInRequests choreography.
     *
     * @param Temboo_Session $session The session that owns this PlaceCheckInRequests execution.
     * @param Google_Places_PlaceCheckInRequests $choreo The choregraphy object for this execution.
     * @param Google_Places_PlaceCheckInRequests_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceCheckInRequests_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceCheckInRequests_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceCheckInRequests $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceCheckInRequests execution.
     *
     * @return Google_Places_PlaceCheckInRequests_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PlaceCheckInRequests execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceCheckInRequests_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceCheckInRequests_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PlaceCheckInRequests choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PlaceCheckInRequests choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceCheckInRequests_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PlaceCheckInRequests execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to search for events using a variety of search parameters.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents extends Temboo_Choreography
{
    /**
     * Allows you to search for events using a variety of search parameters.
     *
     * @param Temboo_Session $session The session that owns this SearchEvents choreography.
     * @return Google_Calendar_SearchEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/SearchEvents/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchEvents choreography.
     *
     * @param Google_Calendar_SearchEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_SearchEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_SearchEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchEvents choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this SearchEvents choreography.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchEvents choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchEvents choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the LastModified input for this SearchEvents choreography.
     *
     * @param string $value (optional, date) An event's last modification time (as a RFC 3339 timestamp) to filter by.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setLastModified($value)
    {
        return $this->set('LastModified', $value);
    }

    /**
     * Set the value for the MaxAttendees input for this SearchEvents choreography.
     *
     * @param int $value (optional, integer) The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxAttendees($value)
    {
        return $this->set('MaxAttendees', $value);
    }

    /**
     * Set the value for the MaxResults input for this SearchEvents choreography.
     *
     * @param int $value (optional, integer) The maximum number of events to return on one result page.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the MaxTime input for this SearchEvents choreography.
     *
     * @param string $value (optional, date) The max start time to filter by (formatted like 2012-05-22T00:47:43.000Z).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxTime($value)
    {
        return $this->set('MaxTime', $value);
    }

    /**
     * Set the value for the MinTime input for this SearchEvents choreography.
     *
     * @param string $value (optional, date) The minimum start time to filter by (formatted like 2012-05-22T00:47:43.000Z).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMinTime($value)
    {
        return $this->set('MinTime', $value);
    }

    /**
     * Set the value for the OrderBy input for this SearchEvents choreography.
     *
     * @param string $value (optional, string) The order of the events returned in the result. Accepted values are: "startTime" (ordered by start date/time. Must set SingleEvents to 1 to use this) or "updated" (ordered by modification date/time).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setOrderBy($value)
    {
        return $this->set('OrderBy', $value);
    }

    /**
     * Set the value for the PageToken input for this SearchEvents choreography.
     *
     * @param int $value (optional, integer) Indicates which result page to return. Used for paging through results.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the Query input for this SearchEvents choreography.
     *
     * @param string $value (optional, string) A keyword search to find events.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchEvents choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this SearchEvents choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ShowDeleted input for this SearchEvents choreography.
     *
     * @param bool $value (optional, boolean) Whether to include deleted events. Set to 1 (true) to include deleted events. Defaults to 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setShowDeleted($value)
    {
        return $this->set('ShowDeleted', $value);
    }

    /**
     * Set the value for the ShowHiddenInvitations input for this SearchEvents choreography.
     *
     * @param bool $value (optional, boolean) Whether to include hidden invitations in the result. Set to 1 (true) to enable. The default is 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setShowHiddenInvitations($value)
    {
        return $this->set('ShowHiddenInvitations', $value);
    }

    /**
     * Set the value for the SingleEvent input for this SearchEvents choreography.
     *
     * @param bool $value (optional, boolean) Whether to expand recurring events into instances and only return single one-off events and instances of recurring events. Defaults to 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setSingleEvent($value)
    {
        return $this->set('SingleEvent', $value);
    }

    /**
     * Set the value for the Timezone input for this SearchEvents choreography.
     *
     * @param string $value (optional, string) The time zone used in the response (i.e. America/Los_Angeles). The default is the time zone of the calendar.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setTimezone($value)
    {
        return $this->set('Timezone', $value);
    }
}


/**
 * Execution object for the SearchEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchEvents choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchEvents execution.
     * @param Google_Calendar_SearchEvents $choreo The choregraphy object for this execution.
     * @param Google_Calendar_SearchEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_SearchEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchEvents execution.
     *
     * @return Google_Calendar_SearchEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_SearchEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_SearchEvents_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchEvents choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_SearchEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchEvents execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this SearchEvents execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Get all ad unit types compatible with a particular ad layout.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes extends Temboo_Choreography
{
    /**
     * Get all ad unit types compatible with a particular ad layout.
     *
     * @param Temboo_Session $session The session that owns this GetAdUnitTypes choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetAdUnitTypes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAdUnitTypes choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAdUnitTypes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAdUnitTypes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAdUnitTypes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AdLayout input for this GetAdUnitTypes choreography.
     *
     * @param string $value (string) The type of ad layout desired. Values are width x height in pixels, e.g. '728x90'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setAdLayout($value)
    {
        return $this->set('AdLayout', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAdUnitTypes choreography.
     *
     * @param string $value (string) The ID of the publisher to get the ad unit types of.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAdUnitTypes choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAdUnitTypes choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAdUnitTypes choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAdUnitTypes choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAdUnitTypes execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAdUnitTypes execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAdUnitTypes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAdUnitTypes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAdUnitTypes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAdUnitTypes execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Converts a human-readable address into geographic coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress extends Temboo_Choreography
{
    /**
     * Converts a human-readable address into geographic coordinates.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByAddress choreography.
     * @return Google_Geocoding_GeocodeByAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Geocoding/GeocodeByAddress/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GeocodeByAddress choreography.
     *
     * @param Google_Geocoding_GeocodeByAddress_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Geocoding_GeocodeByAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GeocodeByAddress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Geocoding_GeocodeByAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GeocodeByAddress choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GeocodeByAddress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GeocodeByAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Address input for this GeocodeByAddress choreography.
     *
     * @param string $value (string) The address that you want to geocode.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setAddress($value)
    {
        return $this->set('Address', $value);
    }

    /**
     * Set the value for the Bounds input for this GeocodeByAddress choreography.
     *
     * @param string $value (optional, string) The bounding box of the viewport within which to bias geocode results more prominently.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setBounds($value)
    {
        return $this->set('Bounds', $value);
    }

    /**
     * Set the value for the Language input for this GeocodeByAddress choreography.
     *
     * @param string $value (optional, string) The language in which to return results. Defaults to 'en' (English).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Region input for this GeocodeByAddress choreography.
     *
     * @param string $value (optional, string) The region code, specified as a ccTLD ("top-level domain") two-character value. Defaults to 'us' (United States).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GeocodeByAddress choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the geocoding request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GeocodeByAddress choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GeocodeByAddress choreography.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByAddress execution.
     * @param Google_Geocoding_GeocodeByAddress $choreo The choregraphy object for this execution.
     * @param Google_Geocoding_GeocodeByAddress_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Geocoding_GeocodeByAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GeocodeByAddress execution.
     *
     * @return Google_Geocoding_GeocodeByAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GeocodeByAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Geocoding_GeocodeByAddress_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GeocodeByAddress choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GeocodeByAddress choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GeocodeByAddress execution.
     *
     * @return string (XML) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Copies a document with the title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument extends Temboo_Choreography
{
    /**
     * Copies a document with the title you specify.
     *
     * @param Temboo_Session $session The session that owns this CopyDocument choreography.
     * @return Google_Documents_CopyDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CopyDocument/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CopyDocument choreography.
     *
     * @param Google_Documents_CopyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CopyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CopyDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CopyDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CopyDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CopyDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CopyDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CopyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CopyDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CopyDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CopyDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewTitle input for this CopyDocument choreography.
     *
     * @param string $value (required, string) The title for the new, copied document.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setNewTitle($value)
    {
        return $this->set('NewTitle', $value);
    }

    /**
     * Set the value for the Password input for this CopyDocument choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CopyDocument choreography.
     *
     * @param string $value (required, string) The title of the document to copy. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CopyDocument choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CopyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CopyDocument choreography.
     *
     * @param Temboo_Session $session The session that owns this CopyDocument execution.
     * @param Google_Documents_CopyDocument $choreo The choregraphy object for this execution.
     * @param Google_Documents_CopyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CopyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CopyDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CopyDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CopyDocument execution.
     *
     * @return Google_Documents_CopyDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CopyDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CopyDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CopyDocument_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CopyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CopyDocument choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CopyDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CopyDocument execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Set the user's preferred locale (language). All correspondence with the user will occur in this locale.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetUsersPreferredLocale extends Temboo_Choreography
{
    /**
     * Set the user's preferred locale (language). All correspondence with the user will occur in this locale.
     *
     * @param Temboo_Session $session The session that owns this SetUsersPreferredLocale choreography.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/SetUsersPreferredLocale/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SetUsersPreferredLocale choreography.
     *
     * @param Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetUsersPreferredLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SetUsersPreferredLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetUsersPreferredLocale input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this SetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The ID of the publisher to set the local preference for.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this SetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this SetUsersPreferredLocale choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this SetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the UsersPreferredLocale input for this SetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The user's preferred locale (language), e.g. 'en' for English.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setUsersPreferredLocale($value)
    {
        return $this->set('UsersPreferredLocale', $value);
    }
}


/**
 * Execution object for the SetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetUsersPreferredLocale choreography.
     *
     * @param Temboo_Session $session The session that owns this SetUsersPreferredLocale execution.
     * @param Google_AdSenseHost_AccountService_SetUsersPreferredLocale $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_SetUsersPreferredLocale $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetUsersPreferredLocale execution.
     *
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SetUsersPreferredLocale execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SetUsersPreferredLocale choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_SetUsersPreferredLocale_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SetUsersPreferredLocale execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Move the document or file you specify to the Google Documents trash.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile extends Temboo_Choreography
{
    /**
     * Move the document or file you specify to the Google Documents trash.
     *
     * @param Temboo_Session $session The session that owns this TrashDocumentOrFile choreography.
     * @return Google_Documents_TrashDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/TrashDocumentOrFile/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this TrashDocumentOrFile choreography.
     *
     * @param Google_Documents_TrashDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_TrashDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_TrashDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_TrashDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TrashDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_TrashDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_TrashDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TrashDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the TrashDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_TrashDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TrashDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this TrashDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this TrashDocumentOrFile choreography.
     *
     * @param string $value (required, string) The title of the document or file to trash. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this TrashDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the TrashDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TrashDocumentOrFile choreography.
     *
     * @param Temboo_Session $session The session that owns this TrashDocumentOrFile execution.
     * @param Google_Documents_TrashDocumentOrFile $choreo The choregraphy object for this execution.
     * @param Google_Documents_TrashDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_TrashDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_TrashDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_TrashDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TrashDocumentOrFile execution.
     *
     * @return Google_Documents_TrashDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this TrashDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_TrashDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_TrashDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the TrashDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the TrashDocumentOrFile choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_TrashDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this TrashDocumentOrFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ResourceID" output from this TrashDocumentOrFile execution.
     *
     * @return string (string) The resource ID for the document to trash as returned by Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
}

/**
 * Request an authorization token for Google Documents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Documents.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication choreography.
     * @return Google_Spreadsheets_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/ClientLoginAuthentication/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication choreography.
     *
     * @param Google_Spreadsheets_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Service input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (string) The service that you are requesting an authorization token for. Defaults to 'wise' for Spreadsheets API.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setService($value)
    {
        return $this->set('Service', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication choreography.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Spreadsheets_ClientLoginAuthentication $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ClientLoginAuthentication choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The auth token parsed from the Google login response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
}

/**
 * Retrieve data for all groups in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups extends Temboo_Choreography
{
    /**
     * Retrieve data for all groups in an account.
     *
     * @param Temboo_Session $session The session that owns this GetAllGroups choreography.
     * @return Google_Contacts_GetAllGroups New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetAllGroups/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllGroups choreography.
     *
     * @param Google_Contacts_GetAllGroups_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllGroups_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetAllGroups_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllGroups choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllGroups_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetAllGroups_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllGroups choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllGroups choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllGroups_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllGroups input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllGroups choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllGroups choreography.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllGroups choreography.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllGroups choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the GetAllGroups choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllGroups choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllGroups execution.
     * @param Google_Contacts_GetAllGroups $choreo The choregraphy object for this execution.
     * @param Google_Contacts_GetAllGroups_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllGroups_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetAllGroups $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllGroups execution.
     *
     * @return Google_Contacts_GetAllGroups_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllGroups execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetAllGroups_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetAllGroups_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllGroups choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllGroups choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetAllGroups_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllGroups execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetAllGroups execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Obtain travel distances and times for a martix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain travel distances and times for a martix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this DrivingDistanceMatrix choreography.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/DrivingDistanceMatrix/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DrivingDistanceMatrix choreography.
     *
     * @param Google_DistanceMatrix_DrivingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_DrivingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DrivingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DrivingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DrivingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DrivingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Avoid input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Specify whether the calculated directions should avoid the following features: tolls, or highways.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setAvoid($value)
    {
        return $this->set('Avoid', $value);
    }

    /**
     * Set the value for the Destinations input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this DrivingDistanceMatrix choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this DrivingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the DrivingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DrivingDistanceMatrix choreography.
     *
     * @param Temboo_Session $session The session that owns this DrivingDistanceMatrix execution.
     * @param Google_DistanceMatrix_DrivingDistanceMatrix $choreo The choregraphy object for this execution.
     * @param Google_DistanceMatrix_DrivingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_DrivingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_DrivingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DrivingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DrivingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DrivingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DrivingDistanceMatrix choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DrivingDistanceMatrix execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new event in a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent extends Temboo_Choreography
{
    /**
     * Create a new event in a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this CreateEvent choreography.
     * @return Google_Calendar_CreateEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/CreateEvent/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateEvent choreography.
     *
     * @param Google_Calendar_CreateEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_CreateEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_CreateEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateEvent choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The ID for the calendar in which to add the event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EndDate input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The end date of the event, in the format "2012-04-10".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the EndTime input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The end time for the event, in the format "10:30:00".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEndTime($value)
    {
        return $this->set('EndTime', $value);
    }

    /**
     * Set the value for the EventDescription input for this CreateEvent choreography.
     *
     * @param string $value (optional, string) A short description of the event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventDescription($value)
    {
        return $this->set('EventDescription', $value);
    }

    /**
     * Set the value for the EventLocation input for this CreateEvent choreography.
     *
     * @param string $value (optional, string) The location for the new event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventLocation($value)
    {
        return $this->set('EventLocation', $value);
    }

    /**
     * Set the value for the EventTitle input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The title for the new event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventTitle($value)
    {
        return $this->set('EventTitle', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateEvent choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the StartDate input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The start date of the event, in the format "2012-11-03".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the StartTime input for this CreateEvent choreography.
     *
     * @param string $value (required, string) The start time for the event, in the format "10:00:00".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setStartTime($value)
    {
        return $this->set('StartTime', $value);
    }
}


/**
 * Execution object for the CreateEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateEvent choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateEvent execution.
     * @param Google_Calendar_CreateEvent $choreo The choregraphy object for this execution.
     * @param Google_Calendar_CreateEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_CreateEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateEvent execution.
     *
     * @return Google_Calendar_CreateEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_CreateEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_CreateEvent_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateEvent choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_CreateEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "CreateEvent" output from this CreateEvent execution.
     *
     * @return string The request template with appropriate inputs passed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCreateEvent()
    {
        return $this->get('CreateEvent');
    }

    /**
     * Retrieve the value for the "Response" output from this CreateEvent execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "TimezoneSetting" output from this CreateEvent execution.
     *
     * @return string (string) The timezone setting retrieved from the specified calendar.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getTimezoneSetting()
    {
        return $this->get('TimezoneSetting');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this CreateEvent execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Creates a tag for a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto extends Temboo_Choreography
{
    /**
     * Creates a tag for a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this TagPhoto choreography.
     * @return Google_Picasa_TagPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/TagPhoto/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this TagPhoto choreography.
     *
     * @param Google_Picasa_TagPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_TagPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_TagPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_TagPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TagPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_TagPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_TagPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TagPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the TagPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_TagPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TagPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this TagPhoto choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this TagPhoto choreography.
     *
     * @param int $value (required, integer) The id of the album which contains the photo you want to tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this TagPhoto choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this TagPhoto choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the PhotoID input for this TagPhoto choreography.
     *
     * @param int $value (required, integer) The id of the photo you want to tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this TagPhoto choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Tag input for this TagPhoto choreography.
     *
     * @param string $value (required, string) The text for the photo tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setTag($value)
    {
        return $this->set('Tag', $value);
    }

    /**
     * Set the value for the UserID input for this TagPhoto choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to "default" which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the TagPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TagPhoto choreography.
     *
     * @param Temboo_Session $session The session that owns this TagPhoto execution.
     * @param Google_Picasa_TagPhoto $choreo The choregraphy object for this execution.
     * @param Google_Picasa_TagPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_TagPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_TagPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_TagPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TagPhoto execution.
     *
     * @return Google_Picasa_TagPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this TagPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_TagPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_TagPhoto_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the TagPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the TagPhoto choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_TagPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this TagPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this TagPhoto execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Creates a new AdSense account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_CreateAccount extends Temboo_Choreography
{
    /**
     * Creates a new AdSense account.
     *
     * @param Temboo_Session $session The session that owns this CreateAccount choreography.
     * @return Google_AdSenseHost_AccountService_CreateAccount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/CreateAccount/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateAccount choreography.
     *
     * @param Google_AdSenseHost_AccountService_CreateAccount_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_CreateAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_CreateAccount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_CreateAccount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_CreateAccount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateAccount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateAccount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AddContentAds input for this CreateAccount choreography.
     *
     * @param bool $value (boolean) Pass in '1' to add ContentAds syndication service, '0' to omit.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setAddContentAds($value)
    {
        return $this->set('AddContentAds', $value);
    }

    /**
     * Set the value for the AddSearchAds input for this CreateAccount choreography.
     *
     * @param bool $value (boolean) Pass in '1' to add SearchAds syndication service, '0' to omit.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setAddSearchAds($value)
    {
        return $this->set('AddSearchAds', $value);
    }

    /**
     * Set the value for the DeveloperURL input for this CreateAccount choreography.
     *
     * @param string $value (string) The site to be associated with this publisher.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setDeveloperURL($value)
    {
        return $this->set('DeveloperURL', $value);
    }

    /**
     * Set the value for the EmailPromotionsPreferences input for this CreateAccount choreography.
     *
     * @param bool $value (boolean) Email promotions preferences for the new account. Pass in '1' to enable and '0' to disable.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setEmailPromotionsPreferences($value)
    {
        return $this->set('EmailPromotionsPreferences', $value);
    }

    /**
     * Set the value for the Email input for this CreateAccount choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this CreateAccount choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the EntityType input for this CreateAccount choreography.
     *
     * @param string $value (string) One of 'Individual' or 'Business'.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setEntityType($value)
    {
        return $this->set('EntityType', $value);
    }

    /**
     * Set the value for the LoginEmail input for this CreateAccount choreography.
     *
     * @param string $value (string) The login email for the new account
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setLoginEmail($value)
    {
        return $this->set('LoginEmail', $value);
    }

    /**
     * Set the value for the Password input for this CreateAccount choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the CreateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_CreateAccount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateAccount choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateAccount execution.
     * @param Google_AdSenseHost_AccountService_CreateAccount $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_CreateAccount_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_CreateAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_CreateAccount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateAccount execution.
     *
     * @return Google_AdSenseHost_AccountService_CreateAccount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateAccount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_CreateAccount_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateAccount choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_CreateAccount_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateAccount choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_CreateAccount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateAccount execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Grants a new user read/write access to an existing document.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission extends Temboo_Choreography
{
    /**
     * Grants a new user read/write access to an existing document.
     *
     * @param Temboo_Session $session The session that owns this CreateSharingPermission choreography.
     * @return Google_Documents_CreateSharingPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CreateSharingPermission/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateSharingPermission choreography.
     *
     * @param Google_Documents_CreateSharingPermission_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateSharingPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateSharingPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CreateSharingPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSharingPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateSharingPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CreateSharingPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSharingPermission choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateSharingPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateSharingPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSharingPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewUserEmail input for this CreateSharingPermission choreography.
     *
     * @param string $value (required, string) The email address of the user to whom you want to grant permission.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setNewUserEmail($value)
    {
        return $this->set('NewUserEmail', $value);
    }

    /**
     * Set the value for the Password input for this CreateSharingPermission choreography.
     *
     * @param string $value (required, string) Your Google passsword.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Role input for this CreateSharingPermission choreography.
     *
     * @param string $value (optional, string) The role that will be given to the new user permission (i.e., writer, reader, etc). Defaults to "writer".
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setRole($value)
    {
        return $this->set('Role', $value);
    }

    /**
     * Set the value for the Username input for this CreateSharingPermission choreography.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CreateSharingPermission choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSharingPermission choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateSharingPermission execution.
     * @param Google_Documents_CreateSharingPermission $choreo The choregraphy object for this execution.
     * @param Google_Documents_CreateSharingPermission_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateSharingPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateSharingPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CreateSharingPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSharingPermission execution.
     *
     * @return Google_Documents_CreateSharingPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateSharingPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CreateSharingPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CreateSharingPermission_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateSharingPermission choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateSharingPermission choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CreateSharingPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateSharingPermission execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ResourceID" output from this CreateSharingPermission execution.
     *
     * @return string (string) The resource ID of the document to which you want to add a user.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
}

/**
 * Request an authorization token for Google Documents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Documents.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication choreography.
     * @return Google_Documents_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/ClientLoginAuthentication/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication choreography.
     *
     * @param Google_Documents_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Documents_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (required, string) Your Google password.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication choreography.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Documents_ClientLoginAuthentication $choreo The choregraphy object for this execution.
     * @param Google_Documents_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Documents_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Documents_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ClientLoginAuthentication choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) Stores the response from Google login.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The authorization token parsed from the Google login response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
}

/**
 * Uploads MS Word, Excel, or plain text documents to a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile extends Temboo_Choreography
{
    /**
     * Uploads MS Word, Excel, or plain text documents to a Google account.
     *
     * @param Temboo_Session $session The session that owns this UploadFile choreography.
     * @return Google_Documents_UploadFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/UploadFile/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UploadFile choreography.
     *
     * @param Google_Documents_UploadFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UploadFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UploadFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_UploadFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UploadFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UploadFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_UploadFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UploadFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UploadFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UploadFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UploadFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this UploadFile choreography.
     *
     * @param string $value (conditional, string) The base64-encoded contents of the file you want to upload. Required unless using the VaultFile alias input (an advnaced option used when running Choreos in the Temboo Designer).
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the ContentType input for this UploadFile choreography.
     *
     * @param string $value (required, string) Enter the content type for the file. Currently, the supported content types are: application/pdf, application/rtf, application/msword, application/vnd.ms-excel, text/plain, and text/csv.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the Password input for this UploadFile choreography.
     *
     * @param string $value (required, string) The password for your Google account.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this UploadFile choreography.
     *
     * @param string $value (required, string) The name for the file you're uploading.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this UploadFile choreography.
     *
     * @param string $value (required, string) The email address for your Google account.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

}


/**
 * Execution object for the UploadFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UploadFile choreography.
     *
     * @param Temboo_Session $session The session that owns this UploadFile execution.
     * @param Google_Documents_UploadFile $choreo The choregraphy object for this execution.
     * @param Google_Documents_UploadFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UploadFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UploadFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_UploadFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UploadFile execution.
     *
     * @return Google_Documents_UploadFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UploadFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_UploadFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_UploadFile_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UploadFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UploadFile choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_UploadFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UploadFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the active Channels associated with this syndication service for the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetActiveChannels extends Temboo_Choreography
{
    /**
     * Returns the active Channels associated with this syndication service for the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetActiveChannels choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetActiveChannels/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetActiveChannels choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetActiveChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetActiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetActiveChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetActiveChannels input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ChannelService_Type input for this GetActiveChannels choreography.
     *
     * @param string $value (string) One of 'Url' or 'Custom'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setChannelService_Type($value)
    {
        return $this->set('ChannelService_Type', $value);
    }

    /**
     * Set the value for the ClientID input for this GetActiveChannels choreography.
     *
     * @param string $value (string) The ID of the publisher to get active channels of.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetActiveChannels choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetActiveChannels choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetActiveChannels choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetActiveChannels choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetActiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetActiveChannels choreography.
     *
     * @param Temboo_Session $session The session that owns this GetActiveChannels execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetActiveChannels $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetActiveChannels $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetActiveChannels execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetActiveChannels execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetActiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetActiveChannels choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetActiveChannels_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetActiveChannels execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain elevation information for a path generated by a set of geo-coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation extends Temboo_Choreography
{
    /**
     * Obtain elevation information for a path generated by a set of geo-coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetLocationElevation choreography.
     * @return Google_Elevation_GetLocationElevation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Elevation/GetLocationElevation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetLocationElevation choreography.
     *
     * @param Google_Elevation_GetLocationElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetLocationElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetLocationElevation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Elevation_GetLocationElevation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLocationElevation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetLocationElevation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Elevation_GetLocationElevation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLocationElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetLocationElevation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetLocationElevation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLocationElevation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Locations input for this GetLocationElevation choreography.
     *
     * @param string $value (required, string) Enter the location(s) for which elevation data will be obtained.  Input formats: a single latitude/longitude coordinate pair; an array of coordinates separated by a |. A set of encoded coordinates.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setLocations($value)
    {
        return $this->set('Locations', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetLocationElevation choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this GetLocationElevation choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GetLocationElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLocationElevation choreography.
     *
     * @param Temboo_Session $session The session that owns this GetLocationElevation execution.
     * @param Google_Elevation_GetLocationElevation $choreo The choregraphy object for this execution.
     * @param Google_Elevation_GetLocationElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetLocationElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetLocationElevation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Elevation_GetLocationElevation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLocationElevation execution.
     *
     * @return Google_Elevation_GetLocationElevation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetLocationElevation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Elevation_GetLocationElevation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Elevation_GetLocationElevation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetLocationElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetLocationElevation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Elevation_GetLocationElevation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetLocationElevation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a person's profile.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get extends Temboo_Choreography
{
    /**
     * Retrieves a person's profile.
     *
     * @param Temboo_Session $session The session that owns this Get choreography.
     * @return Google_Plus_People_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/Get/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Get choreography.
     *
     * @param Google_Plus_People_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Get choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this Get choreography.
     *
     * @param string $value (optional, string) The ID of the person to get the profile for. The value "me" is set as the default to indicate the authenticated user.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

    /**
     * Set the value for the UserIP input for this Get choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get choreography.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_People_Get $choreo The choregraphy object for this execution.
     * @param Google_Plus_People_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_People_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_Get_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Get choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this Get execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns the AssociationStatus for the provided list of clients.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkAssociationStatus extends Temboo_Choreography
{
    /**
     * Returns the AssociationStatus for the provided list of clients.
     *
     * @param Temboo_Session $session The session that owns this GetBulkAssociationStatus choreography.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetBulkAssociationStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBulkAssociationStatus choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBulkAssociationStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBulkAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBulkAssociationStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBulkAssociationStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientIDs input for this GetBulkAssociationStatus choreography.
     *
     * @param string $value (string) A comma-separated list of ClientIDs.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function setClientIDs($value)
    {
        return $this->set('ClientIDs', $value);
    }

    /**
     * Set the value for the Email input for this GetBulkAssociationStatus choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetBulkAssociationStatus choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetBulkAssociationStatus choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetBulkAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBulkAssociationStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBulkAssociationStatus execution.
     * @param Google_AdSenseHost_AccountService_GetBulkAssociationStatus $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetBulkAssociationStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBulkAssociationStatus execution.
     *
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBulkAssociationStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBulkAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBulkAssociationStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkAssociationStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBulkAssociationStatus execution.
     *
     * @return string 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Converts latitude and longitude coordinates into a human-readable address.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates extends Temboo_Choreography
{
    /**
     * Converts latitude and longitude coordinates into a human-readable address.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByCoordinates choreography.
     * @return Google_Geocoding_GeocodeByCoordinates New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Geocoding/GeocodeByCoordinates/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GeocodeByCoordinates choreography.
     *
     * @param Google_Geocoding_GeocodeByCoordinates_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByCoordinates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByCoordinates_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Geocoding_GeocodeByCoordinates_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GeocodeByCoordinates choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Geocoding_GeocodeByCoordinates_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GeocodeByCoordinates choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GeocodeByCoordinates choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GeocodeByCoordinates input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Bounds input for this GeocodeByCoordinates choreography.
     *
     * @param string $value (optional, string) The bounding box of the viewport within which to bias geocode results more prominently.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setBounds($value)
    {
        return $this->set('Bounds', $value);
    }

    /**
     * Set the value for the Language input for this GeocodeByCoordinates choreography.
     *
     * @param string $value (optional, string) The language in which to return results. Defaults to 'en' (English).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Latitude input for this GeocodeByCoordinates choreography.
     *
     * @param float $value (decimal) The latitude value for which you wish to obtain the closest, human-readable address.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this GeocodeByCoordinates choreography.
     *
     * @param float $value (decimal) The longitude value for which you wish to obtain the closest, human-readable address.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the Region input for this GeocodeByCoordinates choreography.
     *
     * @param string $value (optional, string) The region code, specified as a ccTLD ("top-level domain") two-character value. Defaults to 'us' (United States).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GeocodeByCoordinates choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the geocoding request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GeocodeByCoordinates choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GeocodeByCoordinates choreography.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByCoordinates execution.
     * @param Google_Geocoding_GeocodeByCoordinates $choreo The choregraphy object for this execution.
     * @param Google_Geocoding_GeocodeByCoordinates_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByCoordinates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByCoordinates_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Geocoding_GeocodeByCoordinates $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GeocodeByCoordinates execution.
     *
     * @return Google_Geocoding_GeocodeByCoordinates_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GeocodeByCoordinates execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Geocoding_GeocodeByCoordinates_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GeocodeByCoordinates choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GeocodeByCoordinates choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GeocodeByCoordinates execution.
     *
     * @return string (XML) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Request an authorization token for Google Analytics.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Analytics.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication choreography.
     * @return Google_Analytics_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Analytics/ClientLoginAuthentication/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication choreography.
     *
     * @param Google_Analytics_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Analytics_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Analytics_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Analytics_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ClientLoginAuthentication choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (required, string) Your Google password.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication choreography.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication choreography.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Analytics_ClientLoginAuthentication $choreo The choregraphy object for this execution.
     * @param Google_Analytics_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Analytics_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Analytics_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Analytics_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Analytics_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ClientLoginAuthentication choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ClientLoginAuthentication choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The authorization key which is parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
}

/**
 * Charge and ship an order once a shopping cart order has arrived in your Google Checkout Inbox.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder extends Temboo_Choreography
{
    /**
     * Charge and ship an order once a shopping cart order has arrived in your Google Checkout Inbox.
     *
     * @param Temboo_Session $session The session that owns this ChargeAndShipOrder choreography.
     * @return Google_Checkout_ChargeAndShipOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/ChargeAndShipOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ChargeAndShipOrder choreography.
     *
     * @param Google_Checkout_ChargeAndShipOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_ChargeAndShipOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_ChargeAndShipOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_ChargeAndShipOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ChargeAndShipOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_ChargeAndShipOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ChargeAndShipOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ChargeAndShipOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ChargeAndShipOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Amount input for this ChargeAndShipOrder choreography.
     *
     * @param float $value (decimal) The dollar amount to charge (i.e. 25.50)
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setAmount($value)
    {
        return $this->set('Amount', $value);
    }

    /**
     * Set the value for the Carrier input for this ChargeAndShipOrder choreography.
     *
     * @param string $value (string) The desired postal carrier (i.e. UPS)
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setCarrier($value)
    {
        return $this->set('Carrier', $value);
    }

    /**
     * Set the value for the Endpoint input for this ChargeAndShipOrder choreography.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this ChargeAndShipOrder choreography.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this ChargeAndShipOrder choreography.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this ChargeAndShipOrder choreography.
     *
     * @param int $value (integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the TrackingNumber input for this ChargeAndShipOrder choreography.
     *
     * @param string $value (string) The tracking number for the order package
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setTrackingNumber($value)
    {
        return $this->set('TrackingNumber', $value);
    }
}


/**
 * Execution object for the ChargeAndShipOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ChargeAndShipOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this ChargeAndShipOrder execution.
     * @param Google_Checkout_ChargeAndShipOrder $choreo The choregraphy object for this execution.
     * @param Google_Checkout_ChargeAndShipOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_ChargeAndShipOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_ChargeAndShipOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_ChargeAndShipOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ChargeAndShipOrder execution.
     *
     * @return Google_Checkout_ChargeAndShipOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ChargeAndShipOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_ChargeAndShipOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ChargeAndShipOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ChargeAndShipOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ChargeAndShipOrder execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of spreadsheets that exist in your Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets extends Temboo_Choreography
{
    /**
     * Retrieves a list of spreadsheets that exist in your Google account.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheets choreography.
     * @return Google_Spreadsheets_RetrieveSpreadsheets New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpreadsheets/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveSpreadsheets choreography.
     *
     * @param Google_Spreadsheets_RetrieveSpreadsheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpreadsheets choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpreadsheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveSpreadsheets choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpreadsheets input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveSpreadsheets choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpreadsheets choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveSpreadsheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpreadsheets choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheets execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheets $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpreadsheets $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpreadsheets execution.
     *
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveSpreadsheets execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveSpreadsheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveSpreadsheets choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveSpreadsheets execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sends an email using a specified Gmail account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail extends Temboo_Choreography
{
    /**
     * Sends an email using a specified Gmail account.
     *
     * @param Temboo_Session $session The session that owns this SendEmail choreography.
     * @return Google_Gmail_SendEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Gmail/SendEmail/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SendEmail choreography.
     *
     * @param Google_Gmail_SendEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_SendEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_SendEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Gmail_SendEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SendEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_SendEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Gmail_SendEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SendEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SendEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_SendEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SendEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the BCC input for this SendEmail choreography.
     *
     * @param string $value (optional, string) An email address to BCC on the email you're sending. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setBCC($value)
    {
        return $this->set('BCC', $value);
    }

    /**
     * Set the value for the CC input for this SendEmail choreography.
     *
     * @param string $value (optional, string) An email address to CC on the email you're sending. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setCC($value)
    {
        return $this->set('CC', $value);
    }

    /**
     * Set the value for the MessageBody input for this SendEmail choreography.
     *
     * @param string $value (required, string) The message body for the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setMessageBody($value)
    {
        return $this->set('MessageBody', $value);
    }

    /**
     * Set the value for the Password input for this SendEmail choreography.
     *
     * @param string $value (required, string) Your Gmail password.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Subject input for this SendEmail choreography.
     *
     * @param string $value (required, string) The subject line of the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setSubject($value)
    {
        return $this->set('Subject', $value);
    }

    /**
     * Set the value for the ToAddress input for this SendEmail choreography.
     *
     * @param string $value (required, string) The email address that you want to send an email to. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setToAddress($value)
    {
        return $this->set('ToAddress', $value);
    }

    /**
     * Set the value for the Username input for this SendEmail choreography.
     *
     * @param string $value (required, string) Your Gmail email address. Note, this will used to authenticate your account and as the From Address for the email you are sending.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SendEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SendEmail choreography.
     *
     * @param Temboo_Session $session The session that owns this SendEmail execution.
     * @param Google_Gmail_SendEmail $choreo The choregraphy object for this execution.
     * @param Google_Gmail_SendEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_SendEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_SendEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Gmail_SendEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SendEmail execution.
     *
     * @return Google_Gmail_SendEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SendEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Gmail_SendEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Gmail_SendEmail_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SendEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SendEmail choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Gmail_SendEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
}

/**
 * Permanently deletes the document or file you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile extends Temboo_Choreography
{
    /**
     * Permanently deletes the document or file you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteDocumentOrFile choreography.
     * @return Google_Documents_DeleteDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/DeleteDocumentOrFile/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteDocumentOrFile choreography.
     *
     * @param Google_Documents_DeleteDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_DeleteDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DeleteDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_DeleteDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_DeleteDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this DeleteDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ResourceID input for this DeleteDocumentOrFile choreography.
     *
     * @param string $value (required, string) The resource ID for the document or file to delete.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setResourceID($value)
    {
        return $this->set('ResourceID', $value);
    }

    /**
     * Set the value for the Username input for this DeleteDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DeleteDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDocumentOrFile choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteDocumentOrFile execution.
     * @param Google_Documents_DeleteDocumentOrFile $choreo The choregraphy object for this execution.
     * @param Google_Documents_DeleteDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_DeleteDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DeleteDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_DeleteDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDocumentOrFile execution.
     *
     * @return Google_Documents_DeleteDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_DeleteDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteDocumentOrFile choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteDocumentOrFile execution.
     *
     * @return string There is no XML response for delete requests.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet extends Temboo_Choreography
{
    /**
     * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedSpreadsheet choreography.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DownloadBase64EncodedSpreadsheet/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DownloadBase64EncodedSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DownloadBase64EncodedSpreadsheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Format input for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param string $value (optional, string) The format you want to export the spreadsheet to, such as "txt" or "pdf". The default download format is "txt".
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setFormat($value)
    {
        return $this->set('Format', $value);
    }

    /**
     * Set the value for the Link input for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param string $value (conditional, string) Enter the source links for the document to be retrieved. Required if Title is not specified.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setLink($value)
    {
        return $this->set('Link', $value);
    }

    /**
     * Set the value for the Password input for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param string $value (conditional, string) The title of the document to download. Required if the source Link is not specifed.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DownloadBase64EncodedSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedSpreadsheet execution.
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DownloadBase64EncodedSpreadsheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DownloadBase64EncodedSpreadsheet execution.
     *
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DownloadBase64EncodedSpreadsheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DownloadBase64EncodedSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DownloadBase64EncodedSpreadsheet choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "FileContents" output from this DownloadBase64EncodedSpreadsheet execution.
     *
     * @return string (string) The Base64 encoded file content of the downloaded file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileContents()
    {
        return $this->get('FileContents');
    }
}

/**
 * Obtain bicycling distances and times for a martix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain bicycling distances and times for a martix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this BicyclingDistanceMatrix choreography.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/BicyclingDistanceMatrix/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this BicyclingDistanceMatrix choreography.
     *
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this BicyclingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the BicyclingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the BicyclingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this BicyclingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destinations input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this BicyclingDistanceMatrix choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this BicyclingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the BicyclingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the BicyclingDistanceMatrix choreography.
     *
     * @param Temboo_Session $session The session that owns this BicyclingDistanceMatrix execution.
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix $choreo The choregraphy object for this execution.
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_BicyclingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this BicyclingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this BicyclingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the BicyclingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the BicyclingDistanceMatrix choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this BicyclingDistanceMatrix execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a given activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get extends Temboo_Choreography
{
    /**
     * Retrieves a given activity.
     *
     * @param Temboo_Session $session The session that owns this Get choreography.
     * @return Google_Plus_Activities_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/Get/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Get choreography.
     *
     * @param Google_Plus_Activities_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this Get choreography.
     *
     * @param string $value (required, string) The ID of the activity to get.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this Get choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Get choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get choreography.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_Activities_Get $choreo The choregraphy object for this execution.
     * @param Google_Plus_Activities_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_Activities_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_Get_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Get choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this Get execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Delete a collection of named ad styles from this service.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles extends Temboo_Choreography
{
    /**
     * Delete a collection of named ad styles from this service.
     *
     * @param Temboo_Session $session The session that owns this DeleteAdStyles choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/DeleteAdStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteAdStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAdStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AdStyleNames input for this DeleteAdStyles choreography.
     *
     * @param string $value (string) A comma-separated list of ad styles to delete.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setAdStyleNames($value)
    {
        return $this->set('AdStyleNames', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAdStyles choreography.
     *
     * @param string $value (string) The ID of the publisher from whom this ad style will be deleted.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this DeleteAdStyles choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteAdStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this DeleteAdStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this DeleteAdStyles choreography.
     *
     * @param string $value (string) The ID for this publisher's AFC syndication service. May be identical to the ClientID.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the DeleteAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAdStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteAdStyles execution.
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAdStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteAdStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteAdStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteAdStyles execution.
     *
     * @return string 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a specific location from a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation extends Temboo_Choreography
{
    /**
     * Retrieves a specific location from a user's location history.
     *
     * @param Temboo_Session $session The session that owns this RetrievePastLocation choreography.
     * @return Google_Latitude_RetrievePastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/RetrievePastLocation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrievePastLocation choreography.
     *
     * @param Google_Latitude_RetrievePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_RetrievePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_RetrievePastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_RetrievePastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrievePastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_RetrievePastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_RetrievePastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrievePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrievePastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_RetrievePastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrievePastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrievePastLocation choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrievePastLocation choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrievePastLocation choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this RetrievePastLocation choreography.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is: city.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the LocationID input for this RetrievePastLocation choreography.
     *
     * @param string $value (required, date) The timestamp of a location as specified by its timestampMs property.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setLocationID($value)
    {
        return $this->set('LocationID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrievePastLocation choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the RetrievePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrievePastLocation choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrievePastLocation execution.
     * @param Google_Latitude_RetrievePastLocation $choreo The choregraphy object for this execution.
     * @param Google_Latitude_RetrievePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_RetrievePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_RetrievePastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_RetrievePastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrievePastLocation execution.
     *
     * @return Google_Latitude_RetrievePastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrievePastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_RetrievePastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_RetrievePastLocation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrievePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrievePastLocation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_RetrievePastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrievePastLocation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this RetrievePastLocation execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Deletes a collection of named search result styles from this service.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles extends Temboo_Choreography
{
    /**
     * Deletes a collection of named search result styles from this service.
     *
     * @param Temboo_Session $session The session that owns this DeleteSearchResultStyles choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/DeleteSearchResultStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteSearchResultStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSearchResultStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SearchResultStyleNames input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (string) a comma-separated list of search result style names.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setSearchResultStyleNames($value)
    {
        return $this->set('SearchResultStyleNames', $value);
    }

    /**
     * Set the value for the SynServiceID input for this DeleteSearchResultStyles choreography.
     *
     * @param string $value (string) The ID for this service.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the DeleteSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSearchResultStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteSearchResultStyles execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSearchResultStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteSearchResultStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteSearchResultStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteSearchResultStyles execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified worksheet from an existing spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet extends Temboo_Choreography
{
    /**
     * Deletes a specified worksheet from an existing spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this DeleteWorksheet choreography.
     * @return Google_Spreadsheets_DeleteWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DeleteWorksheet/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteWorksheet choreography.
     *
     * @param Google_Spreadsheets_DeleteWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DeleteWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DeleteWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this DeleteWorksheet choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this DeleteWorksheet choreography.
     *
     * @param string $value (string) The unique key associated with the spreadsheet that contains a worksheet you want to delete
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this DeleteWorksheet choreography.
     *
     * @param string $value (string) Your Google username
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this DeleteWorksheet choreography.
     *
     * @param string $value (string) The unique id associated with the worksheet that you want to delete
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the DeleteWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteWorksheet choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteWorksheet execution.
     * @param Google_Spreadsheets_DeleteWorksheet $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_DeleteWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DeleteWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteWorksheet execution.
     *
     * @return Google_Spreadsheets_DeleteWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DeleteWorksheet_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteWorksheet choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteWorksheet execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified worksheet row from a Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow extends Temboo_Choreography
{
    /**
     * Deletes a specified worksheet row from a Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this DeleteListRow choreography.
     * @return Google_Spreadsheets_DeleteListRow New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DeleteListRow/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteListRow choreography.
     *
     * @param Google_Spreadsheets_DeleteListRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteListRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteListRow_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DeleteListRow_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteListRow choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteListRow_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DeleteListRow_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteListRow choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteListRow choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteListRow_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteListRow input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the EditLink input for this DeleteListRow choreography.
     *
     * @param string $value (conditional, string) The entry's edit link URL. Can be retrieved by running RetrieveListFeed and parsing the 'edit' link returned. When the edit link is provided, SpreadsheetKey, WorksheetId, and RowId are not needed.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setEditLink($value)
    {
        return $this->set('EditLink', $value);
    }

    /**
     * Set the value for the Password input for this DeleteListRow choreography.
     *
     * @param string $value (required, string) Your Google password.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowId input for this DeleteListRow choreography.
     *
     * @param string $value (conditional, string) The unique id of the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setRowId($value)
    {
        return $this->set('RowId', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this DeleteListRow choreography.
     *
     * @param string $value (conditional, string) The unique key of the spreadsheet associated with the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this DeleteListRow choreography.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this DeleteListRow choreography.
     *
     * @param string $value (conditional, string) The unique id of the worksheet associated with the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the DeleteListRow choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteListRow choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteListRow execution.
     * @param Google_Spreadsheets_DeleteListRow $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_DeleteListRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteListRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteListRow_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DeleteListRow $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteListRow execution.
     *
     * @return Google_Spreadsheets_DeleteListRow_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteListRow execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteListRow_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DeleteListRow_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteListRow choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteListRow choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteListRow_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteListRow execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain walking distances and times for a martix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain walking distances and times for a martix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this WalkingDistanceMatrix choreography.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/WalkingDistanceMatrix/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this WalkingDistanceMatrix choreography.
     *
     * @param Google_DistanceMatrix_WalkingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_WalkingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this WalkingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the WalkingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the WalkingDistanceMatrix choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this WalkingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destinations input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this WalkingDistanceMatrix choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this WalkingDistanceMatrix choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the WalkingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the WalkingDistanceMatrix choreography.
     *
     * @param Temboo_Session $session The session that owns this WalkingDistanceMatrix execution.
     * @param Google_DistanceMatrix_WalkingDistanceMatrix $choreo The choregraphy object for this execution.
     * @param Google_DistanceMatrix_WalkingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_WalkingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_WalkingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this WalkingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this WalkingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the WalkingDistanceMatrix choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the WalkingDistanceMatrix choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this WalkingDistanceMatrix execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the ApprovalStatus for the provided list of clients.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkApprovalStatus extends Temboo_Choreography
{
    /**
     * Returns the ApprovalStatus for the provided list of clients.
     *
     * @param Temboo_Session $session The session that owns this GetBulkApprovalStatus choreography.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetBulkApprovalStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBulkApprovalStatus choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBulkApprovalStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBulkApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBulkApprovalStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBulkApprovalStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientIDs input for this GetBulkApprovalStatus choreography.
     *
     * @param string $value (string) A comma-separated list of ClientIDs.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function setClientIDs($value)
    {
        return $this->set('ClientIDs', $value);
    }

    /**
     * Set the value for the Email input for this GetBulkApprovalStatus choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetBulkApprovalStatus choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetBulkApprovalStatus choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetBulkApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBulkApprovalStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBulkApprovalStatus execution.
     * @param Google_AdSenseHost_AccountService_GetBulkApprovalStatus $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetBulkApprovalStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBulkApprovalStatus execution.
     *
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBulkApprovalStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBulkApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBulkApprovalStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetBulkApprovalStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBulkApprovalStatus execution.
     *
     * @return string 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of cell names and values in a specified Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed extends Temboo_Choreography
{
    /**
     * Retrieves a list of cell names and values in a specified Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveCellFeed choreography.
     * @return Google_Spreadsheets_RetrieveCellFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveCellFeed/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveCellFeed choreography.
     *
     * @param Google_Spreadsheets_RetrieveCellFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveCellFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveCellFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveCellFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveCellFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveCellFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveCellFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveCellFeed choreography.
     *
     * @param string $value (required, string) Your Google password
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveCellFeed choreography.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveCellFeed choreography.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveCellFeed choreography.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveCellFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveCellFeed choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveCellFeed execution.
     * @param Google_Spreadsheets_RetrieveCellFeed $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveCellFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveCellFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveCellFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveCellFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveCellFeed execution.
     *
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveCellFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveCellFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveCellFeed choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveCellFeed execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a single email message from a Gmail inbox.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmail extends Temboo_Choreography
{
    /**
     * Retrieves a single email message from a Gmail inbox.
     *
     * @param Temboo_Session $session The session that owns this GetEmail choreography.
     * @return Google_Gmail_GetEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Gmail/GetEmail/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetEmail choreography.
     *
     * @param Google_Gmail_GetEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_GetEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_GetEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Gmail_GetEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_GetEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Gmail_GetEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_GetEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the DeleteAfterRetrieval input for this GetEmail choreography.
     *
     * @param bool $value (optional, boolean) To delete the message after retrieval, set to 1. Defaults to 0 indicating that the message will not be deleted after retrieval. Note that you will need to adjust Gmail settings to use this feature.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setDeleteAfterRetrieval($value)
    {
        return $this->set('DeleteAfterRetrieval', $value);
    }

    /**
     * Set the value for the Password input for this GetEmail choreography.
     *
     * @param string $value (required, string) Your Gmail password.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SenderAddressFilter input for this GetEmail choreography.
     *
     * @param string $value (optional, string) A string used to filter by a particular sender address.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setSenderAddressFilter($value)
    {
        return $this->set('SenderAddressFilter', $value);
    }

    /**
     * Set the value for the SubjectFilter input for this GetEmail choreography.
     *
     * @param string $value (optional, string) A string used to filter by subject.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setSubjectFilter($value)
    {
        return $this->set('SubjectFilter', $value);
    }

    /**
     * Set the value for the Username input for this GetEmail choreography.
     *
     * @param string $value (required, string) Your Gmail username. Provide the complete email address used for logging into Gmail.
     * @return Google_Gmail_GetEmail_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetEmail choreography.
     *
     * @param Temboo_Session $session The session that owns this GetEmail execution.
     * @param Google_Gmail_GetEmail $choreo The choregraphy object for this execution.
     * @param Google_Gmail_GetEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_GetEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_GetEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Gmail_GetEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetEmail execution.
     *
     * @return Google_Gmail_GetEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Gmail_GetEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Gmail_GetEmail_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmail_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetEmail choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Gmail_GetEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Attachment" output from this GetEmail execution.
     *
     * @return string (string) If the email has an attachment, the Base64 encoded contents of the attachment are returned in this output variable.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAttachment()
    {
        return $this->get('Attachment');
    }

    /**
     * Retrieve the value for the "Message" output from this GetEmail execution.
     *
     * @return string (xml) The response from Gmail including the message body and message header fields.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getMessage()
    {
        return $this->get('Message');
    }

    /**
     * Retrieve the value for the "MessageBody" output from this GetEmail execution.
     *
     * @return string (string) The message body of the email.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getMessageBody()
    {
        return $this->get('MessageBody');
    }

    /**
     * Retrieve the value for the "Sender" output from this GetEmail execution.
     *
     * @return string (string) The sender email address.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSender()
    {
        return $this->get('Sender');
    }

    /**
     * Retrieve the value for the "Subject" output from this GetEmail execution.
     *
     * @return string (string) The subject of the email.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubject()
    {
        return $this->get('Subject');
    }
}

/**
 * Retrieve data for all calendars in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent extends Temboo_Choreography
{
    /**
     * Retrieve data for all calendars in an account.
     *
     * @param Temboo_Session $session The session that owns this GetEvent choreography.
     * @return Google_Calendar_GetEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetEvent/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetEvent choreography.
     *
     * @param Google_Calendar_GetEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetEvent choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetEvent choreography.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetEvent choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetEvent choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EventID input for this GetEvent choreography.
     *
     * @param string $value (required, string) The unique ID for the event to retrieve.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setEventID($value)
    {
        return $this->set('EventID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetEvent choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetEvent choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetEvent choreography.
     *
     * @param Temboo_Session $session The session that owns this GetEvent execution.
     * @param Google_Calendar_GetEvent $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetEvent execution.
     *
     * @return Google_Calendar_GetEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetEvent_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetEvent choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetEvent execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetEvent execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Set whether the account should receive email promotions or not.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetEmailPromotionsPreference extends Temboo_Choreography
{
    /**
     * Set whether the account should receive email promotions or not.
     *
     * @param Temboo_Session $session The session that owns this SetEmailPromotionsPreference choreography.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/SetEmailPromotionsPreference/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SetEmailPromotionsPreference choreography.
     *
     * @param Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetEmailPromotionsPreference choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SetEmailPromotionsPreference choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetEmailPromotionsPreference input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this SetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The ID of the publisher for whom the email promotions preference will be set.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this SetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the EnableEmailPromotions input for this SetEmailPromotionsPreference choreography.
     *
     * @param bool $value (boolean) Pass in '1' (enabled) or '0' (disabled).
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setEnableEmailPromotions($value)
    {
        return $this->set('EnableEmailPromotions', $value);
    }

    /**
     * Set the value for the Endpoint input for this SetEmailPromotionsPreference choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this SetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the SetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetEmailPromotionsPreference choreography.
     *
     * @param Temboo_Session $session The session that owns this SetEmailPromotionsPreference execution.
     * @param Google_AdSenseHost_AccountService_SetEmailPromotionsPreference $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_SetEmailPromotionsPreference $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetEmailPromotionsPreference execution.
     *
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SetEmailPromotionsPreference execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SetEmailPromotionsPreference choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_SetEmailPromotionsPreference_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SetEmailPromotionsPreference execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete a current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation extends Temboo_Choreography
{
    /**
     * Delete a current location.
     *
     * @param Temboo_Session $session The session that owns this DeleteCurrentLocation choreography.
     * @return Google_Latitude_DeleteCurrentLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/DeleteCurrentLocation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteCurrentLocation choreography.
     *
     * @param Google_Latitude_DeleteCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeleteCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeleteCurrentLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_DeleteCurrentLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteCurrentLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_DeleteCurrentLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteCurrentLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteCurrentLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteCurrentLocation choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteCurrentLocation choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteCurrentLocation choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteCurrentLocation choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteCurrentLocation choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteCurrentLocation execution.
     * @param Google_Latitude_DeleteCurrentLocation $choreo The choregraphy object for this execution.
     * @param Google_Latitude_DeleteCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeleteCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeleteCurrentLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_DeleteCurrentLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteCurrentLocation execution.
     *
     * @return Google_Latitude_DeleteCurrentLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteCurrentLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_DeleteCurrentLocation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteCurrentLocation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteCurrentLocation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteCurrentLocation execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Searches all public profiles.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search extends Temboo_Choreography
{
    /**
     * Searches all public profiles.
     *
     * @param Temboo_Session $session The session that owns this Search choreography.
     * @return Google_Plus_People_Search New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/Search/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Search choreography.
     *
     * @param Google_Plus_People_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Search_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_Search_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Search choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Search_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_Search_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Search choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Search_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Search input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Search choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Search choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Search choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Search choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Search choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Language input for this Search choreography.
     *
     * @param string $value (optional, string) Indicates the preferred language to search with. Defaults to "en-US".
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the MaxResults input for this Search choreography.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this Search choreography.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Search choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the Query input for this Search choreography.
     *
     * @param string $value (required, string) A query string for full text search of public text in all profiles.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Search choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Search choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Search choreography.
     *
     * @param Temboo_Session $session The session that owns this Search execution.
     * @param Google_Plus_People_Search $choreo The choregraphy object for this execution.
     * @param Google_Plus_People_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Search_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_Search $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Search execution.
     *
     * @return Google_Plus_People_Search_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Search execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_Search_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_Search_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Search choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_Search_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Search execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this Search execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 *  Generate biking directions between two locations, denoted by address or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections extends Temboo_Choreography
{
    /**
     *  Generate biking directions between two locations, denoted by address or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetBicyclingDirections choreography.
     * @return Google_Directions_GetBicyclingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetBicyclingDirections/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBicyclingDirections choreography.
     *
     * @param Google_Directions_GetBicyclingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetBicyclingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetBicyclingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetBicyclingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBicyclingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetBicyclingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetBicyclingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBicyclingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBicyclingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetBicyclingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBicyclingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetBicyclingDirections choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destination input for this GetBicyclingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetBicyclingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetBicyclingDirections choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetBicyclingDirections choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetBicyclingDirections choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetBicyclingDirections choreography.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetBicyclingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBicyclingDirections choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBicyclingDirections execution.
     * @param Google_Directions_GetBicyclingDirections $choreo The choregraphy object for this execution.
     * @param Google_Directions_GetBicyclingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetBicyclingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetBicyclingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetBicyclingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBicyclingDirections execution.
     *
     * @return Google_Directions_GetBicyclingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBicyclingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetBicyclingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetBicyclingDirections_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBicyclingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBicyclingDirections choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetBicyclingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBicyclingDirections execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Generate walking directions between two locations, denoted by address or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections extends Temboo_Choreography
{
    /**
     *  Generate walking directions between two locations, denoted by address or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetWalkingDirections choreography.
     * @return Google_Directions_GetWalkingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetWalkingDirections/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetWalkingDirections choreography.
     *
     * @param Google_Directions_GetWalkingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetWalkingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetWalkingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetWalkingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetWalkingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetWalkingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetWalkingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetWalkingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetWalkingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetWalkingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetWalkingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetWalkingDirections choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destination input for this GetWalkingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetWalkingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetWalkingDirections choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetWalkingDirections choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetWalkingDirections choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetWalkingDirections choreography.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetWalkingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetWalkingDirections choreography.
     *
     * @param Temboo_Session $session The session that owns this GetWalkingDirections execution.
     * @param Google_Directions_GetWalkingDirections $choreo The choregraphy object for this execution.
     * @param Google_Directions_GetWalkingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetWalkingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetWalkingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetWalkingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetWalkingDirections execution.
     *
     * @return Google_Directions_GetWalkingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetWalkingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetWalkingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetWalkingDirections_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetWalkingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetWalkingDirections choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetWalkingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetWalkingDirections execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for a specific calendar in a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar extends Temboo_Choreography
{
    /**
     * Retrieve data for a specific calendar in a Google account.
     *
     * @param Temboo_Session $session The session that owns this GetCalendar choreography.
     * @return Google_Calendar_GetCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetCalendar/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetCalendar choreography.
     *
     * @param Google_Calendar_GetCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetCalendar choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetCalendar choreography.
     *
     * @param string $value (required, string) The ID for the calendar to retrieve.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetCalendar choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetCalendar choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetCalendar choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetCalendar choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCalendar choreography.
     *
     * @param Temboo_Session $session The session that owns this GetCalendar execution.
     * @param Google_Calendar_GetCalendar $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCalendar execution.
     *
     * @return Google_Calendar_GetCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetCalendar_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetCalendar choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetCalendar execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns the built-in ad styles created by Google.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles extends Temboo_Choreography
{
    /**
     * Returns the built-in ad styles created by Google.
     *
     * @param Temboo_Session $session The session that owns this GetBuiltinAdStyles choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetBuiltinAdStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBuiltinAdStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBuiltinAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBuiltinAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBuiltinAdStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBuiltinAdStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetBuiltinAdStyles choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetBuiltinAdStyles choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetBuiltinAdStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetBuiltinAdStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetBuiltinAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBuiltinAdStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBuiltinAdStyles execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBuiltinAdStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBuiltinAdStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBuiltinAdStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBuiltinAdStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetBuiltinAdStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBuiltinAdStyles execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete a specific event from a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent extends Temboo_Choreography
{
    /**
     * Delete a specific event from a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this DeleteEvent choreography.
     * @return Google_Calendar_DeleteEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteEvent/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteEvent choreography.
     *
     * @param Google_Calendar_DeleteEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteEvent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteEvent choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this DeleteEvent choreography.
     *
     * @param string $value (required, string) The ID for the calendar to delete.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteEvent choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteEvent choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EventID input for this DeleteEvent choreography.
     *
     * @param string $value (required, string) The unique ID for the event to delete.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setEventID($value)
    {
        return $this->set('EventID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteEvent choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteEvent choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteEvent execution.
     * @param Google_Calendar_DeleteEvent $choreo The choregraphy object for this execution.
     * @param Google_Calendar_DeleteEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteEvent execution.
     *
     * @return Google_Calendar_DeleteEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteEvent_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteEvent choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteEvent choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteEvent execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteEvent execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns the publisher's association status with the developer.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAssociationStatus extends Temboo_Choreography
{
    /**
     * Returns the publisher's association status with the developer.
     *
     * @param Temboo_Session $session The session that owns this GetAssociationStatus choreography.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetAssociationStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAssociationStatus choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetAssociationStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAssociationStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAssociationStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAssociationStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetAssociationStatus choreography.
     *
     * @param string $value (string) The ID of the publisher to get the association status of.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAssociationStatus choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAssociationStatus choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAssociationStatus choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAssociationStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAssociationStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAssociationStatus execution.
     * @param Google_AdSenseHost_AccountService_GetAssociationStatus $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetAssociationStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetAssociationStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAssociationStatus execution.
     *
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAssociationStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetAssociationStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAssociationStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAssociationStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAssociationStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetAssociationStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAssociationStatus execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of all resources in a category you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory extends Temboo_Choreography
{
    /**
     * Retrieves a list of all resources in a category you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByCategory choreography.
     * @return Google_Documents_SearchByCategory New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByCategory/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchByCategory choreography.
     *
     * @param Google_Documents_SearchByCategory_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByCategory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByCategory_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByCategory_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByCategory choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByCategory_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByCategory_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByCategory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchByCategory choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByCategory_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByCategory input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Category input for this SearchByCategory choreography.
     *
     * @param string $value (required, string) The category to list: "document", "spreadsheet", "presentation", "drawing", "folder", "starred", or "trashed". Combine multiple categories with "/".
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setCategory($value)
    {
        return $this->set('Category', $value);
    }

    /**
     * Set the value for the MyDocs input for this SearchByCategory choreography.
     *
     * @param bool $value (optional, boolean) Enter "true" to return resources for the requesting user only. The default is "false" (returns all account resources).
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setMyDocs($value)
    {
        return $this->set('MyDocs', $value);
    }

    /**
     * Set the value for the Password input for this SearchByCategory choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this SearchByCategory choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the Viewed input for this SearchByCategory choreography.
     *
     * @param bool $value (optional, boolean) Enter "true" to return only viewed resources for the specified category. The default is "false" (viewed and unviewed category resources).
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setViewed($value)
    {
        return $this->set('Viewed', $value);
    }
}


/**
 * Execution object for the SearchByCategory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByCategory choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchByCategory execution.
     * @param Google_Documents_SearchByCategory $choreo The choregraphy object for this execution.
     * @param Google_Documents_SearchByCategory_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByCategory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByCategory_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByCategory $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByCategory execution.
     *
     * @return Google_Documents_SearchByCategory_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchByCategory execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByCategory_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByCategory_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchByCategory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchByCategory choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByCategory_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchByCategory execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns whether email promotions are enabled for the account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetEmailPromotionsPreference extends Temboo_Choreography
{
    /**
     * Returns whether email promotions are enabled for the account.
     *
     * @param Temboo_Session $session The session that owns this GetEmailPromotionsPreference choreography.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetEmailPromotionsPreference/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetEmailPromotionsPreference choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetEmailPromotionsPreference choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetEmailPromotionsPreference choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetEmailPromotionsPreference input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The ID of the publisher to get the email promotions preference of.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetEmailPromotionsPreference choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetEmailPromotionsPreference choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetEmailPromotionsPreference choreography.
     *
     * @param Temboo_Session $session The session that owns this GetEmailPromotionsPreference execution.
     * @param Google_AdSenseHost_AccountService_GetEmailPromotionsPreference $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetEmailPromotionsPreference $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetEmailPromotionsPreference execution.
     *
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetEmailPromotionsPreference execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetEmailPromotionsPreference choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetEmailPromotionsPreference choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetEmailPromotionsPreference_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetEmailPromotionsPreference execution.
     *
     * @return string 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the list of supported website locales (e.g., use 'en' for English).
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales extends Temboo_Choreography
{
    /**
     * Returns the list of supported website locales (e.g., use 'en' for English).
     *
     * @param Temboo_Session $session The session that owns this GetSupportedWebsiteLocales choreography.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetSupportedWebsiteLocales/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetSupportedWebsiteLocales choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetSupportedWebsiteLocales choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetSupportedWebsiteLocales choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetSupportedWebsiteLocales choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetSupportedWebsiteLocales input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Email input for this GetSupportedWebsiteLocales choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetSupportedWebsiteLocales choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetSupportedWebsiteLocales choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetSupportedWebsiteLocales choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetSupportedWebsiteLocales choreography.
     *
     * @param Temboo_Session $session The session that owns this GetSupportedWebsiteLocales execution.
     * @param Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetSupportedWebsiteLocales execution.
     *
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetSupportedWebsiteLocales execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetSupportedWebsiteLocales choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetSupportedWebsiteLocales choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetSupportedWebsiteLocales_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetSupportedWebsiteLocales execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Resends the verification email. The verification email can be sent up to three times.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_ResendVerificationEmail extends Temboo_Choreography
{
    /**
     * Resends the verification email. The verification email can be sent up to three times.
     *
     * @param Temboo_Session $session The session that owns this ResendVerificationEmail choreography.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/ResendVerificationEmail/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ResendVerificationEmail choreography.
     *
     * @param Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_ResendVerificationEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ResendVerificationEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ResendVerificationEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ResendVerificationEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ResendVerificationEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this ResendVerificationEmail choreography.
     *
     * @param string $value (string) The ID of the publisher to send a verification email to.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the DeveloperURL input for this ResendVerificationEmail choreography.
     *
     * @param string $value (string) The developer site URL.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setDeveloperURL($value)
    {
        return $this->set('DeveloperURL', $value);
    }

    /**
     * Set the value for the Email input for this ResendVerificationEmail choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this ResendVerificationEmail choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this ResendVerificationEmail choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the ResendVerificationEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_ResendVerificationEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ResendVerificationEmail choreography.
     *
     * @param Temboo_Session $session The session that owns this ResendVerificationEmail execution.
     * @param Google_AdSenseHost_AccountService_ResendVerificationEmail $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_ResendVerificationEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_ResendVerificationEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ResendVerificationEmail execution.
     *
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ResendVerificationEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_ResendVerificationEmail_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ResendVerificationEmail choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_ResendVerificationEmail_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ResendVerificationEmail choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_ResendVerificationEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ResendVerificationEmail execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to refund an order that's been submitted to your Google Checkout merchant account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder extends Temboo_Choreography
{
    /**
     * Allows you to refund an order that's been submitted to your Google Checkout merchant account.
     *
     * @param Temboo_Session $session The session that owns this RefundOrder choreography.
     * @return Google_Checkout_RefundOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/RefundOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RefundOrder choreography.
     *
     * @param Google_Checkout_RefundOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_RefundOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_RefundOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_RefundOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RefundOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_RefundOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_RefundOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RefundOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RefundOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_RefundOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RefundOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Amount input for this RefundOrder choreography.
     *
     * @param float $value (decimal) The amount to refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setAmount($value)
    {
        return $this->set('Amount', $value);
    }

    /**
     * Set the value for the Comment input for this RefundOrder choreography.
     *
     * @param string $value (string) The comment for the order refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the Endpoint input for this RefundOrder choreography.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this RefundOrder choreography.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this RefundOrder choreography.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this RefundOrder choreography.
     *
     * @param int $value (integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the Reason input for this RefundOrder choreography.
     *
     * @param string $value (string) The reason for the refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setReason($value)
    {
        return $this->set('Reason', $value);
    }

    /**
     * Set the value for the SandboxMode input for this RefundOrder choreography.
     *
     * @param bool $value (optional, boolean) Set this flag to 1 when using this Choreo with the Google Checkout sandbox endpoint (i.e. sandbox.google.com). Defaults to 0.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setSandboxMode($value)
    {
        return $this->set('SandboxMode', $value);
    }
}


/**
 * Execution object for the RefundOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RefundOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this RefundOrder execution.
     * @param Google_Checkout_RefundOrder $choreo The choregraphy object for this execution.
     * @param Google_Checkout_RefundOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_RefundOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_RefundOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_RefundOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RefundOrder execution.
     *
     * @return Google_Checkout_RefundOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RefundOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_RefundOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_RefundOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RefundOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RefundOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_RefundOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RefundOrder execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ExecutionStatus" output from this RefundOrder execution.
     *
     * @return string Contains status information on the Choreo execution
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getExecutionStatus()
    {
        return $this->get('ExecutionStatus');
    }
}

/**
 * Retrieves specific rows or columns based on a specified range.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns extends Temboo_Choreography
{
    /**
     * Retrieves specific rows or columns based on a specified range.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpecificRowsOrColumns choreography.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpecificRowsOrColumns/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpecificRowsOrColumns choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveSpecificRowsOrColumns choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpecificRowsOrColumns input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the MaxColumn input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param int $value (optional, integer) The max column number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMaxColumn($value)
    {
        return $this->set('MaxColumn', $value);
    }

    /**
     * Set the value for the MaxRow input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param int $value (optional, integer) The max row number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMaxRow($value)
    {
        return $this->set('MaxRow', $value);
    }

    /**
     * Set the value for the MinColumn input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param int $value (optional, integer) The minimum column number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMinColumn($value)
    {
        return $this->set('MinColumn', $value);
    }

    /**
     * Set the value for the MinRow input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param int $value (optional, integer) The minimum row number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMinRow($value)
    {
        return $this->set('MinRow', $value);
    }

    /**
     * Set the value for the Password input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param string $value (required, string) Your Google password
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveSpecificRowsOrColumns choreography.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveSpecificRowsOrColumns choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpecificRowsOrColumns choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpecificRowsOrColumns execution.
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpecificRowsOrColumns $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpecificRowsOrColumns execution.
     *
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveSpecificRowsOrColumns execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveSpecificRowsOrColumns choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveSpecificRowsOrColumns choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveSpecificRowsOrColumns execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list all of the comments for a given activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List extends Temboo_Choreography
{
    /**
     * Retrieves a list all of the comments for a given activity.
     *
     * @param Temboo_Session $session The session that owns this List choreography.
     * @return Google_Plus_Comments_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Comments/List/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this List choreography.
     *
     * @param Google_Plus_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Comments_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Comments_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the List choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this List choreography.
     *
     * @param string $value (required, string) The ID of the activity to get.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this List choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this List choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this List choreography.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List choreography.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this List choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SortOrder input for this List choreography.
     *
     * @param string $value (optional, string) The order in which to sort the list of comments. Valid values are: "ascending" (Sort oldest comments first, the default) and "descending" (Sort newest comments first).
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setSortOrder($value)
    {
        return $this->set('SortOrder', $value);
    }

    /**
     * Set the value for the UserIP input for this List choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List choreography.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Plus_Comments_List $choreo The choregraphy object for this execution.
     * @param Google_Plus_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Comments_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Plus_Comments_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Comments_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Comments_List_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the List choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the List choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Comments_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this List execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves metrics such as visits, page views, bounces within a specified time frame.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics extends Temboo_Choreography
{
    /**
     * Retrieves metrics such as visits, page views, bounces within a specified time frame.
     *
     * @param Temboo_Session $session The session that owns this GetMetrics choreography.
     * @return Google_Analytics_GetMetrics New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Analytics/GetMetrics/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetMetrics choreography.
     *
     * @param Google_Analytics_GetMetrics_Inputs|array $inputs (optional) Inputs as Google_Analytics_GetMetrics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_GetMetrics_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Analytics_GetMetrics_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetMetrics choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_GetMetrics_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Analytics_GetMetrics_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetMetrics choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetMetrics choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_GetMetrics_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetMetrics input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Dimensions input for this GetMetrics choreography.
     *
     * @param string $value (optional, string) Defines the primary data keys for your Analytics report. Use dimensions to segment your web property metrics (e.g.  ga:browser or ga:city).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setDimensions($value)
    {
        return $this->set('Dimensions', $value);
    }

    /**
     * Set the value for the EndDate input for this GetMetrics choreography.
     *
     * @param string $value (required, date) The end date for the range of data you want to retrieve. Epoch timestamp in milliseconds or formatted as yyyy-MM-dd.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Filters input for this GetMetrics choreography.
     *
     * @param string $value (optional, string) Restricts the data returned by a dimension or metric you want to filter by using an expression (i.e. ga:timeOnPage==10).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setFilters($value)
    {
        return $this->set('Filters', $value);
    }

    /**
     * Set the value for the MaxResults input for this GetMetrics choreography.
     *
     * @param int $value (optional, integer) The max results to be returned in the feed. Defaults to 50.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the Metrics input for this GetMetrics choreography.
     *
     * @param string $value (optional, string) This is a comma separated list of metrics you want to retrieve. Defaults to: ga:visits,ga:bounces,ga:pageviews.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setMetrics($value)
    {
        return $this->set('Metrics', $value);
    }

    /**
     * Set the value for the Password input for this GetMetrics choreography.
     *
     * @param string $value (required, string) The password for your Google analytics account.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ProfileId input for this GetMetrics choreography.
     *
     * @param int $value (required, integer) The Google Analytics profile ID to access (Can be found in the URL when clicking the report from your account).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setProfileId($value)
    {
        return $this->set('ProfileId', $value);
    }

    /**
     * Set the value for the Segment input for this GetMetrics choreography.
     *
     * @param string $value (optional, string) Used to segment your data by dimensions and/or metrics. You can use expressions for segments just as you would for the Filters parameter.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setSegment($value)
    {
        return $this->set('Segment', $value);
    }

    /**
     * Set the value for the Sort input for this GetMetrics choreography.
     *
     * @param string $value (optional, string) Indicates the sorting order and direction for the returned data. Values can be separated by commas (i.e. ga:browser,ga:pageviews).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setSort($value)
    {
        return $this->set('Sort', $value);
    }

    /**
     * Set the value for the StartDate input for this GetMetrics choreography.
     *
     * @param string $value (required, date) The start date for the range of data to retrieve. Use epoch timestamp in milliseconds or formatted as yyyy-MM-dd.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the StartIndex input for this GetMetrics choreography.
     *
     * @param int $value (optional, integer) The starting entry for the feed. Defaults to 1.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setStartIndex($value)
    {
        return $this->set('StartIndex', $value);
    }

    /**
     * Set the value for the Username input for this GetMetrics choreography.
     *
     * @param string $value (required, string) The username for your Google analytics account.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetMetrics choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetMetrics choreography.
     *
     * @param Temboo_Session $session The session that owns this GetMetrics execution.
     * @param Google_Analytics_GetMetrics $choreo The choregraphy object for this execution.
     * @param Google_Analytics_GetMetrics_Inputs|array $inputs (optional) Inputs as Google_Analytics_GetMetrics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_GetMetrics_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Analytics_GetMetrics $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetMetrics execution.
     *
     * @return Google_Analytics_GetMetrics_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetMetrics execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Analytics_GetMetrics_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Analytics_GetMetrics_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetMetrics choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetMetrics choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Analytics_GetMetrics_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetMetrics execution.
     *
     * @return string (xml) The full response from Google Analytics.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "Bounces" output from this GetMetrics execution.
     *
     * @return int (integer) The bounces metrics parsed from the Google Analytics response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getBounces()
    {
        return $this->get('Bounces');
    }

    /**
     * Retrieve the value for the "PageViews" output from this GetMetrics execution.
     *
     * @return int (integer) The page views parsed from the Google Analytics response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getPageViews()
    {
        return $this->get('PageViews');
    }

    /**
     * Retrieve the value for the "Visits" output from this GetMetrics execution.
     *
     * @return int (integer) The visits metrics parsed from the Google Analytics response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getVisits()
    {
        return $this->get('Visits');
    }
}

/**
 * Creates a Google spreadsheet from a CSV file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet extends Temboo_Choreography
{
    /**
     * Creates a Google spreadsheet from a CSV file.
     *
     * @param Temboo_Session $session The session that owns this CreateSpreadsheet choreography.
     * @return Google_Spreadsheets_CreateSpreadsheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/CreateSpreadsheet/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateSpreadsheet choreography.
     *
     * @param Google_Spreadsheets_CreateSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CreateSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CreateSpreadsheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSpreadsheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateSpreadsheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSpreadsheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the UploadFile input for this CreateSpreadsheet choreography.
     *
     * @param string $value (conditional, multiline) The data to be written to the Google spreadsheet. Should be in CSV format. This is required unless using the VaultCSVFile alias (an advanced option used when running Choreos in the Temboo Designer).
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setUploadFile($value)
    {
        return $this->set('UploadFile', $value);
    }

    /**
     * Set the value for the Password input for this CreateSpreadsheet choreography.
     *
     * @param string $value (required, string) Your Google password
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CreateSpreadsheet choreography.
     *
     * @param string $value (required, string) The name of the new document.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CreateSpreadsheet choreography.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

}


/**
 * Execution object for the CreateSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSpreadsheet choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateSpreadsheet execution.
     * @param Google_Spreadsheets_CreateSpreadsheet $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_CreateSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CreateSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CreateSpreadsheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_CreateSpreadsheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSpreadsheet execution.
     *
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateSpreadsheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateSpreadsheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateSpreadsheet choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateSpreadsheet execution.
     *
     * @return string (xml) Response from Google upload
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the Website URL.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteURL extends Temboo_Choreography
{
    /**
     * Returns the Website URL.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteURL choreography.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetWebsiteURL/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetWebsiteURL choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteURL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetWebsiteURL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetWebsiteURL choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetWebsiteURL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetWebsiteURL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetWebsiteURL choreography.
     *
     * @param string $value (string) The ID of the publisher to get the website URL of.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetWebsiteURL choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetWebsiteURL choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetWebsiteURL choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetWebsiteURL choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteURL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetWebsiteURL choreography.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteURL execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteURL $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteURL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetWebsiteURL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetWebsiteURL execution.
     *
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetWebsiteURL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteURL_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetWebsiteURL choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteURL_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetWebsiteURL choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteURL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetWebsiteURL execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the ApprovalStatus of this account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetApprovalStatus extends Temboo_Choreography
{
    /**
     * Returns the ApprovalStatus of this account.
     *
     * @param Temboo_Session $session The session that owns this GetApprovalStatus choreography.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetApprovalStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetApprovalStatus choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetApprovalStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetApprovalStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetApprovalStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetApprovalStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetApprovalStatus choreography.
     *
     * @param string $value (string) The ID of the publisher to get the approval status of.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetApprovalStatus choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetApprovalStatus choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetApprovalStatus choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetApprovalStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetApprovalStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetApprovalStatus execution.
     * @param Google_AdSenseHost_AccountService_GetApprovalStatus $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetApprovalStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetApprovalStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetApprovalStatus execution.
     *
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetApprovalStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetApprovalStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetApprovalStatus choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetApprovalStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetApprovalStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetApprovalStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetApprovalStatus execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns data about all the SyndicationService services ('ContentAds' or 'SearchAds') subscribed to by the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAllSyndicationServices extends Temboo_Choreography
{
    /**
     * Returns data about all the SyndicationService services ('ContentAds' or 'SearchAds') subscribed to by the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetAllSyndicationServices choreography.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetAllSyndicationServices/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllSyndicationServices choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetAllSyndicationServices_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllSyndicationServices choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllSyndicationServices choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllSyndicationServices choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllSyndicationServices input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetAllSyndicationServices choreography.
     *
     * @param string $value (string) The ID of the publisher to get the syndications services of.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAllSyndicationServices choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAllSyndicationServices choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAllSyndicationServices choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetAllSyndicationServices choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAllSyndicationServices_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllSyndicationServices choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllSyndicationServices execution.
     * @param Google_AdSenseHost_AccountService_GetAllSyndicationServices $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetAllSyndicationServices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetAllSyndicationServices $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllSyndicationServices execution.
     *
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllSyndicationServices execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetAllSyndicationServices_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllSyndicationServices choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetAllSyndicationServices_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllSyndicationServices choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetAllSyndicationServices_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllSyndicationServices execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete a named ad style from this service.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle extends Temboo_Choreography
{
    /**
     * Delete a named ad style from this service.
     *
     * @param Temboo_Session $session The session that owns this DeleteAdStyle choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/DeleteAdStyle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteAdStyle choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAdStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteAdStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAdStyle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AdStyleName input for this DeleteAdStyle choreography.
     *
     * @param string $value (string) The name of the ad style to delete.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setAdStyleName($value)
    {
        return $this->set('AdStyleName', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAdStyle choreography.
     *
     * @param string $value (string) The ID of the publisher from whom this ad style will be deleted.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this DeleteAdStyle choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteAdStyle choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this DeleteAdStyle choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this DeleteAdStyle choreography.
     *
     * @param string $value (string) The ID for this publisher's AFC syndication service.  May be identical to the ClientID.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the DeleteAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAdStyle choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteAdStyle execution.
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAdStyle execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteAdStyle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteAdStyle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_DeleteAdStyle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteAdStyle execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specific location from a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation extends Temboo_Choreography
{
    /**
     * Deletes a specific location from a user's location history.
     *
     * @param Temboo_Session $session The session that owns this DeletePastLocation choreography.
     * @return Google_Latitude_DeletePastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/DeletePastLocation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeletePastLocation choreography.
     *
     * @param Google_Latitude_DeletePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeletePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeletePastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_DeletePastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeletePastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeletePastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_DeletePastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeletePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeletePastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeletePastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeletePastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeletePastLocation choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeletePastLocation choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeletePastLocation choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the LocationID input for this DeletePastLocation choreography.
     *
     * @param string $value (required, date) Enter the timestamp (in epoch time) of the location to be deleted.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setLocationID($value)
    {
        return $this->set('LocationID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeletePastLocation choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeletePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeletePastLocation choreography.
     *
     * @param Temboo_Session $session The session that owns this DeletePastLocation execution.
     * @param Google_Latitude_DeletePastLocation $choreo The choregraphy object for this execution.
     * @param Google_Latitude_DeletePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeletePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeletePastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_DeletePastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeletePastLocation execution.
     *
     * @return Google_Latitude_DeletePastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeletePastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_DeletePastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_DeletePastLocation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeletePastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeletePastLocation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_DeletePastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeletePastLocation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeletePastLocation execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Delete a new Place from Google Places.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace extends Temboo_Choreography
{
    /**
     * Delete a new Place from Google Places.
     *
     * @param Temboo_Session $session The session that owns this DeletePlace choreography.
     * @return Google_Places_DeletePlace New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/DeletePlace/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeletePlace choreography.
     *
     * @param Google_Places_DeletePlace_Inputs|array $inputs (optional) Inputs as Google_Places_DeletePlace_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_DeletePlace_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_DeletePlace_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeletePlace choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_DeletePlace_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_DeletePlace_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeletePlace choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeletePlace choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_DeletePlace_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeletePlace input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this DeletePlace choreography.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the PlaceReference input for this DeletePlace choreography.
     *
     * @param string $value (required, string) The unique place reference. This is returned in the PlaceSearch Choreo.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setPlaceReference($value)
    {
        return $this->set('PlaceReference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeletePlace choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this DeletePlace choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the DeletePlace choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeletePlace choreography.
     *
     * @param Temboo_Session $session The session that owns this DeletePlace execution.
     * @param Google_Places_DeletePlace $choreo The choregraphy object for this execution.
     * @param Google_Places_DeletePlace_Inputs|array $inputs (optional) Inputs as Google_Places_DeletePlace_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_DeletePlace_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_DeletePlace $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeletePlace execution.
     *
     * @return Google_Places_DeletePlace_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeletePlace execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_DeletePlace_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_DeletePlace_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeletePlace choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeletePlace choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_DeletePlace_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeletePlace execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a comment to a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto extends Temboo_Choreography
{
    /**
     * Adds a comment to a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this AddCommentToPhoto choreography.
     * @return Google_Picasa_AddCommentToPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/AddCommentToPhoto/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddCommentToPhoto choreography.
     *
     * @param Google_Picasa_AddCommentToPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_AddCommentToPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_AddCommentToPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_AddCommentToPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddCommentToPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_AddCommentToPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_AddCommentToPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddCommentToPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddCommentToPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_AddCommentToPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddCommentToPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this AddCommentToPhoto choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this AddCommentToPhoto choreography.
     *
     * @param int $value (required, integer) The id of the album which contains the photo you want to add a comment to.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this AddCommentToPhoto choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this AddCommentToPhoto choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Comment input for this AddCommentToPhoto choreography.
     *
     * @param string $value (required, string) The comment that you want to add to a photo.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the PhotoID input for this AddCommentToPhoto choreography.
     *
     * @param int $value (required, integer) The id of the photo you want to add a comment to.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this AddCommentToPhoto choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this AddCommentToPhoto choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the AddCommentToPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddCommentToPhoto choreography.
     *
     * @param Temboo_Session $session The session that owns this AddCommentToPhoto execution.
     * @param Google_Picasa_AddCommentToPhoto $choreo The choregraphy object for this execution.
     * @param Google_Picasa_AddCommentToPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_AddCommentToPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_AddCommentToPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_AddCommentToPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddCommentToPhoto execution.
     *
     * @return Google_Picasa_AddCommentToPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddCommentToPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_AddCommentToPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_AddCommentToPhoto_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddCommentToPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddCommentToPhoto choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_AddCommentToPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddCommentToPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this AddCommentToPhoto execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Deletes a specified contact.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact extends Temboo_Choreography
{
    /**
     * Deletes a specified contact.
     *
     * @param Temboo_Session $session The session that owns this DeleteContact choreography.
     * @return Google_Contacts_DeleteContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/DeleteContact/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteContact choreography.
     *
     * @param Google_Contacts_DeleteContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_DeleteContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_DeleteContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_DeleteContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_DeleteContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_DeleteContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_DeleteContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteContact choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteContact choreography.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteContact choreography.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContactID input for this DeleteContact choreography.
     *
     * @param string $value (required, string) The unique ID string for the contact you want to delete.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setContactID($value)
    {
        return $this->set('ContactID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteContact choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteContact choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteContact execution.
     * @param Google_Contacts_DeleteContact $choreo The choregraphy object for this execution.
     * @param Google_Contacts_DeleteContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_DeleteContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_DeleteContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_DeleteContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteContact execution.
     *
     * @return Google_Contacts_DeleteContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_DeleteContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_DeleteContact_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteContact choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_DeleteContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteContact execution.
     *
     * @return string The response from Google. No content is returned for a successful delete request.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns a list of a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory extends Temboo_Choreography
{
    /**
     * Returns a list of a user's location history.
     *
     * @param Temboo_Session $session The session that owns this ListLocationHistory choreography.
     * @return Google_Latitude_ListLocationHistory New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/ListLocationHistory/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListLocationHistory choreography.
     *
     * @param Google_Latitude_ListLocationHistory_Inputs|array $inputs (optional) Inputs as Google_Latitude_ListLocationHistory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_ListLocationHistory_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_ListLocationHistory_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListLocationHistory choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_ListLocationHistory_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_ListLocationHistory_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListLocationHistory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListLocationHistory choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_ListLocationHistory_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListLocationHistory input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListLocationHistory choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this ListLocationHistory choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListLocationHistory choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this ListLocationHistory choreography.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is city.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the MaxResults input for this ListLocationHistory choreography.
     *
     * @param int $value (optional, integer) Enter the maximum number of results to return.  If unspecified, 100 results will be returned.  The maximum results returned is 1000.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the MaxTime input for this ListLocationHistory choreography.
     *
     * @param int $value (optional, integer) The maximum timestamp of the locations to return (in milliseconds since the epoch).
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMaxTime($value)
    {
        return $this->set('MaxTime', $value);
    }

    /**
     * Set the value for the MinTime input for this ListLocationHistory choreography.
     *
     * @param int $value (optional, integer) The minimum timestamp of the locations to return (in milliseconds since the epoch).
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMinTime($value)
    {
        return $this->set('MinTime', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListLocationHistory choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the ListLocationHistory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListLocationHistory choreography.
     *
     * @param Temboo_Session $session The session that owns this ListLocationHistory execution.
     * @param Google_Latitude_ListLocationHistory $choreo The choregraphy object for this execution.
     * @param Google_Latitude_ListLocationHistory_Inputs|array $inputs (optional) Inputs as Google_Latitude_ListLocationHistory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_ListLocationHistory_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_ListLocationHistory $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListLocationHistory execution.
     *
     * @return Google_Latitude_ListLocationHistory_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListLocationHistory execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_ListLocationHistory_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_ListLocationHistory_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListLocationHistory choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListLocationHistory choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_ListLocationHistory_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListLocationHistory execution.
     *
     * @return string XML) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this ListLocationHistory execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves the contact or contacts in that account that match a specified query term.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery extends Temboo_Choreography
{
    /**
     * Retrieves the contact or contacts in that account that match a specified query term.
     *
     * @param Temboo_Session $session The session that owns this GetContactsWithQuery choreography.
     * @return Google_Contacts_GetContactsWithQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetContactsWithQuery/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetContactsWithQuery choreography.
     *
     * @param Google_Contacts_GetContactsWithQuery_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactsWithQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactsWithQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetContactsWithQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetContactsWithQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactsWithQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetContactsWithQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetContactsWithQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetContactsWithQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactsWithQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetContactsWithQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetContactsWithQuery choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetContactsWithQuery choreography.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetContactsWithQuery choreography.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Query input for this GetContactsWithQuery choreography.
     *
     * @param string $value (required, string) The contact criteria to search for, such as name or email address.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetContactsWithQuery choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the GetContactsWithQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetContactsWithQuery choreography.
     *
     * @param Temboo_Session $session The session that owns this GetContactsWithQuery execution.
     * @param Google_Contacts_GetContactsWithQuery $choreo The choregraphy object for this execution.
     * @param Google_Contacts_GetContactsWithQuery_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactsWithQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactsWithQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetContactsWithQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetContactsWithQuery execution.
     *
     * @return Google_Contacts_GetContactsWithQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetContactsWithQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetContactsWithQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetContactsWithQuery_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetContactsWithQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetContactsWithQuery choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetContactsWithQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetContactsWithQuery execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetContactsWithQuery execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }

    /**
     * Retrieve the value for the "ContactID" output from this GetContactsWithQuery execution.
     *
     * @return string (string) The unique ID string for the retrieved contact. If more than one contact is retrieved by the request, only the first contact's ID is output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }

    /**
     * Retrieve the value for the "Link" output from this GetContactsWithQuery execution.
     *
     * @return string (string) The unique edit link for the retrieved contact. If more than one contact is retrieved by the request, only the first contact's edit link is output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLink()
    {
        return $this->get('Link');
    }
}

/**
 * Search for places based on latitude/longitude coordinates, keywords, and distance.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch extends Temboo_Choreography
{
    /**
     * Search for places based on latitude/longitude coordinates, keywords, and distance.
     *
     * @param Temboo_Session $session The session that owns this PlaceSearch choreography.
     * @return Google_Places_PlaceSearch New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceSearch/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PlaceSearch choreography.
     *
     * @param Google_Places_PlaceSearch_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceSearch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceSearch_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceSearch_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceSearch choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceSearch_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceSearch_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceSearch choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PlaceSearch choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceSearch_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceSearch input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceSearch choreography.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the Keyword input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) Enter a keyword (term, address, type, customer review, etc.) to be matched against all results retrieved for this Place.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setKeyword($value)
    {
        return $this->set('Keyword', $value);
    }

    /**
     * Set the value for the Language input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Latitude input for this PlaceSearch choreography.
     *
     * @param string $value (required, string) Specify a latitude point around which Places results will be retrieved.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this PlaceSearch choreography.
     *
     * @param string $value (required, string) Specify a longitude point around which Places results will be retrieved.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the Name input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) Enter a name to be matched when results are retrieved for this specified Place.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the Radius input for this PlaceSearch choreography.
     *
     * @param int $value (optional, integer) Specify the radius in meters, for which Places results will be returned. Maximum radius is limited to 50,000 meters. If rankby=distance, then radius must not be specified.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setRadius($value)
    {
        return $this->set('Radius', $value);
    }

    /**
     * Set the value for the RankBy input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) Specify how results are listed. Values include: prominence (default); distance - sorts results by distance from specified location. Radius must not be used, and Keyword, Name, or Types are required).
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setRankBy($value)
    {
        return $this->set('RankBy', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceSearch choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Types input for this PlaceSearch choreography.
     *
     * @param string $value (optional, string) Filter results by types, such as: bar, dentist.  Multiple types must be separated by the pipe ("|") symbol: bar|dentist||airport.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setTypes($value)
    {
        return $this->set('Types', $value);
    }
}


/**
 * Execution object for the PlaceSearch choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceSearch choreography.
     *
     * @param Temboo_Session $session The session that owns this PlaceSearch execution.
     * @param Google_Places_PlaceSearch $choreo The choregraphy object for this execution.
     * @param Google_Places_PlaceSearch_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceSearch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceSearch_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceSearch $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceSearch execution.
     *
     * @return Google_Places_PlaceSearch_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PlaceSearch execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceSearch_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceSearch_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PlaceSearch choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PlaceSearch choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceSearch_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PlaceSearch execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a named search result style from this service.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle extends Temboo_Choreography
{
    /**
     * Deletes a named search result style from this service.
     *
     * @param Temboo_Session $session The session that owns this DeleteSearchResultStyle choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/DeleteSearchResultStyle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteSearchResultStyle choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSearchResultStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteSearchResultStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSearchResultStyle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SearchResultStyleName input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (string) The name of a search result style.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setSearchResultStyleName($value)
    {
        return $this->set('SearchResultStyleName', $value);
    }

    /**
     * Set the value for the SynServiceID input for this DeleteSearchResultStyle choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the DeleteSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSearchResultStyle choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteSearchResultStyle execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSearchResultStyle execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteSearchResultStyle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteSearchResultStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteSearchResultStyle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_DeleteSearchResultStyle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteSearchResultStyle execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a range of cells from a specified Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery extends Temboo_Choreography
{
    /**
     * Retrieves a range of cells from a specified Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this CellRangeQuery choreography.
     * @return Google_Spreadsheets_CellRangeQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/CellRangeQuery/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CellRangeQuery choreography.
     *
     * @param Google_Spreadsheets_CellRangeQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CellRangeQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CellRangeQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_CellRangeQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CellRangeQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_CellRangeQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CellRangeQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CellRangeQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CellRangeQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the MaxColumn input for this CellRangeQuery choreography.
     *
     * @param int $value (optional, integer) The maximum column number for the cell range that you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMaxColumn($value)
    {
        return $this->set('MaxColumn', $value);
    }

    /**
     * Set the value for the MaxRow input for this CellRangeQuery choreography.
     *
     * @param int $value (optional, integer) The maximum row number for the cell range that you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMaxRow($value)
    {
        return $this->set('MaxRow', $value);
    }

    /**
     * Set the value for the MinColumn input for this CellRangeQuery choreography.
     *
     * @param int $value (optional, integer) The minimum column number for the cell range you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMinColumn($value)
    {
        return $this->set('MinColumn', $value);
    }

    /**
     * Set the value for the MinRow input for this CellRangeQuery choreography.
     *
     * @param int $value (optional, integer) The minimum row number for the cell range you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMinRow($value)
    {
        return $this->set('MinRow', $value);
    }

    /**
     * Set the value for the Password input for this CellRangeQuery choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this CellRangeQuery choreography.
     *
     * @param string $value (string) The unique for key for the spreadsheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this CellRangeQuery choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this CellRangeQuery choreography.
     *
     * @param string $value (string) The unique id of the worksheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the CellRangeQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CellRangeQuery choreography.
     *
     * @param Temboo_Session $session The session that owns this CellRangeQuery execution.
     * @param Google_Spreadsheets_CellRangeQuery $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_CellRangeQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CellRangeQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CellRangeQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_CellRangeQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CellRangeQuery execution.
     *
     * @return Google_Spreadsheets_CellRangeQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CellRangeQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_CellRangeQuery_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CellRangeQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CellRangeQuery choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CellRangeQuery execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves all settings for a Google Calendar account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings extends Temboo_Choreography
{
    /**
     * Retrieves all settings for a Google Calendar account.
     *
     * @param Temboo_Session $session The session that owns this GetAllSettings choreography.
     * @return Google_Calendar_GetAllSettings New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllSettings/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllSettings choreography.
     *
     * @param Google_Calendar_GetAllSettings_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllSettings_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllSettings_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllSettings_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllSettings choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllSettings_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllSettings_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllSettings choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllSettings choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllSettings_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllSettings input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllSettings choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllSettings choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllSettings choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this GetAllSettings choreography.
     *
     * @param string $value (required, string) The settings fields to return. Returns etag, item IDs, and item values by default.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllSettings choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllSettings choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllSettings choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllSettings choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllSettings execution.
     * @param Google_Calendar_GetAllSettings $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetAllSettings_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllSettings_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllSettings_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllSettings $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllSettings execution.
     *
     * @return Google_Calendar_GetAllSettings_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllSettings execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllSettings_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllSettings_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllSettings choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllSettings choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllSettings_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllSettings execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetAllSettings execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Get all ad unit types supported by Google.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes extends Temboo_Choreography
{
    /**
     * Get all ad unit types supported by Google.
     *
     * @param Temboo_Session $session The session that owns this GetAllAdUnitTypes choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetAllAdUnitTypes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllAdUnitTypes choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllAdUnitTypes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllAdUnitTypes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllAdUnitTypes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetAllAdUnitTypes choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAllAdUnitTypes choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAllAdUnitTypes choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAllAdUnitTypes choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetAllAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllAdUnitTypes choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllAdUnitTypes execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllAdUnitTypes execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllAdUnitTypes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllAdUnitTypes choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllAdUnitTypes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdUnitTypes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllAdUnitTypes execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Get all ad layouts supported by Google.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts extends Temboo_Choreography
{
    /**
     * Get all ad layouts supported by Google.
     *
     * @param Temboo_Session $session The session that owns this GetAllAdLayouts choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetAllAdLayouts/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllAdLayouts choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllAdLayouts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllAdLayouts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllAdLayouts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllAdLayouts input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetAllAdLayouts choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetAllAdLayouts choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAllAdLayouts choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetAllAdLayouts choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetAllAdLayouts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllAdLayouts choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllAdLayouts execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllAdLayouts execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllAdLayouts execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllAdLayouts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllAdLayouts choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetAllAdLayouts_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllAdLayouts execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument extends Temboo_Choreography
{
    /**
     * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedDocument choreography.
     * @return Google_Documents_DownloadBase64EncodedDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/DownloadBase64EncodedDocument/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DownloadBase64EncodedDocument choreography.
     *
     * @param Google_Documents_DownloadBase64EncodedDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_DownloadBase64EncodedDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DownloadBase64EncodedDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DownloadBase64EncodedDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DownloadBase64EncodedDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DownloadBase64EncodedDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DownloadBase64EncodedDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Format input for this DownloadBase64EncodedDocument choreography.
     *
     * @param string $value (optional, string) The format you want to export the document to, such as "doc", "txt", "pdf", etc. The default download format is HTML.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setFormat($value)
    {
        return $this->set('Format', $value);
    }

    /**
     * Set the value for the Link input for this DownloadBase64EncodedDocument choreography.
     *
     * @param string $value (conditional, string) Enter the source links for the document to be retrieved. Required unless specifying the Title.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setLink($value)
    {
        return $this->set('Link', $value);
    }

    /**
     * Set the value for the Password input for this DownloadBase64EncodedDocument choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this DownloadBase64EncodedDocument choreography.
     *
     * @param string $value (conditional, string) The title of the document to download. Required unless specifying the download Link.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this DownloadBase64EncodedDocument choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DownloadBase64EncodedDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DownloadBase64EncodedDocument choreography.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedDocument execution.
     * @param Google_Documents_DownloadBase64EncodedDocument $choreo The choregraphy object for this execution.
     * @param Google_Documents_DownloadBase64EncodedDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_DownloadBase64EncodedDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DownloadBase64EncodedDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_DownloadBase64EncodedDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DownloadBase64EncodedDocument execution.
     *
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DownloadBase64EncodedDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DownloadBase64EncodedDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DownloadBase64EncodedDocument choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "FileContents" output from this DownloadBase64EncodedDocument execution.
     *
     * @return string (string) The Base64 encoded file content of the downloaded file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileContents()
    {
        return $this->get('FileContents');
    }
}

/**
 * Lists all photos in a specified Google Picasa album.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum extends Temboo_Choreography
{
    /**
     * Lists all photos in a specified Google Picasa album.
     *
     * @param Temboo_Session $session The session that owns this ListPhotosByAlbum choreography.
     * @return Google_Picasa_ListPhotosByAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/ListPhotosByAlbum/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListPhotosByAlbum choreography.
     *
     * @param Google_Picasa_ListPhotosByAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListPhotosByAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListPhotosByAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_ListPhotosByAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListPhotosByAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_ListPhotosByAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListPhotosByAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListPhotosByAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListPhotosByAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListPhotosByAlbum choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this ListPhotosByAlbum choreography.
     *
     * @param int $value (required, integer) The album id. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this ListPhotosByAlbum choreography.
     *
     * @param string $value (required, string) The client id provided by Google Pacasa when you sign up for an account.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListPhotosByAlbum choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListPhotosByAlbum choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this ListPhotosByAlbum choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the ListPhotosByAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListPhotosByAlbum choreography.
     *
     * @param Temboo_Session $session The session that owns this ListPhotosByAlbum execution.
     * @param Google_Picasa_ListPhotosByAlbum $choreo The choregraphy object for this execution.
     * @param Google_Picasa_ListPhotosByAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListPhotosByAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListPhotosByAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_ListPhotosByAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListPhotosByAlbum execution.
     *
     * @return Google_Picasa_ListPhotosByAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListPhotosByAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_ListPhotosByAlbum_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListPhotosByAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListPhotosByAlbum choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListPhotosByAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this ListPhotosByAlbum execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Updates or creates an entry in an authenticated user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation extends Temboo_Choreography
{
    /**
     * Updates or creates an entry in an authenticated user's location history.
     *
     * @param Temboo_Session $session The session that owns this InsertPastLocation choreography.
     * @return Google_Latitude_InsertPastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/InsertPastLocation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this InsertPastLocation choreography.
     *
     * @param Google_Latitude_InsertPastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertPastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertPastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_InsertPastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this InsertPastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertPastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_InsertPastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the InsertPastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the InsertPastLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertPastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this InsertPastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this InsertPastLocation choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this InsertPastLocation choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this InsertPastLocation choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Latitide input for this InsertPastLocation choreography.
     *
     * @param float $value (required, decimal) Enter latitude coordinates. For example: 37.420352.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setLatitide($value)
    {
        return $this->set('Latitide', $value);
    }

    /**
     * Set the value for the Longitude input for this InsertPastLocation choreography.
     *
     * @param float $value (required, decimal) Enter longitude coordinates.  For example: -122.083389.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the RefreshToken input for this InsertPastLocation choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the TimestampMs input for this InsertPastLocation choreography.
     *
     * @param string $value (required, date) Enter a timestamp value (in epoch time).  Example: 1325715558.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setTimestampMs($value)
    {
        return $this->set('TimestampMs', $value);
    }
}


/**
 * Execution object for the InsertPastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the InsertPastLocation choreography.
     *
     * @param Temboo_Session $session The session that owns this InsertPastLocation execution.
     * @param Google_Latitude_InsertPastLocation $choreo The choregraphy object for this execution.
     * @param Google_Latitude_InsertPastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertPastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertPastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_InsertPastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this InsertPastLocation execution.
     *
     * @return Google_Latitude_InsertPastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this InsertPastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_InsertPastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_InsertPastLocation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the InsertPastLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the InsertPastLocation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_InsertPastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this InsertPastLocation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this InsertPastLocation execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Updates existing worksheet metadata such as: Title, Row Count, and Column Count.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet extends Temboo_Choreography
{
    /**
     * Updates existing worksheet metadata such as: Title, Row Count, and Column Count.
     *
     * @param Temboo_Session $session The session that owns this UpdateWorksheet choreography.
     * @return Google_Spreadsheets_UpdateWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateWorksheet/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateWorksheet choreography.
     *
     * @param Google_Spreadsheets_UpdateWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ColumnCount input for this UpdateWorksheet choreography.
     *
     * @param int $value (integer) The number of columns that you want to specify for the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setColumnCount($value)
    {
        return $this->set('ColumnCount', $value);
    }

    /**
     * Set the value for the Password input for this UpdateWorksheet choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowCount input for this UpdateWorksheet choreography.
     *
     * @param int $value (integer) The number of rows that you want to specify for the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setRowCount($value)
    {
        return $this->set('RowCount', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateWorksheet choreography.
     *
     * @param string $value (string) The unique key associated with the spreadsheet that contains a worksheet you want to update
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Title input for this UpdateWorksheet choreography.
     *
     * @param string $value (string) The new title of the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this UpdateWorksheet choreography.
     *
     * @param string $value (string) Your Google username
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateWorksheet choreography.
     *
     * @param string $value (string) The unique id associated with the worksheet that you want to update
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateWorksheet choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateWorksheet execution.
     * @param Google_Spreadsheets_UpdateWorksheet $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_UpdateWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateWorksheet execution.
     *
     * @return Google_Spreadsheets_UpdateWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateWorksheet_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateWorksheet choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateWorksheet execution.
     *
     * @return string (XML) Response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list-based feed containing data in your Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed extends Temboo_Choreography
{
    /**
     * Retrieves a list-based feed containing data in your Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveListFeed choreography.
     * @return Google_Spreadsheets_RetrieveListFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveListFeed/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveListFeed choreography.
     *
     * @param Google_Spreadsheets_RetrieveListFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveListFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveListFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveListFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveListFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveListFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveListFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveListFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveListFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveListFeed choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveListFeed choreography.
     *
     * @param string $value (string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveListFeed choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveListFeed choreography.
     *
     * @param string $value (string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveListFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveListFeed choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveListFeed execution.
     * @param Google_Spreadsheets_RetrieveListFeed $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveListFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveListFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveListFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveListFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveListFeed execution.
     *
     * @return Google_Spreadsheets_RetrieveListFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveListFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveListFeed_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveListFeed choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveListFeed choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveListFeed execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve detailed information about places retrieved by the PlaceSearch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails extends Temboo_Choreography
{
    /**
     * Retrieve detailed information about places retrieved by the PlaceSearch Choreo.
     *
     * @param Temboo_Session $session The session that owns this PlaceDetails choreography.
     * @return Google_Places_PlaceDetails New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceDetails/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PlaceDetails choreography.
     *
     * @param Google_Places_PlaceDetails_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceDetails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceDetails_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceDetails_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceDetails choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceDetails_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceDetails_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceDetails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PlaceDetails choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceDetails_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceDetails input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceDetails choreography.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the Language input for this PlaceDetails choreography.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Reference input for this PlaceDetails choreography.
     *
     * @param string $value (required, string) Enter a textual identifier that uniquely identidies a place obtained from the PlaceSearch Choreo.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setReference($value)
    {
        return $this->set('Reference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceDetails choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceDetails choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the PlaceDetails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceDetails choreography.
     *
     * @param Temboo_Session $session The session that owns this PlaceDetails execution.
     * @param Google_Places_PlaceDetails $choreo The choregraphy object for this execution.
     * @param Google_Places_PlaceDetails_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceDetails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceDetails_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceDetails $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceDetails execution.
     *
     * @return Google_Places_PlaceDetails_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PlaceDetails execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceDetails_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceDetails_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PlaceDetails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PlaceDetails choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceDetails_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PlaceDetails execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of Analytics profiles available to an authorized account user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_AccountFeedRequest extends Temboo_Choreography
{
    /**
     * Retrieves a list of Analytics profiles available to an authorized account user.
     *
     * @param Temboo_Session $session The session that owns this AccountFeedRequest choreography.
     * @return Google_Analytics_AccountFeedRequest New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Analytics/AccountFeedRequest/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AccountFeedRequest choreography.
     *
     * @param Google_Analytics_AccountFeedRequest_Inputs|array $inputs (optional) Inputs as Google_Analytics_AccountFeedRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_AccountFeedRequest_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Analytics_AccountFeedRequest_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AccountFeedRequest choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_AccountFeedRequest_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Analytics_AccountFeedRequest_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AccountFeedRequest choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_AccountFeedRequest_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AccountFeedRequest choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_AccountFeedRequest_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AccountFeedRequest input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the MaxResults input for this AccountFeedRequest choreography.
     *
     * @param int $value (optional, integer) The max results to be returned in the feed. Defaults to 50.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the Password input for this AccountFeedRequest choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the StartIndex input for this AccountFeedRequest choreography.
     *
     * @param int $value (optional, integer) The starting entry for the feed. Defaults to 1.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function setStartIndex($value)
    {
        return $this->set('StartIndex', $value);
    }

    /**
     * Set the value for the Username input for this AccountFeedRequest choreography.
     *
     * @param string $value (required, string) Your Google account email address.
     * @return Google_Analytics_AccountFeedRequest_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the AccountFeedRequest choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_AccountFeedRequest_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AccountFeedRequest choreography.
     *
     * @param Temboo_Session $session The session that owns this AccountFeedRequest execution.
     * @param Google_Analytics_AccountFeedRequest $choreo The choregraphy object for this execution.
     * @param Google_Analytics_AccountFeedRequest_Inputs|array $inputs (optional) Inputs as Google_Analytics_AccountFeedRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_AccountFeedRequest_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Analytics_AccountFeedRequest $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AccountFeedRequest execution.
     *
     * @return Google_Analytics_AccountFeedRequest_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AccountFeedRequest execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Analytics_AccountFeedRequest_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Analytics_AccountFeedRequest_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AccountFeedRequest choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_AccountFeedRequest_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AccountFeedRequest choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Analytics_AccountFeedRequest_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AccountFeedRequest execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Generates directions between two locations, denoted by address, or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections extends Temboo_Choreography
{
    /**
     *  Generates directions between two locations, denoted by address, or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetDrivingDirections choreography.
     * @return Google_Directions_GetDrivingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetDrivingDirections/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetDrivingDirections choreography.
     *
     * @param Google_Directions_GetDrivingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetDrivingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetDrivingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetDrivingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetDrivingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetDrivingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetDrivingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetDrivingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetDrivingDirections choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetDrivingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetDrivingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetDrivingDirections choreography.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Avoid input for this GetDrivingDirections choreography.
     *
     * @param string $value (optional, string) Specify whether the calculated directions should avoid the following features: tolls, or highways.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setAvoid($value)
    {
        return $this->set('Avoid', $value);
    }

    /**
     * Set the value for the Destination input for this GetDrivingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetDrivingDirections choreography.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetDrivingDirections choreography.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetDrivingDirections choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetDrivingDirections choreography.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetDrivingDirections choreography.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetDrivingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetDrivingDirections choreography.
     *
     * @param Temboo_Session $session The session that owns this GetDrivingDirections execution.
     * @param Google_Directions_GetDrivingDirections $choreo The choregraphy object for this execution.
     * @param Google_Directions_GetDrivingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetDrivingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetDrivingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetDrivingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetDrivingDirections execution.
     *
     * @return Google_Directions_GetDrivingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetDrivingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetDrivingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetDrivingDirections_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetDrivingDirections choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetDrivingDirections choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetDrivingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetDrivingDirections execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list-based feed containing data in your Google spreadsheet that meets a specified criteria.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery extends Temboo_Choreography
{
    /**
     * Retrieves a list-based feed containing data in your Google spreadsheet that meets a specified criteria.
     *
     * @param Temboo_Session $session The session that owns this StructuredQuery choreography.
     * @return Google_Spreadsheets_StructuredQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/StructuredQuery/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this StructuredQuery choreography.
     *
     * @param Google_Spreadsheets_StructuredQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_StructuredQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_StructuredQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_StructuredQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StructuredQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_StructuredQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_StructuredQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StructuredQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the StructuredQuery choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_StructuredQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StructuredQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this StructuredQuery choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Query input for this StructuredQuery choreography.
     *
     * @param string $value (string) A valid structured query (i.e. id>4)
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this StructuredQuery choreography.
     *
     * @param string $value (string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this StructuredQuery choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this StructuredQuery choreography.
     *
     * @param string $value (string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the StructuredQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StructuredQuery choreography.
     *
     * @param Temboo_Session $session The session that owns this StructuredQuery execution.
     * @param Google_Spreadsheets_StructuredQuery $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_StructuredQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_StructuredQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_StructuredQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_StructuredQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StructuredQuery execution.
     *
     * @return Google_Spreadsheets_StructuredQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this StructuredQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_StructuredQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_StructuredQuery_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the StructuredQuery choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the StructuredQuery choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_StructuredQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this StructuredQuery execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for all calendars.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars extends Temboo_Choreography
{
    /**
     * Retrieve data for all calendars.
     *
     * @param Temboo_Session $session The session that owns this GetAllCalendars choreography.
     * @return Google_Calendar_GetAllCalendars New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllCalendars/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllCalendars choreography.
     *
     * @param Google_Calendar_GetAllCalendars_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllCalendars_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllCalendars_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllCalendars_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllCalendars choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllCalendars_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllCalendars_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllCalendars choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllCalendars choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllCalendars_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllCalendars input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllCalendars choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllCalendars choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllCalendars choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Count input for this GetAllCalendars choreography.
     *
     * @param int $value (optional, integer) The maximum number of calendars to return. The default is 15.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setCount($value)
    {
        return $this->set('Count', $value);
    }

    /**
     * Set the value for the Fields input for this GetAllCalendars choreography.
     *
     * @param string $value (optional, string) The calendar fields to return. Accepted values are "etag", "items", "kind", and "nextPageToken". All calendar items are returned by default.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Hidden input for this GetAllCalendars choreography.
     *
     * @param bool $value (optional, boolean) Enter "1" to return hidden calendars in the results, or "0" (the default) to not return them.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setHidden($value)
    {
        return $this->set('Hidden', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllCalendars choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllCalendars choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllCalendars choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllCalendars choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllCalendars execution.
     * @param Google_Calendar_GetAllCalendars $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetAllCalendars_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllCalendars_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllCalendars_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllCalendars $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllCalendars execution.
     *
     * @return Google_Calendar_GetAllCalendars_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllCalendars execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllCalendars_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllCalendars_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllCalendars choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllCalendars choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllCalendars_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllCalendars execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetAllCalendars execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Delete a secondary calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar extends Temboo_Choreography
{
    /**
     * Delete a secondary calendar.
     *
     * @param Temboo_Session $session The session that owns this DeleteCalendar choreography.
     * @return Google_Calendar_DeleteCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteCalendar/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteCalendar choreography.
     *
     * @param Google_Calendar_DeleteCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteCalendar choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this DeleteCalendar choreography.
     *
     * @param string $value (required, string) The ID for the calendar to delete.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteCalendar choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteCalendar choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteCalendar choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteCalendar choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteCalendar execution.
     * @param Google_Calendar_DeleteCalendar $choreo The choregraphy object for this execution.
     * @param Google_Calendar_DeleteCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteCalendar execution.
     *
     * @return Google_Calendar_DeleteCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteCalendar_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteCalendar choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteCalendar execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteCalendar execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns the channels associated with this syndication service for the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetChannels extends Temboo_Choreography
{
    /**
     * Returns the channels associated with this syndication service for the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetChannels choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/GetChannels/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetChannels choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetChannels_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetChannels input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ChannelService_Type input for this GetChannels choreography.
     *
     * @param string $value (string) Must be set to 'Custom'.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setChannelService_Type($value)
    {
        return $this->set('ChannelService_Type', $value);
    }

    /**
     * Set the value for the ClientID input for this GetChannels choreography.
     *
     * @param string $value (string) The ID of the publisher to get the channels of.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetChannels choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetChannels choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetChannels choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetChannels choreography.
     *
     * @param string $value (string) The ID for this service.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetChannels_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetChannels choreography.
     *
     * @param Temboo_Session $session The session that owns this GetChannels execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetChannels $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_GetChannels $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetChannels execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetChannels execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetChannels_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetChannels_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetChannels choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetChannels_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetChannels execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for all contacts in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts extends Temboo_Choreography
{
    /**
     * Retrieve data for all contacts in an account.
     *
     * @param Temboo_Session $session The session that owns this GetAllContacts choreography.
     * @return Google_Contacts_GetAllContacts New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetAllContacts/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllContacts choreography.
     *
     * @param Google_Contacts_GetAllContacts_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllContacts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllContacts_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetAllContacts_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllContacts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllContacts_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetAllContacts_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllContacts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllContacts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllContacts_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllContacts input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllContacts choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllContacts choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllContacts choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllContacts choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserEmail input for this GetAllContacts choreography.
     *
     * @param string $value (optional, string) The email address of the user whose contacts you want to retrieve. Defaults to "default," or the user whose OAuth access token is passed.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setUserEmail($value)
    {
        return $this->set('UserEmail', $value);
    }
}


/**
 * Execution object for the GetAllContacts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllContacts choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllContacts execution.
     * @param Google_Contacts_GetAllContacts $choreo The choregraphy object for this execution.
     * @param Google_Contacts_GetAllContacts_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllContacts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllContacts_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetAllContacts $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllContacts execution.
     *
     * @return Google_Contacts_GetAllContacts_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllContacts execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetAllContacts_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetAllContacts_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllContacts choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllContacts choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetAllContacts_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllContacts execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetAllContacts execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Add a new Place to Google Places.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports extends Temboo_Choreography
{
    /**
     * Add a new Place to Google Places.
     *
     * @param Temboo_Session $session The session that owns this UserPlaceReports choreography.
     * @return Google_Places_UserPlaceReports New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/UserPlaceReports/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UserPlaceReports choreography.
     *
     * @param Google_Places_UserPlaceReports_Inputs|array $inputs (optional) Inputs as Google_Places_UserPlaceReports_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_UserPlaceReports_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_UserPlaceReports_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UserPlaceReports choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_UserPlaceReports_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_UserPlaceReports_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UserPlaceReports choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UserPlaceReports choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_UserPlaceReports_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UserPlaceReports input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the POSTForm input for this UserPlaceReports choreography.
     *
     * @param mixed $value (required, any) Enter the required POST parameter, reference in the body of this JSON form.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setPOSTForm($value)
    {
        return $this->set('POSTForm', $value);
    }

    /**
     * Set the value for the Key input for this UserPlaceReports choreography.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UserPlaceReports choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this UserPlaceReports choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the UserPlaceReports choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UserPlaceReports choreography.
     *
     * @param Temboo_Session $session The session that owns this UserPlaceReports execution.
     * @param Google_Places_UserPlaceReports $choreo The choregraphy object for this execution.
     * @param Google_Places_UserPlaceReports_Inputs|array $inputs (optional) Inputs as Google_Places_UserPlaceReports_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_UserPlaceReports_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_UserPlaceReports $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UserPlaceReports execution.
     *
     * @return Google_Places_UserPlaceReports_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UserPlaceReports execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_UserPlaceReports_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_UserPlaceReports_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UserPlaceReports choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UserPlaceReports choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_UserPlaceReports_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UserPlaceReports execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain elevation information for a path specified by a set of  geo-coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation extends Temboo_Choreography
{
    /**
     * Obtain elevation information for a path specified by a set of  geo-coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetPathElevation choreography.
     * @return Google_Elevation_GetPathElevation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Elevation/GetPathElevation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetPathElevation choreography.
     *
     * @param Google_Elevation_GetPathElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetPathElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetPathElevation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Elevation_GetPathElevation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetPathElevation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetPathElevation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Elevation_GetPathElevation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetPathElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetPathElevation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetPathElevation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetPathElevation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Path input for this GetPathElevation choreography.
     *
     * @param string $value (required, string) Specify the path for which elevation data will be obtained.  Input formats: an array of two or more lat/longitude coordinate pairs; A set of encoded coordinates using the Encoded Polyline Algorithm.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetPathElevation choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Samples input for this GetPathElevation choreography.
     *
     * @param int $value (required, integer) Enter the number of sample points.  See API docs for additional information.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setSamples($value)
    {
        return $this->set('Samples', $value);
    }

    /**
     * Set the value for the Sensor input for this GetPathElevation choreography.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GetPathElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetPathElevation choreography.
     *
     * @param Temboo_Session $session The session that owns this GetPathElevation execution.
     * @param Google_Elevation_GetPathElevation $choreo The choregraphy object for this execution.
     * @param Google_Elevation_GetPathElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetPathElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetPathElevation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Elevation_GetPathElevation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetPathElevation execution.
     *
     * @return Google_Elevation_GetPathElevation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetPathElevation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Elevation_GetPathElevation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Elevation_GetPathElevation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetPathElevation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetPathElevation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Elevation_GetPathElevation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetPathElevation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the list of supported website locales (languages) for a given type of SyndicationService.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService extends Temboo_Choreography
{
    /**
     * Returns the list of supported website locales (languages) for a given type of SyndicationService.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteLocalesForSyndicationService choreography.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetWebsiteLocalesForSyndicationService/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetWebsiteLocalesForSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetWebsiteLocalesForSyndicationService input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Email input for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceType input for this GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param string $value (string) One of 'ContentAds' or 'SearchAds'.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs For method chaining.
     */
    public function setSynServiceType($value)
    {
        return $this->set('SynServiceType', $value);
    }
}


/**
 * Execution object for the GetWebsiteLocalesForSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteLocalesForSyndicationService execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetWebsiteLocalesForSyndicationService execution.
     *
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetWebsiteLocalesForSyndicationService execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetWebsiteLocalesForSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetWebsiteLocalesForSyndicationService choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocalesForSyndicationService_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetWebsiteLocalesForSyndicationService execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the search result styles created by the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles extends Temboo_Choreography
{
    /**
     * Returns the search result styles created by the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetSearchResultStyles choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/GetSearchResultStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetSearchResultStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetSearchResultStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetSearchResultStyles choreography.
     *
     * @param string $value (string) The ID of the publisher to get the search result styles of.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetSearchResultStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetSearchResultStyles choreography.
     *
     * @param string $value (string) The ID for this service.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetSearchResultStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this GetSearchResultStyles execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetSearchResultStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetSearchResultStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetSearchResultStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetSearchResultStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetSearchResultStyles execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about a calendar including the id with a given calendar name.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName extends Temboo_Choreography
{
    /**
     * Retrieves information about a calendar including the id with a given calendar name.
     *
     * @param Temboo_Session $session The session that owns this SearchCalendarsByName choreography.
     * @return Google_Calendar_SearchCalendarsByName New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/SearchCalendarsByName/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchCalendarsByName choreography.
     *
     * @param Google_Calendar_SearchCalendarsByName_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchCalendarsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchCalendarsByName_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_SearchCalendarsByName_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchCalendarsByName choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchCalendarsByName_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_SearchCalendarsByName_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchCalendarsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchCalendarsByName choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchCalendarsByName_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchCalendarsByName input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchCalendarsByName choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarName input for this SearchCalendarsByName choreography.
     *
     * @param string $value (required, string) The name of the calendar that you want to retrieve information for. Note that if there are multiple calendars with the same name, only the first one will be returned.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCalendarName($value)
    {
        return $this->set('CalendarName', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchCalendarsByName choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchCalendarsByName choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Count input for this SearchCalendarsByName choreography.
     *
     * @param int $value (optional, integer) The maximum number of calendars to search by name. The default is 15.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCount($value)
    {
        return $this->set('Count', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchCalendarsByName choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the SearchCalendarsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchCalendarsByName choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchCalendarsByName execution.
     * @param Google_Calendar_SearchCalendarsByName $choreo The choregraphy object for this execution.
     * @param Google_Calendar_SearchCalendarsByName_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchCalendarsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchCalendarsByName_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_SearchCalendarsByName $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchCalendarsByName execution.
     *
     * @return Google_Calendar_SearchCalendarsByName_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchCalendarsByName execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_SearchCalendarsByName_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_SearchCalendarsByName_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchCalendarsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchCalendarsByName choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_SearchCalendarsByName_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "AccessToken" output from this SearchCalendarsByName execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }

    /**
     * Retrieve the value for the "CalendarDescription" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar description parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarDescription()
    {
        return $this->get('CalendarDescription');
    }

    /**
     * Retrieve the value for the "CalendarId" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar id parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarId()
    {
        return $this->get('CalendarId');
    }

    /**
     * Retrieve the value for the "CalendarSummary" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The summary or calendar name parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarSummary()
    {
        return $this->get('CalendarSummary');
    }

    /**
     * Retrieve the value for the "CalendarTimezone" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar timezone parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarTimezone()
    {
        return $this->get('CalendarTimezone');
    }
}

/**
 * Creates a new worksheet within an existing spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet extends Temboo_Choreography
{
    /**
     * Creates a new worksheet within an existing spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this AddWorksheet choreography.
     * @return Google_Spreadsheets_AddWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/AddWorksheet/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddWorksheet choreography.
     *
     * @param Google_Spreadsheets_AddWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_AddWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_AddWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddWorksheet choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ColumnCount input for this AddWorksheet choreography.
     *
     * @param int $value (integer) The number of columns that you want to specify for the new worksheet
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setColumnCount($value)
    {
        return $this->set('ColumnCount', $value);
    }

    /**
     * Set the value for the Password input for this AddWorksheet choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowCount input for this AddWorksheet choreography.
     *
     * @param int $value (integer) The number of rows that you want to specify for the new worksheet
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setRowCount($value)
    {
        return $this->set('RowCount', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this AddWorksheet choreography.
     *
     * @param string $value (string) The unique key associated with the spreadsheet that you want to add a worksheet to
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Title input for this AddWorksheet choreography.
     *
     * @param string $value (string) The title of the new document to create
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this AddWorksheet choreography.
     *
     * @param string $value (string) Your Google username
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the AddWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddWorksheet choreography.
     *
     * @param Temboo_Session $session The session that owns this AddWorksheet execution.
     * @param Google_Spreadsheets_AddWorksheet $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_AddWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_AddWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddWorksheet execution.
     *
     * @return Google_Spreadsheets_AddWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_AddWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_AddWorksheet_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddWorksheet choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddWorksheet choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_AddWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddWorksheet execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the built-in search result styles created by Google.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles extends Temboo_Choreography
{
    /**
     * Returns the built-in search result styles created by Google.
     *
     * @param Temboo_Session $session The session that owns this GetBuiltinSearchResultStyles choreography.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForSearchService/GetBuiltinSearchResultStyles/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBuiltinSearchResultStyles choreography.
     *
     * @param Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBuiltinSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBuiltinSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBuiltinSearchResultStyles choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBuiltinSearchResultStyles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Email input for this GetBuiltinSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetBuiltinSearchResultStyles choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetBuiltinSearchResultStyles choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetBuiltinSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBuiltinSearchResultStyles choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBuiltinSearchResultStyles execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBuiltinSearchResultStyles execution.
     *
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBuiltinSearchResultStyles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBuiltinSearchResultStyles choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBuiltinSearchResultStyles choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForSearchService_GetBuiltinSearchResultStyles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBuiltinSearchResultStyles execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the authenticated user's current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo extends Temboo_Choreography
{
    /**
     * Returns the authenticated user's current location.
     *
     * @param Temboo_Session $session The session that owns this GetCurrentLocationInfo choreography.
     * @return Google_Latitude_GetCurrentLocationInfo New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/GetCurrentLocationInfo/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetCurrentLocationInfo choreography.
     *
     * @param Google_Latitude_GetCurrentLocationInfo_Inputs|array $inputs (optional) Inputs as Google_Latitude_GetCurrentLocationInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_GetCurrentLocationInfo_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_GetCurrentLocationInfo_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCurrentLocationInfo choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_GetCurrentLocationInfo_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCurrentLocationInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetCurrentLocationInfo choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCurrentLocationInfo input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetCurrentLocationInfo choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetCurrentLocationInfo choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetCurrentLocationInfo choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this GetCurrentLocationInfo choreography.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is city.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetCurrentLocationInfo choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the GetCurrentLocationInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCurrentLocationInfo choreography.
     *
     * @param Temboo_Session $session The session that owns this GetCurrentLocationInfo execution.
     * @param Google_Latitude_GetCurrentLocationInfo $choreo The choregraphy object for this execution.
     * @param Google_Latitude_GetCurrentLocationInfo_Inputs|array $inputs (optional) Inputs as Google_Latitude_GetCurrentLocationInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_GetCurrentLocationInfo_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_GetCurrentLocationInfo $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCurrentLocationInfo execution.
     *
     * @return Google_Latitude_GetCurrentLocationInfo_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetCurrentLocationInfo execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_GetCurrentLocationInfo_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetCurrentLocationInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetCurrentLocationInfo choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetCurrentLocationInfo execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetCurrentLocationInfo execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns the website language setting for the account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocale extends Temboo_Choreography
{
    /**
     * Returns the website language setting for the account.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteLocale choreography.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetWebsiteLocale/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetWebsiteLocale choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocale_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetWebsiteLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetWebsiteLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetWebsiteLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetWebsiteLocale input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetWebsiteLocale choreography.
     *
     * @param string $value (string) The ID of the publisher to get the website locale of.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetWebsiteLocale choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetWebsiteLocale choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetWebsiteLocale choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetWebsiteLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocale_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetWebsiteLocale choreography.
     *
     * @param Temboo_Session $session The session that owns this GetWebsiteLocale execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocale $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetWebsiteLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetWebsiteLocale $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetWebsiteLocale execution.
     *
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetWebsiteLocale execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetWebsiteLocale_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetWebsiteLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetWebsiteLocale_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetWebsiteLocale choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetWebsiteLocale_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetWebsiteLocale execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves one or more email messages from a Gmail inbox.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmails extends Temboo_Choreography
{
    /**
     * Retrieves one or more email messages from a Gmail inbox.
     *
     * @param Temboo_Session $session The session that owns this GetEmails choreography.
     * @return Google_Gmail_GetEmails New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Gmail/GetEmails/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetEmails choreography.
     *
     * @param Google_Gmail_GetEmails_Inputs|array $inputs (optional) Inputs as Google_Gmail_GetEmails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_GetEmails_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Gmail_GetEmails_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetEmails choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_GetEmails_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Gmail_GetEmails_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetEmails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmails_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetEmails choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_GetEmails_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetEmails input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the DeleteAfterRetrieval input for this GetEmails choreography.
     *
     * @param bool $value (optional, boolean) To delete messages after retrieval, set to 1. Defaults to 0 indicating that the messages will not be deleted after retrieval. Note that you will need to adjust Gmail settings to use this feature.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setDeleteAfterRetrieval($value)
    {
        return $this->set('DeleteAfterRetrieval', $value);
    }

    /**
     * Set the value for the MaxMessages input for this GetEmails choreography.
     *
     * @param string $value (optional, string) The max number of email messages to retrieve. Valid values are 1-100. Defaults to 100.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setMaxMessages($value)
    {
        return $this->set('MaxMessages', $value);
    }

    /**
     * Set the value for the Password input for this GetEmails choreography.
     *
     * @param string $value (required, string) Your Gmail password.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SenderAddressFilter input for this GetEmails choreography.
     *
     * @param string $value (optional, string) A string used to filter by a particular sender address.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setSenderAddressFilter($value)
    {
        return $this->set('SenderAddressFilter', $value);
    }

    /**
     * Set the value for the SubjectFilter input for this GetEmails choreography.
     *
     * @param string $value (optional, string) A string used to filter by subject.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setSubjectFilter($value)
    {
        return $this->set('SubjectFilter', $value);
    }

    /**
     * Set the value for the Username input for this GetEmails choreography.
     *
     * @param string $value (required, string) Your Gmail username. Provide the complete email address used for logging into Gmail.
     * @return Google_Gmail_GetEmails_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetEmails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmails_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetEmails choreography.
     *
     * @param Temboo_Session $session The session that owns this GetEmails execution.
     * @param Google_Gmail_GetEmails $choreo The choregraphy object for this execution.
     * @param Google_Gmail_GetEmails_Inputs|array $inputs (optional) Inputs as Google_Gmail_GetEmails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_GetEmails_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Gmail_GetEmails $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetEmails execution.
     *
     * @return Google_Gmail_GetEmails_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetEmails execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Gmail_GetEmails_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Gmail_GetEmails_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetEmails choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_GetEmails_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetEmails choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Gmail_GetEmails_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Messages" output from this GetEmails execution.
     *
     * @return string (xml) A list of the email messages retrieved from Gmail. Each email message will contain the message body and message header fields.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getMessages()
    {
        return $this->get('Messages');
    }
}

/**
 * Updates or creates an authenticated user's current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation extends Temboo_Choreography
{
    /**
     * Updates or creates an authenticated user's current location.
     *
     * @param Temboo_Session $session The session that owns this InsertCurrentLocation choreography.
     * @return Google_Latitude_InsertCurrentLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/InsertCurrentLocation/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this InsertCurrentLocation choreography.
     *
     * @param Google_Latitude_InsertCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertCurrentLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_InsertCurrentLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this InsertCurrentLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertCurrentLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_InsertCurrentLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the InsertCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the InsertCurrentLocation choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertCurrentLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this InsertCurrentLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this InsertCurrentLocation choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this InsertCurrentLocation choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this InsertCurrentLocation choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Latitude input for this InsertCurrentLocation choreography.
     *
     * @param float $value (required, decimal) Enter latitude coordinates. For example: 37.420352.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this InsertCurrentLocation choreography.
     *
     * @param float $value (required, decimal) Enter longitude coordinates.  For example: -122.083389.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the RefreshToken input for this InsertCurrentLocation choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the InsertCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the InsertCurrentLocation choreography.
     *
     * @param Temboo_Session $session The session that owns this InsertCurrentLocation execution.
     * @param Google_Latitude_InsertCurrentLocation $choreo The choregraphy object for this execution.
     * @param Google_Latitude_InsertCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertCurrentLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_InsertCurrentLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this InsertCurrentLocation execution.
     *
     * @return Google_Latitude_InsertCurrentLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this InsertCurrentLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_InsertCurrentLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_InsertCurrentLocation_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the InsertCurrentLocation choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the InsertCurrentLocation choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_InsertCurrentLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this InsertCurrentLocation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this InsertCurrentLocation execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves a list of worksheets in a given Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets extends Temboo_Choreography
{
    /**
     * Retrieves a list of worksheets in a given Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheets choreography.
     * @return Google_Spreadsheets_RetrieveWorksheets New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveWorksheets/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveWorksheets choreography.
     *
     * @param Google_Spreadsheets_RetrieveWorksheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheets_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveWorksheets choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveWorksheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveWorksheets choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveWorksheets input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveWorksheets choreography.
     *
     * @param string $value (string) Your Google password
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveWorksheets choreography.
     *
     * @param string $value (string) The unique for key for the spreadsheet associated with the worksheet(s) you want to retrieve. Can be retrieved from RetrieveSpreadsheets Choreo.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveWorksheets choreography.
     *
     * @param string $value (string) Your Google email address
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveWorksheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveWorksheets choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheets execution.
     * @param Google_Spreadsheets_RetrieveWorksheets $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveWorksheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheets_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveWorksheets $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveWorksheets execution.
     *
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveWorksheets execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveWorksheets choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveWorksheets choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveWorksheets execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new, empty document.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument extends Temboo_Choreography
{
    /**
     * Create a new, empty document.
     *
     * @param Temboo_Session $session The session that owns this CreateEmptyDocument choreography.
     * @return Google_Documents_CreateEmptyDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CreateEmptyDocument/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateEmptyDocument choreography.
     *
     * @param Google_Documents_CreateEmptyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateEmptyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateEmptyDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CreateEmptyDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateEmptyDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateEmptyDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CreateEmptyDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateEmptyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateEmptyDocument choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateEmptyDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateEmptyDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this CreateEmptyDocument choreography.
     *
     * @param string $value (required, string) Your Google password.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CreateEmptyDocument choreography.
     *
     * @param string $value (required, string) The title of the new document to create.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CreateEmptyDocument choreography.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CreateEmptyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateEmptyDocument choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateEmptyDocument execution.
     * @param Google_Documents_CreateEmptyDocument $choreo The choregraphy object for this execution.
     * @param Google_Documents_CreateEmptyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateEmptyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateEmptyDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CreateEmptyDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateEmptyDocument execution.
     *
     * @return Google_Documents_CreateEmptyDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateEmptyDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CreateEmptyDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CreateEmptyDocument_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateEmptyDocument choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateEmptyDocument choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CreateEmptyDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateEmptyDocument execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "EditLink" output from this CreateEmptyDocument execution.
     *
     * @return string The edit link URL parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }

    /**
     * Retrieve the value for the "ResourceID" output from this CreateEmptyDocument execution.
     *
     * @return string (string) The document resource ID returned from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
}

/**
 * Uploads a photo to Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto extends Temboo_Choreography
{
    /**
     * Uploads a photo to Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this PostPhoto choreography.
     * @return Google_Picasa_PostPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/PostPhoto/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PostPhoto choreography.
     *
     * @param Google_Picasa_PostPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_PostPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_PostPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_PostPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PostPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_PostPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_PostPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PostPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PostPhoto choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_PostPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PostPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this PostPhoto choreography.
     *
     * @param string $value (conditional, string) The base64 encoded file contents of the photo you want to upload.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the AccessToken input for this PostPhoto choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this PostPhoto choreography.
     *
     * @param int $value (optional, integer) The id of the album that you want to upload the photo to. Defaults to 'default' which means the photo will be uploaded to the dropbox album.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this PostPhoto choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this PostPhoto choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ImageName input for this PostPhoto choreography.
     *
     * @param string $value (required, string) The name of the image you want to upload.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setImageName($value)
    {
        return $this->set('ImageName', $value);
    }

    /**
     * Set the value for the RefreshToken input for this PostPhoto choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this PostPhoto choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to "default" which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

}


/**
 * Execution object for the PostPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PostPhoto choreography.
     *
     * @param Temboo_Session $session The session that owns this PostPhoto execution.
     * @param Google_Picasa_PostPhoto $choreo The choregraphy object for this execution.
     * @param Google_Picasa_PostPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_PostPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_PostPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_PostPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PostPhoto execution.
     *
     * @return Google_Picasa_PostPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PostPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_PostPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_PostPhoto_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PostPhoto choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PostPhoto choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_PostPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PostPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this PostPhoto execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves spreadsheet and worksheet IDs with a given spreadsheet name.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName extends Temboo_Choreography
{
    /**
     * Retrieves spreadsheet and worksheet IDs with a given spreadsheet name.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheetDetailsByName choreography.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpreadsheetDetailsByName/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpreadsheetDetailsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpreadsheetDetailsByName input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param string $value (required, string) Your Google password.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetName input for this RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param string $value (required, string) The title of the spreadsheet you want to retrieve details for.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setSpreadsheetName($value)
    {
        return $this->set('SpreadsheetName', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveSpreadsheetDetailsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheetDetailsByName execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpreadsheetDetailsByName $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpreadsheetDetailsByName execution.
     *
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveSpreadsheetDetailsByName execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveSpreadsheetDetailsByName choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveSpreadsheetDetailsByName choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "SpreadsheetDetails" output from this RetrieveSpreadsheetDetailsByName execution.
     *
     * @return string (xml) The spreadsheet details including spreadsheet name and key. Worksheet names and IDs associated with the spreadsheet are also included.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSpreadsheetDetails()
    {
        return $this->get('SpreadsheetDetails');
    }
}

/**
 * Retrieves information about a specified Google Documents account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo extends Temboo_Choreography
{
    /**
     * Retrieves information about a specified Google Documents account.
     *
     * @param Temboo_Session $session The session that owns this GetAccountInfo choreography.
     * @return Google_Documents_GetAccountInfo New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/GetAccountInfo/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAccountInfo choreography.
     *
     * @param Google_Documents_GetAccountInfo_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAccountInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAccountInfo_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_GetAccountInfo_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountInfo choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAccountInfo_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_GetAccountInfo_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAccountInfo choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAccountInfo_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountInfo input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this GetAccountInfo choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this GetAccountInfo choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetAccountInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountInfo choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAccountInfo execution.
     * @param Google_Documents_GetAccountInfo $choreo The choregraphy object for this execution.
     * @param Google_Documents_GetAccountInfo_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAccountInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAccountInfo_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_GetAccountInfo $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountInfo execution.
     *
     * @return Google_Documents_GetAccountInfo_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAccountInfo execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_GetAccountInfo_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_GetAccountInfo_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAccountInfo choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAccountInfo choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_GetAccountInfo_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAccountInfo execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the inactive Channels associated with this syndication service for the publisher.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels extends Temboo_Choreography
{
    /**
     * Returns the inactive Channels associated with this syndication service for the publisher.
     *
     * @param Temboo_Session $session The session that owns this GetInactiveChannels choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GetInactiveChannels/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetInactiveChannels choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetInactiveChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetInactiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetInactiveChannels choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetInactiveChannels input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ChannelServiceType input for this GetInactiveChannels choreography.
     *
     * @param string $value (string) One of 'Url' or 'Custom'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setChannelServiceType($value)
    {
        return $this->set('ChannelServiceType', $value);
    }

    /**
     * Set the value for the ClientID input for this GetInactiveChannels choreography.
     *
     * @param string $value (string) The ID of the publisher to get the inactive channels of.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetInactiveChannels choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetInactiveChannels choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetInactiveChannels choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GetInactiveChannels choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GetInactiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetInactiveChannels choreography.
     *
     * @param Temboo_Session $session The session that owns this GetInactiveChannels execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetInactiveChannels execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetInactiveChannels execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetInactiveChannels choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetInactiveChannels choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GetInactiveChannels_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetInactiveChannels execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds the SyndicationService to the publisher's account. SyndicationService can be 'ContentAds' or 'SearchAds'.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AddSyndicationService extends Temboo_Choreography
{
    /**
     * Adds the SyndicationService to the publisher's account. SyndicationService can be 'ContentAds' or 'SearchAds'.
     *
     * @param Temboo_Session $session The session that owns this AddSyndicationService choreography.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/AddSyndicationService/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddSyndicationService choreography.
     *
     * @param Google_AdSenseHost_AccountService_AddSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_AddSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_AddSyndicationService_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_AddSyndicationService_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AddSyndicationService_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddSyndicationService choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddSyndicationService input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this AddSyndicationService choreography.
     *
     * @param string $value (string) The ID of the publisher to add the syndication service to.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this AddSyndicationService choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddSyndicationService choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this AddSyndicationService choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceType input for this AddSyndicationService choreography.
     *
     * @param string $value (string) One of 'ContentAds' or 'SearchAds'.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Inputs For method chaining.
     */
    public function setSynServiceType($value)
    {
        return $this->set('SynServiceType', $value);
    }
}


/**
 * Execution object for the AddSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AddSyndicationService_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddSyndicationService choreography.
     *
     * @param Temboo_Session $session The session that owns this AddSyndicationService execution.
     * @param Google_AdSenseHost_AccountService_AddSyndicationService $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_AddSyndicationService_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_AddSyndicationService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_AddSyndicationService $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddSyndicationService execution.
     *
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddSyndicationService execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_AddSyndicationService_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddSyndicationService choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_AddSyndicationService_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddSyndicationService choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_AddSyndicationService_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddSyndicationService execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes an album in Google Picasa with a specified album Id.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum extends Temboo_Choreography
{
    /**
     * Deletes an album in Google Picasa with a specified album Id.
     *
     * @param Temboo_Session $session The session that owns this DeleteAlbum choreography.
     * @return Google_Picasa_DeleteAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/DeleteAlbum/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteAlbum choreography.
     *
     * @param Google_Picasa_DeleteAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_DeleteAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_DeleteAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteAlbum choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this DeleteAlbum choreography.
     *
     * @param int $value (required, integer) The album id. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAlbum choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteAlbum choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteAlbum choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this DeleteAlbum choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the DeleteAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAlbum choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteAlbum execution.
     * @param Google_Picasa_DeleteAlbum $choreo The choregraphy object for this execution.
     * @param Google_Picasa_DeleteAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_DeleteAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAlbum execution.
     *
     * @return Google_Picasa_DeleteAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_DeleteAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_DeleteAlbum_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteAlbum choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_DeleteAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteAlbum execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Updates a specified cell in a Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells extends Temboo_Choreography
{
    /**
     * Updates a specified cell in a Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this UpdateCells choreography.
     * @return Google_Spreadsheets_UpdateCells New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateCells/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateCells choreography.
     *
     * @param Google_Spreadsheets_UpdateCells_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateCells_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateCells_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateCells_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateCells choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateCells_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateCells_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateCells choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateCells choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateCells_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateCells input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Column input for this UpdateCells choreography.
     *
     * @param int $value (required, integer) The column number of the cell location that you want to update (for example, column A = 1, columnB = 2, etc).
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setColumn($value)
    {
        return $this->set('Column', $value);
    }

    /**
     * Set the value for the InputValue input for this UpdateCells choreography.
     *
     * @param string $value (required, string) The new value for the cell
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setInputValue($value)
    {
        return $this->set('InputValue', $value);
    }

    /**
     * Set the value for the Password input for this UpdateCells choreography.
     *
     * @param string $value (required, string) Your Google password
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Row input for this UpdateCells choreography.
     *
     * @param int $value (required, integer) The row number of the cell location that you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setRow($value)
    {
        return $this->set('Row', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateCells choreography.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the cell you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this UpdateCells choreography.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateCells choreography.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the cell you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateCells choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateCells choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateCells execution.
     * @param Google_Spreadsheets_UpdateCells $choreo The choregraphy object for this execution.
     * @param Google_Spreadsheets_UpdateCells_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateCells_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateCells_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateCells $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateCells execution.
     *
     * @return Google_Spreadsheets_UpdateCells_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateCells execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateCells_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateCells_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateCells choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateCells choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateCells_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateCells execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete all events from a specified calendar. Note that this operation can't be undone.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents extends Temboo_Choreography
{
    /**
     * Delete all events from a specified calendar. Note that this operation can't be undone.
     *
     * @param Temboo_Session $session The session that owns this DeleteAllEvents choreography.
     * @return Google_Calendar_DeleteAllEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteAllEvents/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteAllEvents choreography.
     *
     * @param Google_Calendar_DeleteAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteAllEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteAllEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAllEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteAllEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteAllEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteAllEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteAllEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAllEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteAllEvents choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this DeleteAllEvents choreography.
     *
     * @param string $value (optional, string) The ID for the primary calendar to delete. Defaults to "primary" which corresponds to the primary calendar of the authenticated user.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAllEvents choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteAllEvents choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteAllEvents choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAllEvents choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteAllEvents execution.
     * @param Google_Calendar_DeleteAllEvents $choreo The choregraphy object for this execution.
     * @param Google_Calendar_DeleteAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteAllEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteAllEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAllEvents execution.
     *
     * @return Google_Calendar_DeleteAllEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteAllEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteAllEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteAllEvents_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteAllEvents choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteAllEvents choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteAllEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteAllEvents execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this DeleteAllEvents execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Update an existing contact's information.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact extends Temboo_Choreography
{
    /**
     * Update an existing contact's information.
     *
     * @param Temboo_Session $session The session that owns this UpdateContact choreography.
     * @return Google_Contacts_UpdateContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/UpdateContact/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateContact choreography.
     *
     * @param Google_Contacts_UpdateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_UpdateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_UpdateContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_UpdateContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_UpdateContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_UpdateContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateContact choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_UpdateContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this UpdateContact choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this UpdateContact choreography.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this UpdateContact choreography.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the NewEmail input for this UpdateContact choreography.
     *
     * @param string $value (optional, string) The contact's new email address.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewEmail($value)
    {
        return $this->set('NewEmail', $value);
    }

    /**
     * Set the value for the NewFirstName input for this UpdateContact choreography.
     *
     * @param string $value (optional, string) The contact's new first name.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewFirstName($value)
    {
        return $this->set('NewFirstName', $value);
    }

    /**
     * Set the value for the NewLastName input for this UpdateContact choreography.
     *
     * @param string $value (optional, string) The contact's new last name.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewLastName($value)
    {
        return $this->set('NewLastName', $value);
    }

    /**
     * Set the value for the NewPhone input for this UpdateContact choreography.
     *
     * @param string $value (optional, string) The contact's new telephone number.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewPhone($value)
    {
        return $this->set('NewPhone', $value);
    }

    /**
     * Set the value for the Query input for this UpdateContact choreography.
     *
     * @param string $value (required, string) A search term to retrieve the contact to update, such as an email address, last name, or address. Be specific to not retrieve more than one contact.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this UpdateContact choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the UpdateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateContact choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateContact execution.
     * @param Google_Contacts_UpdateContact $choreo The choregraphy object for this execution.
     * @param Google_Contacts_UpdateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_UpdateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_UpdateContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_UpdateContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateContact execution.
     *
     * @return Google_Contacts_UpdateContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_UpdateContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_UpdateContact_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateContact choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateContact choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_UpdateContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateContact execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this UpdateContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }

    /**
     * Retrieve the value for the "ContactID" output from this UpdateContact execution.
     *
     * @return string (string) The unique ID for the contact returned by Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }

    /**
     * Retrieve the value for the "Email" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current email address.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEmail()
    {
        return $this->get('Email');
    }

    /**
     * Retrieve the value for the "FirstName" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current given name.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFirstName()
    {
        return $this->get('FirstName');
    }

    /**
     * Retrieve the value for the "LastName" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current family name.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLastName()
    {
        return $this->get('LastName');
    }

    /**
     * Retrieve the value for the "Phone" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current telephone number.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getPhone()
    {
        return $this->get('Phone');
    }
}

/**
 * Create a new secondary calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar extends Temboo_Choreography
{
    /**
     * Create a new secondary calendar.
     *
     * @param Temboo_Session $session The session that owns this CreateCalendar choreography.
     * @return Google_Calendar_CreateCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/CreateCalendar/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateCalendar choreography.
     *
     * @param Google_Calendar_CreateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_CreateCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_CreateCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateCalendar choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateCalendar choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateCalendar choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateCalendar choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateCalendar choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Timezone input for this CreateCalendar choreography.
     *
     * @param string $value (optional, string) The timezone for the new calendar, such as "America/Los_Angeles". Defaults to UTC if left blank.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setTimezone($value)
    {
        return $this->set('Timezone', $value);
    }

    /**
     * Set the value for the Title input for this CreateCalendar choreography.
     *
     * @param string $value (required, string) The name for the new calendar.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }
}


/**
 * Execution object for the CreateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateCalendar choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateCalendar execution.
     * @param Google_Calendar_CreateCalendar $choreo The choregraphy object for this execution.
     * @param Google_Calendar_CreateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_CreateCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateCalendar execution.
     *
     * @return Google_Calendar_CreateCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_CreateCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_CreateCalendar_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateCalendar choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_CreateCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this CreateCalendar execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Creates a photo album in a Google Picasa account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum extends Temboo_Choreography
{
    /**
     * Creates a photo album in a Google Picasa account.
     *
     * @param Temboo_Session $session The session that owns this CreateAlbum choreography.
     * @return Google_Picasa_CreateAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/CreateAlbum/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateAlbum choreography.
     *
     * @param Google_Picasa_CreateAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_CreateAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_CreateAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_CreateAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_CreateAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_CreateAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateAlbum choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_CreateAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateAlbum choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateAlbum choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Keywords input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) Keywords to associate with the album you are creating separated by commas.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setKeywords($value)
    {
        return $this->set('Keywords', $value);
    }

    /**
     * Set the value for the PhotoAccess input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) The perssion level to specify for photo access. Defaults to 'public'.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setPhotoAccess($value)
    {
        return $this->set('PhotoAccess', $value);
    }

    /**
     * Set the value for the PhotoLocation input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) The location to associate with the photo (i.e. Italy).
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setPhotoLocation($value)
    {
        return $this->set('PhotoLocation', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateAlbum choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Summary input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) The album summary.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setSummary($value)
    {
        return $this->set('Summary', $value);
    }

    /**
     * Set the value for the Timestamp input for this CreateAlbum choreography.
     *
     * @param string $value (optional, date) The timestamp to associate with the photo.  Defaults to the current timestamp. Should be an epoch timestamp in milliseconds.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setTimestamp($value)
    {
        return $this->set('Timestamp', $value);
    }

    /**
     * Set the value for the Title input for this CreateAlbum choreography.
     *
     * @param string $value (required, string) The title of the album.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the UserID input for this CreateAlbum choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the CreateAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateAlbum choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateAlbum execution.
     * @param Google_Picasa_CreateAlbum $choreo The choregraphy object for this execution.
     * @param Google_Picasa_CreateAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_CreateAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_CreateAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_CreateAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateAlbum execution.
     *
     * @return Google_Picasa_CreateAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_CreateAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_CreateAlbum_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateAlbum choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateAlbum choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_CreateAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this CreateAlbum execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves information for a file with the title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle extends Temboo_Choreography
{
    /**
     * Retrieves information for a file with the title you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByTitle choreography.
     * @return Google_Documents_SearchByTitle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByTitle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchByTitle choreography.
     *
     * @param Google_Documents_SearchByTitle_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByTitle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByTitle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByTitle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByTitle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByTitle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByTitle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByTitle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchByTitle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByTitle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByTitle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchByTitle choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this SearchByTitle choreography.
     *
     * @param string $value (required, string) The title of the document to search for. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this SearchByTitle choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchByTitle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByTitle choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchByTitle execution.
     * @param Google_Documents_SearchByTitle $choreo The choregraphy object for this execution.
     * @param Google_Documents_SearchByTitle_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByTitle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByTitle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByTitle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByTitle execution.
     *
     * @return Google_Documents_SearchByTitle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchByTitle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByTitle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByTitle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchByTitle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchByTitle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByTitle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchByTitle execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "EditMediaLink" output from this SearchByTitle execution.
     *
     * @return string (string) The 'resumable-edit-media' link of the document. This link is used when editing the content of an existing Google doc.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditMediaLink()
    {
        return $this->get('EditMediaLink');
    }

    /**
     * Retrieve the value for the "EditMetaDataLink" output from this SearchByTitle execution.
     *
     * @return string (string) The 'edit' link of the document. This link is used when editing the metadata of an existing Google doc.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditMetaDataLink()
    {
        return $this->get('EditMetaDataLink');
    }

    /**
     * Retrieve the value for the "ResourceID" output from this SearchByTitle execution.
     *
     * @return string (string) The document resource ID returned from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
}

/**
 * Rename a document or file with the new title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile extends Temboo_Choreography
{
    /**
     * Rename a document or file with the new title you specify.
     *
     * @param Temboo_Session $session The session that owns this RenameDocumentOrFile choreography.
     * @return Google_Documents_RenameDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/RenameDocumentOrFile/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RenameDocumentOrFile choreography.
     *
     * @param Google_Documents_RenameDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_RenameDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_RenameDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_RenameDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RenameDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_RenameDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_RenameDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RenameDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RenameDocumentOrFile choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_RenameDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RenameDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewTitle input for this RenameDocumentOrFile choreography.
     *
     * @param string $value (required, string) The new title for the document. It will appear exactly as you type it, so be sure to use the proper capitalization.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setNewTitle($value)
    {
        return $this->set('NewTitle', $value);
    }

    /**
     * Set the value for the Password input for this RenameDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this RenameDocumentOrFile choreography.
     *
     * @param string $value (required, string) The title of the document to rename.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this RenameDocumentOrFile choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RenameDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RenameDocumentOrFile choreography.
     *
     * @param Temboo_Session $session The session that owns this RenameDocumentOrFile execution.
     * @param Google_Documents_RenameDocumentOrFile $choreo The choregraphy object for this execution.
     * @param Google_Documents_RenameDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_RenameDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_RenameDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_RenameDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RenameDocumentOrFile execution.
     *
     * @return Google_Documents_RenameDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RenameDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_RenameDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_RenameDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RenameDocumentOrFile choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RenameDocumentOrFile choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_RenameDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RenameDocumentOrFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "EditLink" output from this RenameDocumentOrFile execution.
     *
     * @return string (string) The edit link URL for the document to rename, parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }
}

/**
 * Updates the metadata for a calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar extends Temboo_Choreography
{
    /**
     * Updates the metadata for a calendar.
     *
     * @param Temboo_Session $session The session that owns this UpdateCalendar choreography.
     * @return Google_Calendar_UpdateCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/UpdateCalendar/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateCalendar choreography.
     *
     * @param Google_Calendar_UpdateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_UpdateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_UpdateCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_UpdateCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_UpdateCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_UpdateCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateCalendar choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_UpdateCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this UpdateCalendar choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this UpdateCalendar choreography.
     *
     * @param string $value (required, string) The ID for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this UpdateCalendar choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this UpdateCalendar choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the NewDescription input for this UpdateCalendar choreography.
     *
     * @param string $value (optional, string) The new description for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewDescription($value)
    {
        return $this->set('NewDescription', $value);
    }

    /**
     * Set the value for the NewLocation input for this UpdateCalendar choreography.
     *
     * @param string $value (optional, string) The new location for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewLocation($value)
    {
        return $this->set('NewLocation', $value);
    }

    /**
     * Set the value for the NewSummary input for this UpdateCalendar choreography.
     *
     * @param string $value (required, string) The new summary for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewSummary($value)
    {
        return $this->set('NewSummary', $value);
    }

    /**
     * Set the value for the NewTimezone input for this UpdateCalendar choreography.
     *
     * @param string $value (optional, string) The new timezone for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewTimezone($value)
    {
        return $this->set('NewTimezone', $value);
    }

    /**
     * Set the value for the RefreshToken input for this UpdateCalendar choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateCalendar choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UpdateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateCalendar choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateCalendar execution.
     * @param Google_Calendar_UpdateCalendar $choreo The choregraphy object for this execution.
     * @param Google_Calendar_UpdateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_UpdateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_UpdateCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_UpdateCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateCalendar execution.
     *
     * @return Google_Calendar_UpdateCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_UpdateCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_UpdateCalendar_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateCalendar choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateCalendar choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_UpdateCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "UpdateCalendar" output from this UpdateCalendar execution.
     *
     * @return string The request template with appropriate inputs passed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getUpdateCalendar()
    {
        return $this->get('UpdateCalendar');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this UpdateCalendar execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Saves a named ad style. If an ad style with this name is already saved, this will overwrite the style's contents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_SaveAdStyle extends Temboo_Choreography
{
    /**
     * Saves a named ad style. If an ad style with this name is already saved, this will overwrite the style's contents.
     *
     * @param Temboo_Session $session The session that owns this SaveAdStyle choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/SaveAdStyle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SaveAdStyle choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SaveAdStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SaveAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SaveAdStyle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SaveAdStyle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AdStyleName input for this SaveAdStyle choreography.
     *
     * @param string $value (string) Ad style name.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setAdStyleName($value)
    {
        return $this->set('AdStyleName', $value);
    }

    /**
     * Set the value for the BackgroundColor input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The background color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setBackgroundColor($value)
    {
        return $this->set('BackgroundColor', $value);
    }

    /**
     * Set the value for the BorderColor input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The border color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setBorderColor($value)
    {
        return $this->set('BorderColor', $value);
    }

    /**
     * Set the value for the ClientID input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The ID of a publisher.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this SaveAdStyle choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The ID of this service.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }

    /**
     * Set the value for the TextColor input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The text color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setTextColor($value)
    {
        return $this->set('TextColor', $value);
    }

    /**
     * Set the value for the TitleColor input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The title color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setTitleColor($value)
    {
        return $this->set('TitleColor', $value);
    }

    /**
     * Set the value for the URLColor input for this SaveAdStyle choreography.
     *
     * @param string $value (string) The URL color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs For method chaining.
     */
    public function setURLColor($value)
    {
        return $this->set('URLColor', $value);
    }
}


/**
 * Execution object for the SaveAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SaveAdStyle choreography.
     *
     * @param Temboo_Session $session The session that owns this SaveAdStyle execution.
     * @param Google_AdSenseHost_AdSenseForContentService_SaveAdStyle $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_SaveAdStyle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SaveAdStyle execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SaveAdStyle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SaveAdStyle choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SaveAdStyle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_SaveAdStyle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SaveAdStyle execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a given comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get extends Temboo_Choreography
{
    /**
     * Retrieves a given comment.
     *
     * @param Temboo_Session $session The session that owns this Get choreography.
     * @return Google_Plus_Comments_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Comments/Get/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Get choreography.
     *
     * @param Google_Plus_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Comments_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Comments_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Get choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Get choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Get choreography.
     *
     * @param string $value (required, string) The ID of the comment to get.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Get choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Get choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get choreography.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_Comments_Get $choreo The choregraphy object for this execution.
     * @param Google_Plus_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Comments_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_Comments_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Comments_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Comments_Get_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Get choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Get choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Comments_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this Get execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Return the user's preferred locale (language).
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetUsersPreferredLocale extends Temboo_Choreography
{
    /**
     * Return the user's preferred locale (language).
     *
     * @param Temboo_Session $session The session that owns this GetUsersPreferredLocale choreography.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AccountService/GetUsersPreferredLocale/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetUsersPreferredLocale choreography.
     *
     * @param Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetUsersPreferredLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetUsersPreferredLocale choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetUsersPreferredLocale input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ClientID input for this GetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The ID of the publisher to get the locale preference of.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the Email input for this GetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The developer's email address.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetUsersPreferredLocale choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Password input for this GetUsersPreferredLocale choreography.
     *
     * @param string $value (string) The developer's password.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }
}


/**
 * Execution object for the GetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetUsersPreferredLocale choreography.
     *
     * @param Temboo_Session $session The session that owns this GetUsersPreferredLocale execution.
     * @param Google_AdSenseHost_AccountService_GetUsersPreferredLocale $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AccountService_GetUsersPreferredLocale $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetUsersPreferredLocale execution.
     *
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetUsersPreferredLocale execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetUsersPreferredLocale choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetUsersPreferredLocale choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AccountService_GetUsersPreferredLocale_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetUsersPreferredLocale execution.
     *
     * @return string (XML) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of all files of a MIME type you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType extends Temboo_Choreography
{
    /**
     * Retrieves a list of all files of a MIME type you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByType choreography.
     * @return Google_Documents_SearchByType New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByType/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchByType choreography.
     *
     * @param Google_Documents_SearchByType_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByType_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByType_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByType_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByType choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByType_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByType_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByType choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchByType choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByType_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByType input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchByType choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Type input for this SearchByType choreography.
     *
     * @param string $value (required, string) The MIME type of the files to list: word, excel, powerpoint, pdf, csv, rtf, html, css, xml, plaintext, zip, jpg, or png.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setType($value)
    {
        return $this->set('Type', $value);
    }

    /**
     * Set the value for the Username input for this SearchByType choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchByType choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByType choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchByType execution.
     * @param Google_Documents_SearchByType $choreo The choregraphy object for this execution.
     * @param Google_Documents_SearchByType_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByType_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByType_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByType $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByType execution.
     *
     * @return Google_Documents_SearchByType_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchByType execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByType_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByType_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchByType choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchByType choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByType_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchByType execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a feed of the photo comments for a specified user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments extends Temboo_Choreography
{
    /**
     * Returns a feed of the photo comments for a specified user.
     *
     * @param Temboo_Session $session The session that owns this RetrieveComments choreography.
     * @return Google_Picasa_RetrieveComments New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/RetrieveComments/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveComments choreography.
     *
     * @param Google_Picasa_RetrieveComments_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveComments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveComments_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_RetrieveComments_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveComments choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveComments_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_RetrieveComments_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveComments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveComments choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveComments_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveComments input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrieveComments choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrieveComments choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrieveComments choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the MaxResults input for this RetrieveComments choreography.
     *
     * @param int $value (optional, integer) The max number of comments to return. Defaults to 10.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrieveComments choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this RetrieveComments choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the RetrieveComments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveComments choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveComments execution.
     * @param Google_Picasa_RetrieveComments $choreo The choregraphy object for this execution.
     * @param Google_Picasa_RetrieveComments_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveComments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveComments_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_RetrieveComments $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveComments execution.
     *
     * @return Google_Picasa_RetrieveComments_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveComments execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_RetrieveComments_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_RetrieveComments_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveComments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveComments choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_RetrieveComments_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveComments execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this RetrieveComments execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves a specifed setting for a Google Calendar account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting extends Temboo_Choreography
{
    /**
     * Retrieves a specifed setting for a Google Calendar account.
     *
     * @param Temboo_Session $session The session that owns this GetSetting choreography.
     * @return Google_Calendar_GetSetting New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetSetting/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetSetting choreography.
     *
     * @param Google_Calendar_GetSetting_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetSetting_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetSetting_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetSetting_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetSetting choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetSetting_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetSetting_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetSetting choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetSetting choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetSetting_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetSetting input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetSetting choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetSetting choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetSetting choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetSetting choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetSetting choreography.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SettingID input for this GetSetting choreography.
     *
     * @param string $value (required, string) The unique ID for the setting to retrieve. Use the GetAllSettings Choreo to retrieve settings IDs.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setSettingID($value)
    {
        return $this->set('SettingID', $value);
    }
}


/**
 * Execution object for the GetSetting choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetSetting choreography.
     *
     * @param Temboo_Session $session The session that owns this GetSetting execution.
     * @param Google_Calendar_GetSetting $choreo The choregraphy object for this execution.
     * @param Google_Calendar_GetSetting_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetSetting_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetSetting_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetSetting $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetSetting execution.
     *
     * @return Google_Calendar_GetSetting_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetSetting execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetSetting_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetSetting_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetSetting choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetSetting choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetSetting_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetSetting execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this GetSetting execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves a list of all documents, files, and collections in a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments extends Temboo_Choreography
{
    /**
     * Retrieves a list of all documents, files, and collections in a Google account.
     *
     * @param Temboo_Session $session The session that owns this GetAllDocuments choreography.
     * @return Google_Documents_GetAllDocuments New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/GetAllDocuments/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAllDocuments choreography.
     *
     * @param Google_Documents_GetAllDocuments_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAllDocuments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAllDocuments_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_GetAllDocuments_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllDocuments choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAllDocuments_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_GetAllDocuments_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllDocuments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAllDocuments choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAllDocuments_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllDocuments input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Deleted input for this GetAllDocuments choreography.
     *
     * @param bool $value (optional, boolean) Returns deleted documents when set to "true" (the default). Skips deleted documents when set to "false".
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setDeleted($value)
    {
        return $this->set('Deleted', $value);
    }

    /**
     * Set the value for the Password input for this GetAllDocuments choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this GetAllDocuments choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetAllDocuments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllDocuments choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAllDocuments execution.
     * @param Google_Documents_GetAllDocuments $choreo The choregraphy object for this execution.
     * @param Google_Documents_GetAllDocuments_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAllDocuments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAllDocuments_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_GetAllDocuments $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllDocuments execution.
     *
     * @return Google_Documents_GetAllDocuments_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAllDocuments execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_GetAllDocuments_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_GetAllDocuments_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAllDocuments choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAllDocuments choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_GetAllDocuments_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAllDocuments execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Searches photos using tags that you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag extends Temboo_Choreography
{
    /**
     * Searches photos using tags that you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchPhotosByTag choreography.
     * @return Google_Picasa_SearchPhotosByTag New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/SearchPhotosByTag/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchPhotosByTag choreography.
     *
     * @param Google_Picasa_SearchPhotosByTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_SearchPhotosByTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_SearchPhotosByTag_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_SearchPhotosByTag_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchPhotosByTag choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_SearchPhotosByTag_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_SearchPhotosByTag_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchPhotosByTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchPhotosByTag choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_SearchPhotosByTag_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchPhotosByTag input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchPhotosByTag choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchPhotosByTag choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchPhotosByTag choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchPhotosByTag choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Tag input for this SearchPhotosByTag choreography.
     *
     * @param string $value (required, string) A photo tag to search by. Multiple tags can be separated by commas.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setTag($value)
    {
        return $this->set('Tag', $value);
    }

    /**
     * Set the value for the UserID input for this SearchPhotosByTag choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the SearchPhotosByTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchPhotosByTag choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchPhotosByTag execution.
     * @param Google_Picasa_SearchPhotosByTag $choreo The choregraphy object for this execution.
     * @param Google_Picasa_SearchPhotosByTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_SearchPhotosByTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_SearchPhotosByTag_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_SearchPhotosByTag $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchPhotosByTag execution.
     *
     * @return Google_Picasa_SearchPhotosByTag_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchPhotosByTag execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_SearchPhotosByTag_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_SearchPhotosByTag_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchPhotosByTag choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchPhotosByTag choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_SearchPhotosByTag_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchPhotosByTag execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this SearchPhotosByTag execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Retrieves a list of all documents shared by the two users you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared extends Temboo_Choreography
{
    /**
     * Retrieves a list of all documents shared by the two users you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchForShared choreography.
     * @return Google_Documents_SearchForShared New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchForShared/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SearchForShared choreography.
     *
     * @param Google_Documents_SearchForShared_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchForShared_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchForShared_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchForShared_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchForShared choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchForShared_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchForShared_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchForShared choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SearchForShared choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchForShared_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchForShared input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchForShared choreography.
     *
     * @param string $value (required, string) Your Google account password.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the User1 input for this SearchForShared choreography.
     *
     * @param string $value (required, string) The email address of the first document collaborator.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUser1($value)
    {
        return $this->set('User1', $value);
    }

    /**
     * Set the value for the User2 input for this SearchForShared choreography.
     *
     * @param string $value (required, string) The email address for the second document collaborator.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUser2($value)
    {
        return $this->set('User2', $value);
    }

    /**
     * Set the value for the Username input for this SearchForShared choreography.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchForShared choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchForShared choreography.
     *
     * @param Temboo_Session $session The session that owns this SearchForShared execution.
     * @param Google_Documents_SearchForShared $choreo The choregraphy object for this execution.
     * @param Google_Documents_SearchForShared_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchForShared_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchForShared_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchForShared $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchForShared execution.
     *
     * @return Google_Documents_SearchForShared_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SearchForShared execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchForShared_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchForShared_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SearchForShared choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SearchForShared choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchForShared_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SearchForShared execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Cancels an order that's been submitted to a Google Checkout merchant account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder extends Temboo_Choreography
{
    /**
     * Cancels an order that's been submitted to a Google Checkout merchant account.
     *
     * @param Temboo_Session $session The session that owns this CancelOrder choreography.
     * @return Google_Checkout_CancelOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/CancelOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CancelOrder choreography.
     *
     * @param Google_Checkout_CancelOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CancelOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CancelOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_CancelOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CancelOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_CancelOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CancelOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CancelOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Comment input for this CancelOrder choreography.
     *
     * @param string $value (required, string) The comment for the order cancellation
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelOrder choreography.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this CancelOrder choreography.
     *
     * @param int $value (required, integer) The Merchant Id provided by Google
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this CancelOrder choreography.
     *
     * @param string $value (required, string) The Merchant Key provided by Google
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this CancelOrder choreography.
     *
     * @param int $value (required, integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the Reason input for this CancelOrder choreography.
     *
     * @param string $value (required, string) The reason for the cancellation
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setReason($value)
    {
        return $this->set('Reason', $value);
    }
}


/**
 * Execution object for the CancelOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this CancelOrder execution.
     * @param Google_Checkout_CancelOrder $choreo The choregraphy object for this execution.
     * @param Google_Checkout_CancelOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CancelOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CancelOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_CancelOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelOrder execution.
     *
     * @return Google_Checkout_CancelOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CancelOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_CancelOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_CancelOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CancelOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CancelOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_CancelOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CancelOrder execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Searches all public activities.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search extends Temboo_Choreography
{
    /**
     * Searches all public activities.
     *
     * @param Temboo_Session $session The session that owns this Search choreography.
     * @return Google_Plus_Activities_Search New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/Search/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Search choreography.
     *
     * @param Google_Plus_Activities_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Search_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_Search_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Search choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Search_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_Search_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Search choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Search_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Search input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Search choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Search choreography.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Search choreography.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Search choreography.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Search choreography.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Language input for this Search choreography.
     *
     * @param string $value (optional, string) Indicates the preferred language to search with. Defaults to "en-US".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the MaxResults input for this Search choreography.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the OrderBy input for this Search choreography.
     *
     * @param string $value (optional, string) Specifies how to order search results. Valid values are: "best" (Sort activities by relevance to the user) or "recent" (Sort activities by published date). Default is "recent".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setOrderBy($value)
    {
        return $this->set('OrderBy', $value);
    }

    /**
     * Set the value for the PageToken input for this Search choreography.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Search choreography.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the Query input for this Search choreography.
     *
     * @param string $value (required, string) Full-text search query string.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Search choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Search choreography.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Search choreography.
     *
     * @param Temboo_Session $session The session that owns this Search execution.
     * @param Google_Plus_Activities_Search $choreo The choregraphy object for this execution.
     * @param Google_Plus_Activities_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Search_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_Search $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Search execution.
     *
     * @return Google_Plus_Activities_Search_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Search execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_Search_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_Search_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Search choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Search choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_Search_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Search execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this Search execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Returns a feed of the photo tags for a specified user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser extends Temboo_Choreography
{
    /**
     * Returns a feed of the photo tags for a specified user.
     *
     * @param Temboo_Session $session The session that owns this RetrieveTagsByUser choreography.
     * @return Google_Picasa_RetrieveTagsByUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/RetrieveTagsByUser/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveTagsByUser choreography.
     *
     * @param Google_Picasa_RetrieveTagsByUser_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveTagsByUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveTagsByUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_RetrieveTagsByUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveTagsByUser choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_RetrieveTagsByUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveTagsByUser choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveTagsByUser choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveTagsByUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrieveTagsByUser choreography.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrieveTagsByUser choreography.
     *
     * @param string $value (required, string) The client id provided by Google.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrieveTagsByUser choreography.
     *
     * @param string $value (required, string) The client secret provided by Google.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrieveTagsByUser choreography.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this RetrieveTagsByUser choreography.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the RetrieveTagsByUser choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveTagsByUser choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveTagsByUser execution.
     * @param Google_Picasa_RetrieveTagsByUser $choreo The choregraphy object for this execution.
     * @param Google_Picasa_RetrieveTagsByUser_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveTagsByUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveTagsByUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_RetrieveTagsByUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveTagsByUser execution.
     *
     * @return Google_Picasa_RetrieveTagsByUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveTagsByUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_RetrieveTagsByUser_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveTagsByUser choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveTagsByUser choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RetrieveTagsByUser execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "AccessToken" output from this RetrieveTagsByUser execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the Oauth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
}

/**
 * Generates the ad code snippet that can be dropped into an HTML page for the page to start receiving Google Ads.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GenerateAdCode extends Temboo_Choreography
{
    /**
     * Generates the ad code snippet that can be dropped into an HTML page for the page to start receiving Google Ads.
     *
     * @param Temboo_Session $session The session that owns this GenerateAdCode choreography.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/AdSenseHost/AdSenseForContentService/GenerateAdCode/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GenerateAdCode choreography.
     *
     * @param Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GenerateAdCode choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GenerateAdCode choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GenerateAdCode choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GenerateAdCode input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AdStyleBackgroundColor input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The background color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleBackgroundColor($value)
    {
        return $this->set('AdStyleBackgroundColor', $value);
    }

    /**
     * Set the value for the AdStyleBorderColor input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The border color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleBorderColor($value)
    {
        return $this->set('AdStyleBorderColor', $value);
    }

    /**
     * Set the value for the AdStyleName input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The ad style name.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleName($value)
    {
        return $this->set('AdStyleName', $value);
    }

    /**
     * Set the value for the AdStyleTextColor input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The text color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleTextColor($value)
    {
        return $this->set('AdStyleTextColor', $value);
    }

    /**
     * Set the value for the AdStyleTitleColor input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The title color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleTitleColor($value)
    {
        return $this->set('AdStyleTitleColor', $value);
    }

    /**
     * Set the value for the AdStyleURLColor input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The URL color of this style represented as a 6-digit hexadecimal string with leading # sign.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdStyleURLColor($value)
    {
        return $this->set('AdStyleURLColor', $value);
    }

    /**
     * Set the value for the AdUnitType input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The type of ad unit or link unit. One of 'TextOnly', 'ImageOnly', 'TextAndImage', 'FourLinkUnit', or 'FiveLinkUnit'.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAdUnitType($value)
    {
        return $this->set('AdUnitType', $value);
    }

    /**
     * Set the value for the Alternate input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The alternate content used to replace public service ads; either a hex color or a URL to another ad. This is usually nil.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setAlternate($value)
    {
        return $this->set('Alternate', $value);
    }

    /**
     * Set the value for the ChannelName input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The channel that should be used to track statistics for this page.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setChannelName($value)
    {
        return $this->set('ChannelName', $value);
    }

    /**
     * Set the value for the ClientID input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The ID of the publisher to generate ad code for.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the CornerStyles input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) One of  'DEFAULT', 'SQUARE_CORNERS', 'SLIGHTLY_ROUNDED_CORNERS', or 'VERY_ROUNDED_CORNERS'.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setCornerStyles($value)
    {
        return $this->set('CornerStyles', $value);
    }

    /**
     * Set the value for the Email input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The developer's email address.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the Endpoint input for this GenerateAdCode choreography.
     *
     * @param string $value (optional, string) One of either 'sandbox.google.com' (for testing) or 'www.google.com'. Defaults to 'sandbox.google.com'.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the HostChannelName input for this GenerateAdCode choreography.
     *
     * @param string $value (optional, string) List of AFC host channels that should be used to track statistics for this ad code. Defaults to 'nil' indicating no host channels.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setHostChannelName($value)
    {
        return $this->set('HostChannelName', $value);
    }

    /**
     * Set the value for the IsFramedPage input for this GenerateAdCode choreography.
     *
     * @param bool $value (optional, boolean) Set to 1 if the ad code snippet will be placed within a frame in a page. Defaults to 0 (false).
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setIsFramedPage($value)
    {
        return $this->set('IsFramedPage', $value);
    }

    /**
     * Set the value for the Layout input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The layout of the ad, e.g. '728x90'.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setLayout($value)
    {
        return $this->set('Layout', $value);
    }

    /**
     * Set the value for the Password input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) The developer's password.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SynServiceID input for this GenerateAdCode choreography.
     *
     * @param string $value (required, string) Tthe syndication service ID.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs For method chaining.
     */
    public function setSynServiceID($value)
    {
        return $this->set('SynServiceID', $value);
    }
}


/**
 * Execution object for the GenerateAdCode choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GenerateAdCode choreography.
     *
     * @param Temboo_Session $session The session that owns this GenerateAdCode execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GenerateAdCode $choreo The choregraphy object for this execution.
     * @param Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs|array $inputs (optional) Inputs as Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_AdSenseHost_AdSenseForContentService_GenerateAdCode $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GenerateAdCode execution.
     *
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GenerateAdCode execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GenerateAdCode choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GenerateAdCode choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_AdSenseHost_AdSenseForContentService_GenerateAdCode_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GenerateAdCode execution.
     *
     * @return string (xml) The response from Google AdSense.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Populates a shopping cart and sends order information to your merchant  account allowing a user to complete an order using Google Checkout.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder extends Temboo_Choreography
{
    /**
     * Populates a shopping cart and sends order information to your merchant  account allowing a user to complete an order using Google Checkout.
     *
     * @param Temboo_Session $session The session that owns this CreateOrder choreography.
     * @return Google_Checkout_CreateOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/CreateOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateOrder choreography.
     *
     * @param Google_Checkout_CreateOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CreateOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CreateOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_CreateOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CreateOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_CreateOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CreateOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Endpoint input for this CreateOrder choreography.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ItemDescription input for this CreateOrder choreography.
     *
     * @param string $value (string) The description of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setItemDescription($value)
    {
        return $this->set('ItemDescription', $value);
    }

    /**
     * Set the value for the ItemName input for this CreateOrder choreography.
     *
     * @param string $value (string) A name of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setItemName($value)
    {
        return $this->set('ItemName', $value);
    }

    /**
     * Set the value for the MerchantId input for this CreateOrder choreography.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this CreateOrder choreography.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the Quanity input for this CreateOrder choreography.
     *
     * @param int $value (integer) The quantity of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setQuanity($value)
    {
        return $this->set('Quanity', $value);
    }

    /**
     * Set the value for the ShippingMethod input for this CreateOrder choreography.
     *
     * @param string $value (string) The shipping method for the order (i.e. SuperShip Ground)
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setShippingMethod($value)
    {
        return $this->set('ShippingMethod', $value);
    }

    /**
     * Set the value for the ShippingPrice input for this CreateOrder choreography.
     *
     * @param float $value (decimal) The shipping price for the order
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setShippingPrice($value)
    {
        return $this->set('ShippingPrice', $value);
    }

    /**
     * Set the value for the UnitPrice input for this CreateOrder choreography.
     *
     * @param float $value (decimal) The unit price of the item that is added to the shopping cart
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setUnitPrice($value)
    {
        return $this->set('UnitPrice', $value);
    }
}


/**
 * Execution object for the CreateOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateOrder execution.
     * @param Google_Checkout_CreateOrder $choreo The choregraphy object for this execution.
     * @param Google_Checkout_CreateOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CreateOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CreateOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_CreateOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateOrder execution.
     *
     * @return Google_Checkout_CreateOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_CreateOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_CreateOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateOrder choreography.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_CreateOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateOrder execution.
     *
     * @return string (XML) The response from Google.  Contains the redirect URL that a customer will use to complete the order.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

?>