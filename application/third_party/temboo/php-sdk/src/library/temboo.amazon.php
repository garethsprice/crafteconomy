<?php

/**
 * Temboo PHP SDK Amazon classes
 *
 * Execute Choreographies from the Temboo Amazon bundle.
 *
 * PHP version 5
 *
 * LICENSE: Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @category   Services
 * @package    Temboo
 * @subpackage Amazon
 * @author     Temboo, Inc.
 * @copyright  2012 Temboo, Inc.
 * @license    http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0
 * @version    1.7
 * @link       http://live.temboo.com/sdk/php
 */


/**
 * Returns a list of the user's subscriptions. Each call returns a limited list of subscriptions, up to 100.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions extends Temboo_Choreography
{
    /**
     * Returns a list of the user's subscriptions. Each call returns a limited list of subscriptions, up to 100.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptions choreography.
     * @return Amazon_SNS_ListSubscriptions New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListSubscriptions/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListSubscriptions choreography.
     *
     * @param Amazon_SNS_ListSubscriptions_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptions_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptions_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListSubscriptions_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListSubscriptions choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptions_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListSubscriptions_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListSubscriptions choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListSubscriptions choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptions_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListSubscriptions input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListSubscriptions choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListSubscriptions choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListSubscriptions choreography.
     *
     * @param string $value (optional, string) The token returned from a previous LIstSubscriptions request.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }
}


/**
 * Execution object for the ListSubscriptions choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListSubscriptions choreography.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptions execution.
     * @param Amazon_SNS_ListSubscriptions $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_ListSubscriptions_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptions_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptions_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListSubscriptions $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListSubscriptions execution.
     *
     * @return Amazon_SNS_ListSubscriptions_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListSubscriptions execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptions_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListSubscriptions_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListSubscriptions choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListSubscriptions choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptions_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListSubscriptions execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of the user's topics.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics extends Temboo_Choreography
{
    /**
     * Returns a list of the user's topics.
     *
     * @param Temboo_Session $session The session that owns this ListTopics choreography.
     * @return Amazon_SNS_ListTopics New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListTopics/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListTopics choreography.
     *
     * @param Amazon_SNS_ListTopics_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListTopics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListTopics_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListTopics_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListTopics choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListTopics_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListTopics_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListTopics choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListTopics choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListTopics_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListTopics input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListTopics choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListTopics choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListTopics choreography.
     *
     * @param string $value (optional, string) The token returned from a previous LIstTopics request.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }
}


/**
 * Execution object for the ListTopics choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListTopics choreography.
     *
     * @param Temboo_Session $session The session that owns this ListTopics execution.
     * @param Amazon_SNS_ListTopics $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_ListTopics_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListTopics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListTopics_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListTopics $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListTopics execution.
     *
     * @return Amazon_SNS_ListTopics_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListTopics execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListTopics_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListTopics_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListTopics choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListTopics choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListTopics_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListTopics execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the lifecycle configuration information set on the bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle extends Temboo_Choreography
{
    /**
     * Returns the lifecycle configuration information set on the bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLifecycle choreography.
     * @return Amazon_S3_GetBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketLifecycle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBucketLifecycle choreography.
     *
     * @param Amazon_S3_GetBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketLifecycle choreography.
     *
     * @param string $value (required, string) The name of the bucket associated with the lifecycle you want to retrieve.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the GetBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketLifecycle choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLifecycle execution.
     * @param Amazon_S3_GetBucketLifecycle $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketLifecycle execution.
     *
     * @return Amazon_S3_GetBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBucketLifecycle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBucketLifecycle execution.
     *
     * @return string (json) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns one or more messages from the specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage extends Temboo_Choreography
{
    /**
     * Returns one or more messages from the specified queue.
     *
     * @param Temboo_Session $session The session that owns this ReceiveMessage choreography.
     * @return Amazon_SQS_ReceiveMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ReceiveMessage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ReceiveMessage choreography.
     *
     * @param Amazon_SQS_ReceiveMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ReceiveMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ReceiveMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ReceiveMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ReceiveMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ReceiveMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ReceiveMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ReceiveMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ReceiveMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ReceiveMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ReceiveMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ReceiveMessage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this ReceiveMessage choreography.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're retrieving a message from (remove all dashes in the account number).
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ReceiveMessage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this ReceiveMessage choreography.
     *
     * @param string $value (optional, string) The attribute you to return. Values are: All (default), SenderId, SentTimestamp, ApproximateReceiveCount, or ApproximateFirstReceiveTimestamp.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the MaxNumberOfMessages input for this ReceiveMessage choreography.
     *
     * @param int $value (optional, integer) The maximum number of messages to return. Defaults to 1.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setMaxNumberOfMessages($value)
    {
        return $this->set('MaxNumberOfMessages', $value);
    }

    /**
     * Set the value for the QueueName input for this ReceiveMessage choreography.
     *
     * @param string $value (required, string) The name of the queue you want to retrieve a message from.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the VisibilityTimeout input for this ReceiveMessage choreography.
     *
     * @param int $value (optional, integer) The duration (in seconds) that the received messages are hidden from future retrieve requests after a ReceiveMessage request (max is 43200).
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setVisibilityTimeout($value)
    {
        return $this->set('VisibilityTimeout', $value);
    }
}


/**
 * Execution object for the ReceiveMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ReceiveMessage choreography.
     *
     * @param Temboo_Session $session The session that owns this ReceiveMessage execution.
     * @param Amazon_SQS_ReceiveMessage $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_ReceiveMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ReceiveMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ReceiveMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ReceiveMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ReceiveMessage execution.
     *
     * @return Amazon_SQS_ReceiveMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ReceiveMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ReceiveMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ReceiveMessage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ReceiveMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ReceiveMessage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ReceiveMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ReceiveMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified database security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Deletes a specified database security group.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSecurityGroup choreography.
     * @return Amazon_RDS_DeleteDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBSecurityGroup/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteDBSecurityGroup choreography.
     *
     * @param Amazon_RDS_DeleteDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this DeleteDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The name for the security group you want to delete.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }
}


/**
 * Execution object for the DeleteDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBSecurityGroup choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSecurityGroup execution.
     * @param Amazon_RDS_DeleteDBSecurityGroup $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DeleteDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBSecurityGroup execution.
     *
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteDBSecurityGroup choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteDBSecurityGroup execution.
     *
     * @return string (string) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds or updates a product image with a given image location and SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage extends Temboo_Choreography
{
    /**
     * Adds or updates a product image with a given image location and SKU.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateProductImage choreography.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateProductImage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateProductImage choreography.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateProductImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateProductImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddOrUpdateProductImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateProductImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ImageLocation input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) The URL for the image location.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setImageLocation($value)
    {
        return $this->set('ImageLocation', $value);
    }

    /**
     * Set the value for the ImageType input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (optional, string) The type of image (Main, Alternate, or Swatch). Defaults to "Main".
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setImageType($value)
    {
        return $this->set('ImageType', $value);
    }

    /**
     * Set the value for the SKU input for this AddOrUpdateProductImage choreography.
     *
     * @param string $value (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU for the product that is associated with the image you are uploading.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateProductImage choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the AddOrUpdateProductImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateProductImage choreography.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateProductImage execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateProductImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateProductImage execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddOrUpdateProductImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddOrUpdateProductImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddOrUpdateProductImage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateProductImage execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateProductImage execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateProductImage execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateProductImage execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Allows you to stop an Amazon Machine Image by specifying its Instance ID.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances extends Temboo_Choreography
{
    /**
     * Allows you to stop an Amazon Machine Image by specifying its Instance ID.
     *
     * @param Temboo_Session $session The session that owns this StopInstances choreography.
     * @return Amazon_EC2_StopInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/StopInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this StopInstances choreography.
     *
     * @param Amazon_EC2_StopInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StopInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StopInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_StopInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StopInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StopInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_StopInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StopInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the StopInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StopInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StopInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this StopInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this StopInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this StopInstances choreography.
     *
     * @param string $value (required, string) The instance ID to stop.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the StopInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StopInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this StopInstances execution.
     * @param Amazon_EC2_StopInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_StopInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StopInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StopInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_StopInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StopInstances execution.
     *
     * @return Amazon_EC2_StopInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this StopInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_StopInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_StopInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the StopInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the StopInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_StopInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this StopInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes an individual inventory listings from a Seller Central account with a given SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem extends Temboo_Choreography
{
    /**
     * Deletes an individual inventory listings from a Seller Central account with a given SKU.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItem choreography.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/DeleteInventoryItem/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteInventoryItem choreography.
     *
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteInventoryItem choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteInventoryItem choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteInventoryItem input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the SKU input for this DeleteInventoryItem choreography.
     *
     * @param string $value (required, string) A individual SKU associating with the product to delete.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteInventoryItem choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this DeleteInventoryItem choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this DeleteInventoryItem choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteInventoryItem choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOptions input for this DeleteInventoryItem choreography.
     *
     * @param string $value (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setDeleteOptions($value)
    {
        return $this->set('DeleteOptions', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteInventoryItem choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this DeleteInventoryItem choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the DeleteInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteInventoryItem choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItem execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_DeleteInventoryItem $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteInventoryItem execution.
     *
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteInventoryItem execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteInventoryItem choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteInventoryItem execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this DeleteInventoryItem execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this DeleteInventoryItem execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this DeleteInventoryItem execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Deletes the lifecycle configuration from the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle extends Temboo_Choreography
{
    /**
     * Deletes the lifecycle configuration from the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketLifecycle choreography.
     * @return Amazon_S3_DeleteBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketLifecycle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteBucketLifecycle choreography.
     *
     * @param Amazon_S3_DeleteBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketLifecycle choreography.
     *
     * @param string $value (required, string) The name of the bucket associated with the lifecycle you want to delete.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketLifecycle choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketLifecycle execution.
     * @param Amazon_S3_DeleteBucketLifecycle $choreo The choregraphy object for this execution.
     * @param Amazon_S3_DeleteBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketLifecycle execution.
     *
     * @return Amazon_S3_DeleteBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteBucketLifecycle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteBucketLifecycle execution.
     *
     * @return string (xml) Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a particular message from a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage extends Temboo_Choreography
{
    /**
     * Deletes a particular message from a specified queue.
     *
     * @param Temboo_Session $session The session that owns this DeleteMessage choreography.
     * @return Amazon_SQS_DeleteMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/DeleteMessage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteMessage choreography.
     *
     * @param Amazon_SQS_DeleteMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_DeleteMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_DeleteMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteMessage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this DeleteMessage choreography.
     *
     * @param int $value (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteMessage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this DeleteMessage choreography.
     *
     * @param string $value (required, string) The name of the queue that contains the message you want to delete.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the ReceiptHandle input for this DeleteMessage choreography.
     *
     * @param string $value (required, string) The receipt handle associated with the message you want to delete. This is returned in the RecieveMessage request.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setReceiptHandle($value)
    {
        return $this->set('ReceiptHandle', $value);
    }
}


/**
 * Execution object for the DeleteMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteMessage choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteMessage execution.
     * @param Amazon_SQS_DeleteMessage $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_DeleteMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_DeleteMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteMessage execution.
     *
     * @return Amazon_SQS_DeleteMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_DeleteMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_DeleteMessage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteMessage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_DeleteMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file active listings report that contains only the SKU, ASIN, Price, and Quantity fields for items that have a quantity greater than zero.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file active listings report that contains only the SKU, ASIN, Price, and Quantity fields for items that have a quantity greater than zero.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsLiteReport choreography.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/MerchantListingsLiteReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this MerchantListingsLiteReport choreography.
     *
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MerchantListingsLiteReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MerchantListingsLiteReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the MerchantListingsLiteReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MerchantListingsLiteReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MerchantListingsLiteReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this MerchantListingsLiteReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this MerchantListingsLiteReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MerchantListingsLiteReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this MerchantListingsLiteReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this MerchantListingsLiteReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the MerchantListingsLiteReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MerchantListingsLiteReport choreography.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsLiteReport execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_MerchantListingsLiteReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MerchantListingsLiteReport execution.
     *
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this MerchantListingsLiteReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the MerchantListingsLiteReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the MerchantListingsLiteReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this MerchantListingsLiteReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this MerchantListingsLiteReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this MerchantListingsLiteReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this MerchantListingsLiteReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Sets an attribute of a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes extends Temboo_Choreography
{
    /**
     * Sets an attribute of a specified queue.
     *
     * @param Temboo_Session $session The session that owns this SetQueueAttributes choreography.
     * @return Amazon_SQS_SetQueueAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/SetQueueAttributes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SetQueueAttributes choreography.
     *
     * @param Amazon_SQS_SetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SetQueueAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_SetQueueAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetQueueAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SetQueueAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_SetQueueAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SetQueueAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SetQueueAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetQueueAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SetQueueAttributes choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this SetQueueAttributes choreography.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SetQueueAttributes choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this SetQueueAttributes choreography.
     *
     * @param string $value (required, string) The name of the attribute that you want to set. Valid values are: VisibilityTimeout, Policy, MaximumMessageSize, or MessageRetentionPeriod.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the AttributeValue input for this SetQueueAttributes choreography.
     *
     * @param string $value (required, string) The value of the attribute you want to set. Corresponds to the AttributeName you specify.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeValue($value)
    {
        return $this->set('AttributeValue', $value);
    }

    /**
     * Set the value for the QueueName input for this SetQueueAttributes choreography.
     *
     * @param string $value (required, string) The name of the queue you want to set attributes for.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the SetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetQueueAttributes choreography.
     *
     * @param Temboo_Session $session The session that owns this SetQueueAttributes execution.
     * @param Amazon_SQS_SetQueueAttributes $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_SetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SetQueueAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_SetQueueAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetQueueAttributes execution.
     *
     * @return Amazon_SQS_SetQueueAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SetQueueAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_SetQueueAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_SetQueueAttributes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SetQueueAttributes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_SetQueueAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SetQueueAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the status of a specified transaction.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus extends Temboo_Choreography
{
    /**
     * Retrieves the status of a specified transaction.
     *
     * @param Temboo_Session $session The session that owns this GetTransactionStatus choreography.
     * @return Amazon_FPS_GetTransactionStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetTransactionStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetTransactionStatus choreography.
     *
     * @param Amazon_FPS_GetTransactionStatus_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransactionStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransactionStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetTransactionStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTransactionStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransactionStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetTransactionStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTransactionStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetTransactionStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransactionStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTransactionStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTransactionStatus choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTransactionStatus choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetTransactionStatus choreography.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TransactionId input for this GetTransactionStatus choreography.
     *
     * @param string $value (required, string) The ID for the transaction status you want to retrieve.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setTransactionId($value)
    {
        return $this->set('TransactionId', $value);
    }
}


/**
 * Execution object for the GetTransactionStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTransactionStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetTransactionStatus execution.
     * @param Amazon_FPS_GetTransactionStatus $choreo The choregraphy object for this execution.
     * @param Amazon_FPS_GetTransactionStatus_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransactionStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransactionStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetTransactionStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTransactionStatus execution.
     *
     * @return Amazon_FPS_GetTransactionStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetTransactionStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetTransactionStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetTransactionStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetTransactionStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetTransactionStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetTransactionStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetTransactionStatus execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the access control list (ACL) of a bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL extends Temboo_Choreography
{
    /**
     * Returns the access control list (ACL) of a bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketACL choreography.
     * @return Amazon_S3_GetBucketACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketACL/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBucketACL choreography.
     *
     * @param Amazon_S3_GetBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketACL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBucketACL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketACL choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketACL choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketACL choreography.
     *
     * @param string $value (required, string) The name of the bucket associated with the ACL you want to retrieve.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the GetBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketACL choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBucketACL execution.
     * @param Amazon_S3_GetBucketACL $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketACL execution.
     *
     * @return Amazon_S3_GetBucketACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBucketACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketACL_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBucketACL choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBucketACL execution.
     *
     * @return string (json) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows a topic owner to update the attribute of a topic to a new value.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes extends Temboo_Choreography
{
    /**
     * Allows a topic owner to update the attribute of a topic to a new value.
     *
     * @param Temboo_Session $session The session that owns this SetTopicAttributes choreography.
     * @return Amazon_SNS_SetTopicAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/SetTopicAttributes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SetTopicAttributes choreography.
     *
     * @param Amazon_SNS_SetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_SetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_SetTopicAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_SetTopicAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetTopicAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_SetTopicAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_SetTopicAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SetTopicAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_SetTopicAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetTopicAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SetTopicAttributes choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SetTopicAttributes choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this SetTopicAttributes choreography.
     *
     * @param string $value (required, string) The name of the attribute you want to modify. Valid values are: Policy and DisplayName.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the AttributeValue input for this SetTopicAttributes choreography.
     *
     * @param string $value (required, string) The new value for the attribute that you want to update.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAttributeValue($value)
    {
        return $this->set('AttributeValue', $value);
    }

    /**
     * Set the value for the TopicArn input for this SetTopicAttributes choreography.
     *
     * @param string $value (required, string) The ARN of the topic that has an attribute that you want to set.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the SetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetTopicAttributes choreography.
     *
     * @param Temboo_Session $session The session that owns this SetTopicAttributes execution.
     * @param Amazon_SNS_SetTopicAttributes $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_SetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_SetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_SetTopicAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_SetTopicAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetTopicAttributes execution.
     *
     * @return Amazon_SNS_SetTopicAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SetTopicAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_SetTopicAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_SetTopicAttributes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SetTopicAttributes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_SetTopicAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SetTopicAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes inventory listings from a Seller Central account with a given flat file of SKUs.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems extends Temboo_Choreography
{
    /**
     * Deletes inventory listings from a Seller Central account with a given flat file of SKUs.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItems choreography.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/DeleteInventoryItems/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteInventoryItems choreography.
     *
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteInventoryItems choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteInventoryItems choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteInventoryItems input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the SKUs input for this DeleteInventoryItems choreography.
     *
     * @param string $value (conditional, multiline) The list of SKUs associating with the products to delete. SKUs are provided as Tab Delimited values (do not include a sku column name).
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setSKUs($value)
    {
        return $this->set('SKUs', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteInventoryItems choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this DeleteInventoryItems choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this DeleteInventoryItems choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteInventoryItems choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOptions input for this DeleteInventoryItems choreography.
     *
     * @param string $value (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setDeleteOptions($value)
    {
        return $this->set('DeleteOptions', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteInventoryItems choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this DeleteInventoryItems choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the DeleteInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteInventoryItems choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItems execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_DeleteInventoryItems $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteInventoryItems execution.
     *
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteInventoryItems execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteInventoryItems choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteInventoryItems execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this DeleteInventoryItems execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this DeleteInventoryItems execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this DeleteInventoryItems execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Returns information on EC2 instances associated with your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances extends Temboo_Choreography
{
    /**
     * Returns information on EC2 instances associated with your AWS account.
     *
     * @param Temboo_Session $session The session that owns this DescribeInstances choreography.
     * @return Amazon_EC2_DescribeInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeInstances choreography.
     *
     * @param Amazon_EC2_DescribeInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this DescribeInstances choreography.
     *
     * @param string $value (optional, string) The ID of the instance you want to return. Returns all instances if this parameter is not specified.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the DescribeInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeInstances execution.
     * @param Amazon_EC2_DescribeInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeInstances execution.
     *
     * @return Amazon_EC2_DescribeInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new DB Instance from a DB snapshot.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot extends Temboo_Choreography
{
    /**
     * Creates a new DB Instance from a DB snapshot.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceFromDBSnapshot choreography.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RestoreDBInstanceFromDBSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RestoreDBInstanceFromDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RestoreDBInstanceFromDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (required, string) The identifier for the new DB instance that will be created from the specified Snapshot.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBName input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (required, string) The name of the DB Snapshot to use.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }

    /**
     * Set the value for the Engine input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the LicenseModel input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param string $value (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setLicenseModel($value)
    {
        return $this->set('LicenseModel', $value);
    }

    /**
     * Set the value for the MultiAZ input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the Port input for this RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param int $value (optional, integer) The port number on which the database accepts connections.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setPort($value)
    {
        return $this->set('Port', $value);
    }
}


/**
 * Execution object for the RestoreDBInstanceFromDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceFromDBSnapshot execution.
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RestoreDBInstanceFromDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RestoreDBInstanceFromDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RestoreDBInstanceFromDBSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates an Amazon Machine Image from an Amazon EBS-backed instance. The image can be used later to launch other identical servers.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage extends Temboo_Choreography
{
    /**
     * Creates an Amazon Machine Image from an Amazon EBS-backed instance. The image can be used later to launch other identical servers.
     *
     * @param Temboo_Session $session The session that owns this CreateImage choreography.
     * @return Amazon_EC2_CreateImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateImage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateImage choreography.
     *
     * @param Amazon_EC2_CreateImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateImage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateImage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Description input for this CreateImage choreography.
     *
     * @param string $value (optional, string) A description for the image you want to create.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the InstanceId input for this CreateImage choreography.
     *
     * @param string $value (required, string) The ID of the instance to create the image on.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the Name input for this CreateImage choreography.
     *
     * @param string $value (required, string) The name for the image you are creating.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the NoReboot input for this CreateImage choreography.
     *
     * @param bool $value (optional, boolean) Defaults to false. Amazon EC2 will attempt to shut down the instance before and after creating the image. Set to 1 for NoReboot.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setNoReboot($value)
    {
        return $this->set('NoReboot', $value);
    }
}


/**
 * Execution object for the CreateImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateImage choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateImage execution.
     * @param Amazon_EC2_CreateImage $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_CreateImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateImage execution.
     *
     * @return Amazon_EC2_CreateImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateImage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateImage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateImage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited report of open listings. The report contains the SKU, ASIN, Price, and Quantity fields for inventory listings.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited report of open listings. The report contains the SKU, ASIN, Price, and Quantity fields for inventory listings.
     *
     * @param Temboo_Session $session The session that owns this ListInventoryReport choreography.
     * @return Amazon_Marketplace_Reports_ListInventoryReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/ListInventoryReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListInventoryReport choreography.
     *
     * @param Amazon_Marketplace_Reports_ListInventoryReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_ListInventoryReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventoryReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventoryReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListInventoryReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventoryReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventoryReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventoryReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventoryReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventoryReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventoryReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this ListInventoryReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the ListInventoryReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventoryReport choreography.
     *
     * @param Temboo_Session $session The session that owns this ListInventoryReport execution.
     * @param Amazon_Marketplace_Reports_ListInventoryReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_ListInventoryReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_ListInventoryReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_ListInventoryReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventoryReport execution.
     *
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListInventoryReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListInventoryReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListInventoryReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this ListInventoryReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this ListInventoryReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this ListInventoryReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this ListInventoryReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Retrieves one or all attributes of a queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes extends Temboo_Choreography
{
    /**
     * Retrieves one or all attributes of a queue.
     *
     * @param Temboo_Session $session The session that owns this GetQueueAttributes choreography.
     * @return Amazon_SQS_GetQueueAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/GetQueueAttributes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetQueueAttributes choreography.
     *
     * @param Amazon_SQS_GetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_GetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_GetQueueAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_GetQueueAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetQueueAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_GetQueueAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_GetQueueAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetQueueAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_GetQueueAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetQueueAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetQueueAttributes choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this GetQueueAttributes choreography.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetQueueAttributes choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this GetQueueAttributes choreography.
     *
     * @param string $value (optional, string) The name of the attribute that you want to retrieve for the specified queue. Defaults to 'All'.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the QueueName input for this GetQueueAttributes choreography.
     *
     * @param string $value (required, string) The name of the queue to retrieve attributes for.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the GetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetQueueAttributes choreography.
     *
     * @param Temboo_Session $session The session that owns this GetQueueAttributes execution.
     * @param Amazon_SQS_GetQueueAttributes $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_GetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_GetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_GetQueueAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_GetQueueAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetQueueAttributes execution.
     *
     * @return Amazon_SQS_GetQueueAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetQueueAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_GetQueueAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_GetQueueAttributes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetQueueAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetQueueAttributes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_GetQueueAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetQueueAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance extends Temboo_Choreography
{
    /**
     * Deletes a specified database instance.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBInstance choreography.
     * @return Amazon_RDS_DeleteDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBInstance/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteDBInstance choreography.
     *
     * @param Amazon_RDS_DeleteDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBInstance choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBInstance choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DeleteDBInstance choreography.
     *
     * @param string $value (required, string) The ID for the DB instance to delete.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }
}


/**
 * Execution object for the DeleteDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBInstance choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBInstance execution.
     * @param Amazon_RDS_DeleteDBInstance $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DeleteDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBInstance execution.
     *
     * @return Amazon_RDS_DeleteDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBInstance_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteDBInstance choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sends a message to a topic's subscribed endpoints.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish extends Temboo_Choreography
{
    /**
     * Sends a message to a topic's subscribed endpoints.
     *
     * @param Temboo_Session $session The session that owns this Publish choreography.
     * @return Amazon_SNS_Publish New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Publish/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Publish choreography.
     *
     * @param Amazon_SNS_Publish_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Publish_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Publish_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Publish_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Publish choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Publish_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Publish_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Publish choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Publish choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Publish_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Publish input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Publish choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Publish choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MessageStructure input for this Publish choreography.
     *
     * @param string $value (optional, string) Can be set to 'json' if you are providing a valid JSON object for the Message input variable.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setMessageStructure($value)
    {
        return $this->set('MessageStructure', $value);
    }

    /**
     * Set the value for the Message input for this Publish choreography.
     *
     * @param string $value (required, string) The text for the message you want to send to the topic.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setMessage($value)
    {
        return $this->set('Message', $value);
    }

    /**
     * Set the value for the Subject input for this Publish choreography.
     *
     * @param string $value (optional, string) The "Subject" line of the message when the message is delivered to e-mail endpoints or as a JSON message.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setSubject($value)
    {
        return $this->set('Subject', $value);
    }

    /**
     * Set the value for the TopicArn input for this Publish choreography.
     *
     * @param string $value (required, string) The ARN of the topic you want to publish to.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the Publish choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Publish choreography.
     *
     * @param Temboo_Session $session The session that owns this Publish execution.
     * @param Amazon_SNS_Publish $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_Publish_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Publish_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Publish_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Publish $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Publish execution.
     *
     * @return Amazon_SNS_Publish_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Publish execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Publish_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Publish_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Publish choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Publish choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Publish_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Publish execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a queue with a specified queue URL.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue extends Temboo_Choreography
{
    /**
     * Deletes a queue with a specified queue URL.
     *
     * @param Temboo_Session $session The session that owns this DeleteQueue choreography.
     * @return Amazon_SQS_DeleteQueue New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/DeleteQueue/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteQueue choreography.
     *
     * @param Amazon_SQS_DeleteQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteQueue_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_DeleteQueue_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteQueue choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteQueue_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_DeleteQueue_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteQueue choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteQueue_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteQueue input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteQueue choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this DeleteQueue choreography.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're deleting a message from (remove all dashes in the account number).
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteQueue choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this DeleteQueue choreography.
     *
     * @param string $value (required, string) The name of the queue you want to delete.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the DeleteQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteQueue choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteQueue execution.
     * @param Amazon_SQS_DeleteQueue $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_DeleteQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteQueue_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_DeleteQueue $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteQueue execution.
     *
     * @return Amazon_SQS_DeleteQueue_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteQueue execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_DeleteQueue_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_DeleteQueue_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteQueue choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_DeleteQueue_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteQueue execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a snapshot from a specified EBS volume.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot extends Temboo_Choreography
{
    /**
     * Create a snapshot from a specified EBS volume.
     *
     * @param Temboo_Session $session The session that owns this CreateSnapshot choreography.
     * @return Amazon_EC2_CreateSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateSnapshot choreography.
     *
     * @param Amazon_EC2_CreateSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Description input for this CreateSnapshot choreography.
     *
     * @param string $value (optional, string) A description for the volume that you want to create.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the VolumeId input for this CreateSnapshot choreography.
     *
     * @param string $value (required, string) The id of the EBS volume to snapshot.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the CreateSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateSnapshot execution.
     * @param Amazon_EC2_CreateSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_CreateSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSnapshot execution.
     *
     * @return Amazon_EC2_CreateSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new queue with a specified queue name.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue extends Temboo_Choreography
{
    /**
     * Creates a new queue with a specified queue name.
     *
     * @param Temboo_Session $session The session that owns this CreateQueue choreography.
     * @return Amazon_SQS_CreateQueue New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/CreateQueue/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateQueue choreography.
     *
     * @param Amazon_SQS_CreateQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_CreateQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_CreateQueue_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_CreateQueue_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateQueue choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_CreateQueue_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_CreateQueue_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateQueue choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_CreateQueue_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateQueue input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateQueue choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateQueue choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DefaultVisibilityTimeout input for this CreateQueue choreography.
     *
     * @param int $value (optional, integer) The visibility timeout (in seconds) to use for the newly created queue.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setDefaultVisibilityTimeout($value)
    {
        return $this->set('DefaultVisibilityTimeout', $value);
    }

    /**
     * Set the value for the QueueName input for this CreateQueue choreography.
     *
     * @param string $value (required, string) The name of the queue you want to create.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the CreateQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateQueue choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateQueue execution.
     * @param Amazon_SQS_CreateQueue $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_CreateQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_CreateQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_CreateQueue_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_CreateQueue $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateQueue execution.
     *
     * @return Amazon_SQS_CreateQueue_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateQueue execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_CreateQueue_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_CreateQueue_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateQueue choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateQueue choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_CreateQueue_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateQueue execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents extends Temboo_Choreography
{
    /**
     * Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days.
     *
     * @param Temboo_Session $session The session that owns this DescribeEvents choreography.
     * @return Amazon_RDS_DescribeEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeEvents/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeEvents choreography.
     *
     * @param Amazon_RDS_DescribeEvents_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeEvents choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeEvents choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeEvents choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeEvents choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Duration input for this DescribeEvents choreography.
     *
     * @param int $value (optional, integer) The number of minutes to retrieve events for. Defaults to 60.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setDuration($value)
    {
        return $this->set('Duration', $value);
    }

    /**
     * Set the value for the EndTime input for this DescribeEvents choreography.
     *
     * @param string $value (optional, date) The end of the time interval for which to retrieve events, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z).
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setEndTime($value)
    {
        return $this->set('EndTime', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeEvents choreography.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeEvents choreography.
     *
     * @param int $value (optional, integer) The maximum number of records to include in the response. If more records exist, a marker is included in the response so that the remaining results may be retrieved. Defaults to max (100). Min is 20.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }

    /**
     * Set the value for the SourceIdentifier input for this DescribeEvents choreography.
     *
     * @param string $value (optional, string) The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setSourceIdentifier($value)
    {
        return $this->set('SourceIdentifier', $value);
    }

    /**
     * Set the value for the SourceType input for this DescribeEvents choreography.
     *
     * @param string $value (optional, string) The event source to retrieve events for. If no value is specified, all events are returned. Valid values are: db-instance | db-parameter-group | db-security-group | db-snapshot.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setSourceType($value)
    {
        return $this->set('SourceType', $value);
    }

    /**
     * Set the value for the StartTime input for this DescribeEvents choreography.
     *
     * @param string $value (optional, date) The beginning of the time interval to retrieve events for, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z)
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setStartTime($value)
    {
        return $this->set('StartTime', $value);
    }
}


/**
 * Execution object for the DescribeEvents choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeEvents choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeEvents execution.
     * @param Amazon_RDS_DescribeEvents $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DescribeEvents_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeEvents execution.
     *
     * @return Amazon_RDS_DescribeEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeEvents_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeEvents choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeEvents choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeEvents execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns transactions for a specified subscription id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction extends Temboo_Choreography
{
    /**
     * Returns transactions for a specified subscription id.
     *
     * @param Temboo_Session $session The session that owns this GetTransaction choreography.
     * @return Amazon_FPS_GetTransaction New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetTransaction/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetTransaction choreography.
     *
     * @param Amazon_FPS_GetTransaction_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransaction_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransaction_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetTransaction_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTransaction choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransaction_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetTransaction_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTransaction choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetTransaction choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransaction_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTransaction input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTransaction choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTransaction choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetTransaction choreography.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the SubscriptionId input for this GetTransaction choreography.
     *
     * @param string $value (required, string) The ID for the subscription to retrieve the transactions for.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setSubscriptionId($value)
    {
        return $this->set('SubscriptionId', $value);
    }
}


/**
 * Execution object for the GetTransaction choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTransaction choreography.
     *
     * @param Temboo_Session $session The session that owns this GetTransaction execution.
     * @param Amazon_FPS_GetTransaction $choreo The choregraphy object for this execution.
     * @param Amazon_FPS_GetTransaction_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransaction_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransaction_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetTransaction $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTransaction execution.
     *
     * @return Amazon_FPS_GetTransaction_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetTransaction execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetTransaction_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetTransaction_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetTransaction choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetTransaction choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetTransaction_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetTransaction execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new EBS volume that your EC2 instance can attach to.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume extends Temboo_Choreography
{
    /**
     * Creates a new EBS volume that your EC2 instance can attach to.
     *
     * @param Temboo_Session $session The session that owns this CreateVolume choreography.
     * @return Amazon_EC2_CreateVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateVolume/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateVolume choreography.
     *
     * @param Amazon_EC2_CreateVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateVolume choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateVolume choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this CreateVolume choreography.
     *
     * @param string $value (required, string) The Availability Zone to use when creating thew new volume (i.e us-east-1a).
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the Size input for this CreateVolume choreography.
     *
     * @param int $value (conditional, integer) The size for the volume (in gigabytes) that you are creating. Valid Values are 1-1024. Required if you're not creating a volume from a snapshot.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setSize($value)
    {
        return $this->set('Size', $value);
    }

    /**
     * Set the value for the SnapshotId input for this CreateVolume choreography.
     *
     * @param string $value (conditional, string) The snapshot from which to create the new volume. Required if you are creating a volume from a snapshot.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }
}


/**
 * Execution object for the CreateVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateVolume choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateVolume execution.
     * @param Amazon_EC2_CreateVolume $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_CreateVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateVolume execution.
     *
     * @return Amazon_EC2_CreateVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateVolume_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateVolume choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateVolume execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of DBSecurityGroup descriptions. The list will can be filtered by specifying a DBSecurityGroupName.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Returns a list of DBSecurityGroup descriptions. The list will can be filtered by specifying a DBSecurityGroupName.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSecurityGroup choreography.
     * @return Amazon_RDS_DescribeDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBSecurityGroup/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeDBSecurityGroup choreography.
     *
     * @param Amazon_RDS_DescribeDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this DescribeDBSecurityGroup choreography.
     *
     * @param string $value (optional, string) The name for the security group you want to retrieve information for.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeDBSecurityGroup choreography.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBSecurityGroup choreography.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBSecurityGroup choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSecurityGroup execution.
     * @param Amazon_RDS_DescribeDBSecurityGroup $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DescribeDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBSecurityGroup execution.
     *
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeDBSecurityGroup choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeDBSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to add to or replace a policy on a bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy extends Temboo_Choreography
{
    /**
     * Allows you to add to or replace a policy on a bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketPolicy choreography.
     * @return Amazon_S3_PutBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketPolicy/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PutBucketPolicy choreography.
     *
     * @param Amazon_S3_PutBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PutBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Policy input for this PutBucketPolicy choreography.
     *
     * @param string $value (required, json) A JSON string containing the policy information.  See Choreo documentation for a sample JSON policy.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setPolicy($value)
    {
        return $this->set('Policy', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketPolicy choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketPolicy choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketPolicy choreography.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the PutBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketPolicy choreography.
     *
     * @param Temboo_Session $session The session that owns this PutBucketPolicy execution.
     * @param Amazon_S3_PutBucketPolicy $choreo The choregraphy object for this execution.
     * @param Amazon_S3_PutBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketPolicy execution.
     *
     * @return Amazon_S3_PutBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PutBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PutBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PutBucketPolicy choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PutBucketPolicy execution.
     *
     * @return string (xml) Stores the response from Amazon. Note that for a successful policy creation, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new database security group which you can use to control the access to the database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Creates a new database security group which you can use to control the access to the database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSecurityGroup choreography.
     * @return Amazon_RDS_CreateDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBSecurityGroup/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateDBSecurityGroup choreography.
     *
     * @param Amazon_RDS_CreateDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateDBSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBSecurityGroup choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupDescription input for this CreateDBSecurityGroup choreography.
     *
     * @param string $value (required, string) A description for the security group you're creating.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupDescription($value)
    {
        return $this->set('DBSecurityGroupDescription', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this CreateDBSecurityGroup choreography.
     *
     * @param string $value (required, string) A unique name for the security group you want to create.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }
}


/**
 * Execution object for the CreateDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBSecurityGroup choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSecurityGroup execution.
     * @param Amazon_RDS_CreateDBSecurityGroup $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_CreateDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBSecurityGroup execution.
     *
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateDBSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateDBSecurityGroup choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateDBSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a bucket from your Amazon S3 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket extends Temboo_Choreography
{
    /**
     * Deletes a bucket from your Amazon S3 account.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucket choreography.
     * @return Amazon_S3_DeleteBucket New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucket/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteBucket choreography.
     *
     * @param Amazon_S3_DeleteBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucket_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucket_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucket choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucket_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucket_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteBucket choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucket_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucket input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucket choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucket choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucket choreography.
     *
     * @param string $value (required, string) The name of the bucket that will be the file destination.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucket choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucket execution.
     * @param Amazon_S3_DeleteBucket $choreo The choregraphy object for this execution.
     * @param Amazon_S3_DeleteBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucket_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucket $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucket execution.
     *
     * @return Amazon_S3_DeleteBucket_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteBucket execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucket_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucket_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteBucket choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucket_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteBucket execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for successful deletions.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Makes a requests to Amazon to cancel an existing fulfillment order.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder extends Temboo_Choreography
{
    /**
     * Makes a requests to Amazon to cancel an existing fulfillment order.
     *
     * @param Temboo_Session $session The session that owns this CancelFulfillmentOrder choreography.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/OutboundShipments/CancelFulfillmentOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CancelFulfillmentOrder choreography.
     *
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelFulfillmentOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelFulfillmentOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CancelFulfillmentOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelFulfillmentOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the SellerFulfillmentOrderId input for this CancelFulfillmentOrder choreography.
     *
     * @param string $value (required, string) The fulfillment order id that you created and submitted using the CreateFulfillmentOrder Choreo.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setSellerFulfillmentOrderId($value)
    {
        return $this->set('SellerFulfillmentOrderId', $value);
    }
}


/**
 * Execution object for the CancelFulfillmentOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelFulfillmentOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this CancelFulfillmentOrder execution.
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelFulfillmentOrder execution.
     *
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CancelFulfillmentOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CancelFulfillmentOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CancelFulfillmentOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CancelFulfillmentOrder execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads a file to your Amazon S3 storage bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject extends Temboo_Choreography
{
    /**
     * Uploads a file to your Amazon S3 storage bucket.
     *
     * @param Temboo_Session $session The session that owns this PutObject choreography.
     * @return Amazon_S3_PutObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutObject/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PutObject choreography.
     *
     * @param Amazon_S3_PutObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PutObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this PutObject choreography.
     *
     * @param string $value (conditional, string) The base64 encoded file contents that you want to upload to an AmazonS3 bucket. Required unless using the VaultFile input alias (an advanced option when using the Temboo Designer to execute Choreos).
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutObject choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutObject choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutObject choreography.
     *
     * @param string $value (required, string) The name of the bucket that will be the file destination.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this PutObject choreography.
     *
     * @param string $value (required, string) The name of the file to put in S3 Storage.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

}


/**
 * Execution object for the PutObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutObject choreography.
     *
     * @param Temboo_Session $session The session that owns this PutObject execution.
     * @param Amazon_S3_PutObject $choreo The choregraphy object for this execution.
     * @param Amazon_S3_PutObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutObject execution.
     *
     * @return Amazon_S3_PutObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PutObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutObject_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PutObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PutObject choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PutObject execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for successful uploads.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file report that contains only orders that are not confirmed as shipped.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file report that contains only orders that are not confirmed as shipped.
     *
     * @param Temboo_Session $session The session that owns this UnshippedOrdersReport choreography.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/UnshippedOrdersReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UnshippedOrdersReport choreography.
     *
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UnshippedOrdersReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UnshippedOrdersReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UnshippedOrdersReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UnshippedOrdersReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UnshippedOrdersReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UnshippedOrdersReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UnshippedOrdersReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UnshippedOrdersReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this UnshippedOrdersReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this UnshippedOrdersReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the UnshippedOrdersReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UnshippedOrdersReport choreography.
     *
     * @param Temboo_Session $session The session that owns this UnshippedOrdersReport execution.
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_UnshippedOrdersReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UnshippedOrdersReport execution.
     *
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UnshippedOrdersReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UnshippedOrdersReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UnshippedOrdersReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this UnshippedOrdersReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this UnshippedOrdersReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this UnshippedOrdersReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this UnshippedOrdersReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Deletes a specified subscription.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe extends Temboo_Choreography
{
    /**
     * Deletes a specified subscription.
     *
     * @param Temboo_Session $session The session that owns this Unsubscribe choreography.
     * @return Amazon_SNS_Unsubscribe New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Unsubscribe/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Unsubscribe choreography.
     *
     * @param Amazon_SNS_Unsubscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Unsubscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Unsubscribe_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Unsubscribe_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Unsubscribe choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Unsubscribe_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Unsubscribe_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Unsubscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Unsubscribe choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Unsubscribe_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Unsubscribe input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Unsubscribe choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Unsubscribe choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the SubscriptionArn input for this Unsubscribe choreography.
     *
     * @param string $value (required, string) The ARN of the subscription you want to delete.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setSubscriptionArn($value)
    {
        return $this->set('SubscriptionArn', $value);
    }
}


/**
 * Execution object for the Unsubscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Unsubscribe choreography.
     *
     * @param Temboo_Session $session The session that owns this Unsubscribe execution.
     * @param Amazon_SNS_Unsubscribe $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_Unsubscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Unsubscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Unsubscribe_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Unsubscribe $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Unsubscribe execution.
     *
     * @return Amazon_SNS_Unsubscribe_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Unsubscribe execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Unsubscribe_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Unsubscribe_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Unsubscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Unsubscribe choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Unsubscribe_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Unsubscribe execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the lowest price offer listings for a specific product by item condition. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN extends Temboo_Choreography
{
    /**
     * Returns the lowest price offer listings for a specific product by item condition. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForASIN choreography.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetLowestOfferListingsForASIN/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetLowestOfferListingsForASIN choreography.
     *
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLowestOfferListingsForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLowestOfferListingsForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetLowestOfferListingsForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLowestOfferListingsForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) An ASIN value used to identify a product in the given marketplace.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ItemCondition input for this GetLowestOfferListingsForASIN choreography.
     *
     * @param string $value (required, string) Filters the offer listings to be considered based on item condition. Valid values: New, Used, Collectible, Refurbished, Club.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setItemCondition($value)
    {
        return $this->set('ItemCondition', $value);
    }
}


/**
 * Execution object for the GetLowestOfferListingsForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLowestOfferListingsForASIN choreography.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForASIN execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetLowestOfferListingsForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLowestOfferListingsForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetLowestOfferListingsForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetLowestOfferListingsForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetLowestOfferListingsForASIN choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetLowestOfferListingsForASIN execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns orders created during a time frame that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders extends Temboo_Choreography
{
    /**
     * Returns orders created during a time frame that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrders choreography.
     * @return Amazon_Marketplace_Orders_ListOrders New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrders/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListOrders choreography.
     *
     * @param Amazon_Marketplace_Orders_ListOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrders_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrders_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrders choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrders_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListOrders choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrders input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrders choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrders choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrders choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrders choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrders choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrders choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrders choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FullfillmentChannel input for this ListOrders choreography.
     *
     * @param string $value (optional, string) A string indicating how an order was fulfilled. Use "AFN" for Amazon fulfilled orders, and "MFN" for seller fulfilled orders.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setFullfillmentChannel($value)
    {
        return $this->set('FullfillmentChannel', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrders choreography.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }

    /**
     * Set the value for the OrderStatus input for this ListOrders choreography.
     *
     * @param string $value (optional, string) An OrderStatus value to select only orders with a certain status. Valid values are: Pending, Unshipped, PartiallyShipped, Shipped, Canceled, Unfulfillable.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setOrderStatus($value)
    {
        return $this->set('OrderStatus', $value);
    }

    /**
     * Set the value for the PaymentMethod input for this ListOrders choreography.
     *
     * @param string $value (optional, string) Used to select only orders of a certain payment type. Valid values are: COD (cash on delivery), CSV (convenience store payment), or Other (Any payment method other than COD or CVS).
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setPaymentMethod($value)
    {
        return $this->set('PaymentMethod', $value);
    }
}


/**
 * Execution object for the ListOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrders choreography.
     *
     * @param Temboo_Session $session The session that owns this ListOrders execution.
     * @param Amazon_Marketplace_Orders_ListOrders $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrders_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrders $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrders execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrders_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListOrders execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrders_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListOrders choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListOrders execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows restricted access to your database instance by adding EC2 Security Groups to the DBSecurityGroup or by specifying an allowed IP range.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Allows restricted access to your database instance by adding EC2 Security Groups to the DBSecurityGroup or by specifying an allowed IP range.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeDBSecurityGroupIngress choreography.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/AuthorizeDBSecurityGroupIngress/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AuthorizeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AuthorizeDBSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CIDRIP input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) IP range that should have access. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCIDRIP($value)
    {
        return $this->set('CIDRIP', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) A unique name for the security group you want to authorize.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupName input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) The EC2 security group to authorize. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupName($value)
    {
        return $this->set('EC2SecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupOwnerId input for this AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) The AWS account number for the security group owner. This and EC2SecurityGroupName are required if CIDRIP is not used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupOwnerId($value)
    {
        return $this->set('EC2SecurityGroupOwnerId', $value);
    }
}


/**
 * Execution object for the AuthorizeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeDBSecurityGroupIngress execution.
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_AuthorizeDBSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AuthorizeDBSecurityGroupIngress execution.
     *
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AuthorizeDBSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AuthorizeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AuthorizeDBSecurityGroupIngress choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AuthorizeDBSecurityGroupIngress execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the availability of a seller's inventory using a given SellerSKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU extends Temboo_Choreography
{
    /**
     * Returns information about the availability of a seller's inventory using a given SellerSKU.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyBySKU choreography.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Inventory/ListInventorySupplyBySKU/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListInventorySupplyBySKU choreography.
     *
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventorySupplyBySKU choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventorySupplyBySKU choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListInventorySupplyBySKU choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventorySupplyBySKU input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseGroup input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setResponseGroup($value)
    {
        return $this->set('ResponseGroup', $value);
    }

    /**
     * Set the value for the SellerSKU input for this ListInventorySupplyBySKU choreography.
     *
     * @param string $value (required, string) A seller SKU for an item that you want inventory availability information about.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setSellerSKU($value)
    {
        return $this->set('SellerSKU', $value);
    }
}


/**
 * Execution object for the ListInventorySupplyBySKU choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventorySupplyBySKU choreography.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyBySKU execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Inventory_ListInventorySupplyBySKU $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventorySupplyBySKU execution.
     *
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListInventorySupplyBySKU execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListInventorySupplyBySKU choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListInventorySupplyBySKU choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListInventorySupplyBySKU execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about DB Snapshots.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot extends Temboo_Choreography
{
    /**
     * Returns information about DB Snapshots.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSnapshot choreography.
     * @return Amazon_RDS_DescribeDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeDBSnapshot choreography.
     *
     * @param Amazon_RDS_DescribeDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DescribeDBSnapshot choreography.
     *
     * @param string $value (optional, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this DescribeDBSnapshot choreography.
     *
     * @param string $value (optional, string) The unique identifier for the db snapshot you're retrieving information for.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBSnapshot choreography.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSnapshot execution.
     * @param Amazon_RDS_DescribeDBSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DescribeDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBSnapshot execution.
     *
     * @return Amazon_RDS_DescribeDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeDBSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the feed processing report and the Content-MD5 header.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult extends Temboo_Choreography
{
    /**
     * Returns the feed processing report and the Content-MD5 header.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionResult choreography.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionResult/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetFeedSubmissionResult choreography.
     *
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetFeedSubmissionResult choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetFeedSubmissionResult choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetFeedSubmissionResult choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetFeedSubmissionResult input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedSubmissionId input for this GetFeedSubmissionResult choreography.
     *
     * @param string $value (required, string) A FeedSubmmissionId value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setFeedSubmissionId($value)
    {
        return $this->set('FeedSubmissionId', $value);
    }
}


/**
 * Execution object for the GetFeedSubmissionResult choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetFeedSubmissionResult choreography.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionResult execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_GetFeedSubmissionResult $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetFeedSubmissionResult execution.
     *
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetFeedSubmissionResult execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetFeedSubmissionResult choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetFeedSubmissionResult choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetFeedSubmissionResult execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ContentMD5Header" output from this GetFeedSubmissionResult execution.
     *
     * @return string (string) The Content MD5 header returned from Amazon. This can used to check against an MD5 hash that you generate before submitting the feed to verify that the feed was submitted correctly.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContentMD5Header()
    {
        return $this->get('ContentMD5Header');
    }
}

/**
 * Updates the acknowledged status of a report.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements extends Temboo_Choreography
{
    /**
     * Updates the acknowledged status of a report.
     *
     * @param Temboo_Session $session The session that owns this UpdateReportAcknowledgements choreography.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/UpdateReportAcknowledgements/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdateReportAcknowledgements choreography.
     *
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateReportAcknowledgements choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateReportAcknowledgements choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdateReportAcknowledgements choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateReportAcknowledgements input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateReportAcknowledgements choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UpdateReportAcknowledgements choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UpdateReportAcknowledgements choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateReportAcknowledgements choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this UpdateReportAcknowledgements choreography.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to true to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the Endpoint input for this UpdateReportAcknowledgements choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportId input for this UpdateReportAcknowledgements choreography.
     *
     * @param int $value (required, integer) The id of the report to acknowledge.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setReportId($value)
    {
        return $this->set('ReportId', $value);
    }
}


/**
 * Execution object for the UpdateReportAcknowledgements choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateReportAcknowledgements choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdateReportAcknowledgements execution.
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_UpdateReportAcknowledgements $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateReportAcknowledgements execution.
     *
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdateReportAcknowledgements execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdateReportAcknowledgements choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdateReportAcknowledgements choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdateReportAcknowledgements execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about Amazon Machine Image(s) that are available to you.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages extends Temboo_Choreography
{
    /**
     * Returns information about Amazon Machine Image(s) that are available to you.
     *
     * @param Temboo_Session $session The session that owns this DescribeImages choreography.
     * @return Amazon_EC2_DescribeImages New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeImages/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeImages choreography.
     *
     * @param Amazon_EC2_DescribeImages_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImages_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImages_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeImages_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeImages choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImages_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeImages_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeImages choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeImages choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImages_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeImages input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeImages choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeImages choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ImageId input for this DescribeImages choreography.
     *
     * @param string $value (optional, string) The ID of the AMI that you want to return. Returns all AMIs when this parameter is not specified.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }
}


/**
 * Execution object for the DescribeImages choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeImages choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeImages execution.
     * @param Amazon_EC2_DescribeImages $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeImages_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImages_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImages_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeImages $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeImages execution.
     *
     * @return Amazon_EC2_DescribeImages_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeImages execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeImages_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeImages_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeImages choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeImages choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeImages_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeImages execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified topic and all its subscriptions.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic extends Temboo_Choreography
{
    /**
     * Deletes a specified topic and all its subscriptions.
     *
     * @param Temboo_Session $session The session that owns this DeleteTopic choreography.
     * @return Amazon_SNS_DeleteTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/DeleteTopic/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteTopic choreography.
     *
     * @param Amazon_SNS_DeleteTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_DeleteTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_DeleteTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_DeleteTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_DeleteTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_DeleteTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_DeleteTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteTopic choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteTopic choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the TopicArn input for this DeleteTopic choreography.
     *
     * @param string $value (required, string) The ARN of the topic you want to delete.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the DeleteTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteTopic choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteTopic execution.
     * @param Amazon_SNS_DeleteTopic $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_DeleteTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_DeleteTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_DeleteTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_DeleteTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteTopic execution.
     *
     * @return Amazon_SNS_DeleteTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_DeleteTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_DeleteTopic_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteTopic choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_DeleteTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Modifies an attribute of an AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute extends Temboo_Choreography
{
    /**
     * Modifies an attribute of an AMI.
     *
     * @param Temboo_Session $session The session that owns this ModifyImageAttribute choreography.
     * @return Amazon_EC2_ModifyImageAttribute New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/ModifyImageAttribute/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ModifyImageAttribute choreography.
     *
     * @param Amazon_EC2_ModifyImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ModifyImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ModifyImageAttribute_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_ModifyImageAttribute_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ModifyImageAttribute choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_ModifyImageAttribute_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ModifyImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ModifyImageAttribute choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ModifyImageAttribute input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ModifyImageAttribute choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ModifyImageAttribute choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AddGroup input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Adds the specified group to the image's list of launch permissions. The only valid value is "all".
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAddGroup($value)
    {
        return $this->set('AddGroup', $value);
    }

    /**
     * Set the value for the AddUserId input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Adds the specified AWS account ID to the AMI's list of launch permissions.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAddUserId($value)
    {
        return $this->set('AddUserId', $value);
    }

    /**
     * Set the value for the Description input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Changes the AMI's description to the specified value.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the ImageId input for this ModifyImageAttribute choreography.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the ProductCode input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Adds the specified product code to the specified Amazon S3-backed AMI. Once you add a product code to an AMI, it can't be removed.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setProductCode($value)
    {
        return $this->set('ProductCode', $value);
    }

    /**
     * Set the value for the RemoveGroup input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Removes the specified group from the image's list of launch permissions. The only valid value is "all".
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setRemoveGroup($value)
    {
        return $this->set('RemoveGroup', $value);
    }

    /**
     * Set the value for the RemoveUserId input for this ModifyImageAttribute choreography.
     *
     * @param string $value (optional, string) Removes the specified AWS account ID from the AMI's list of launch permissions.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setRemoveUserId($value)
    {
        return $this->set('RemoveUserId', $value);
    }
}


/**
 * Execution object for the ModifyImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ModifyImageAttribute choreography.
     *
     * @param Temboo_Session $session The session that owns this ModifyImageAttribute execution.
     * @param Amazon_EC2_ModifyImageAttribute $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_ModifyImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ModifyImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ModifyImageAttribute_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_ModifyImageAttribute $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ModifyImageAttribute execution.
     *
     * @return Amazon_EC2_ModifyImageAttribute_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ModifyImageAttribute execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_ModifyImageAttribute_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ModifyImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ModifyImageAttribute choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ModifyImageAttribute execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Cancels one or more report requests.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest extends Temboo_Choreography
{
    /**
     * Cancels one or more report requests.
     *
     * @param Temboo_Session $session The session that owns this CancelReportRequest choreography.
     * @return Amazon_Marketplace_Reports_CancelReportRequest New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/CancelReportRequest/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CancelReportRequest choreography.
     *
     * @param Amazon_Marketplace_Reports_CancelReportRequest_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_CancelReportRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelReportRequest choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelReportRequest choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CancelReportRequest choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelReportRequest input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CancelReportRequest choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this CancelReportRequest choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this CancelReportRequest choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CancelReportRequest choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportProcessingStatus input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, string) A report processing status by which to filter report requests. Valid values are: _SUBMITTED_, _IN_PROGRESS_, _CANCELLED_, _DONE_, _DONE_NO_DATA_.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportProcessingStatus($value)
    {
        return $this->set('ReportProcessingStatus', $value);
    }

    /**
     * Set the value for the ReportRequestId input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, string) A ReportRequestId value. If you pass in a ReportRequestId value, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportRequestId($value)
    {
        return $this->set('ReportRequestId', $value);
    }

    /**
     * Set the value for the ReportType input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the RequestedFromDate input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setRequestedFromDate($value)
    {
        return $this->set('RequestedFromDate', $value);
    }

    /**
     * Set the value for the RequestedToDate input for this CancelReportRequest choreography.
     *
     * @param string $value (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setRequestedToDate($value)
    {
        return $this->set('RequestedToDate', $value);
    }
}


/**
 * Execution object for the CancelReportRequest choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelReportRequest choreography.
     *
     * @param Temboo_Session $session The session that owns this CancelReportRequest execution.
     * @param Amazon_Marketplace_Reports_CancelReportRequest $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_CancelReportRequest_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_CancelReportRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_CancelReportRequest $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelReportRequest execution.
     *
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CancelReportRequest execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CancelReportRequest choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CancelReportRequest choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CancelReportRequest execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "Count" output from this CancelReportRequest execution.
     *
     * @return int (integer) A non-negative integer that represents the total number of report requests that were cancelled.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCount()
    {
        return $this->get('Count');
    }
}

/**
 * Creates a statement for a topic's access control policy which allows an AWS account to have access to the specified Amazon SNS actions.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission extends Temboo_Choreography
{
    /**
     * Creates a statement for a topic's access control policy which allows an AWS account to have access to the specified Amazon SNS actions.
     *
     * @param Temboo_Session $session The session that owns this AddPermission choreography.
     * @return Amazon_SNS_AddPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/AddPermission/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddPermission choreography.
     *
     * @param Amazon_SNS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_AddPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_AddPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_AddPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_AddPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_AddPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddPermission choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this AddPermission choreography.
     *
     * @param int $value (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddPermission choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ActionName input for this AddPermission choreography.
     *
     * @param string $value (required, string) The action you want to allow for a specified user (i.e. DeleteTopic, Publish, GetTopicAttributes, etc).
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setActionName($value)
    {
        return $this->set('ActionName', $value);
    }

    /**
     * Set the value for the Label input for this AddPermission choreography.
     *
     * @param string $value (required, string) The unique identifier for the new policy statement.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the TopicArn input for this AddPermission choreography.
     *
     * @param string $value (required, string) The ARN of the topic whos access control policy you want to adjust.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddPermission choreography.
     *
     * @param Temboo_Session $session The session that owns this AddPermission execution.
     * @param Amazon_SNS_AddPermission $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_AddPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_AddPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddPermission execution.
     *
     * @return Amazon_SNS_AddPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_AddPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_AddPermission_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddPermission choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_AddPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddPermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes multiple objects from an S3 Bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects extends Temboo_Choreography
{
    /**
     * Deletes multiple objects from an S3 Bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteMultipleObjects choreography.
     * @return Amazon_S3_DeleteMultipleObjects New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteMultipleObjects/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteMultipleObjects choreography.
     *
     * @param Amazon_S3_DeleteMultipleObjects_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteMultipleObjects_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteMultipleObjects_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteMultipleObjects_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteMultipleObjects choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteMultipleObjects_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteMultipleObjects choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteMultipleObjects choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteMultipleObjects input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteMultipleObjects choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteMultipleObjects choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteMultipleObjects choreography.
     *
     * @param string $value (required, string) The the name of the bucket that contains the objects that you want to delete.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileNames input for this DeleteMultipleObjects choreography.
     *
     * @param string $value (required, string) A list of file names to delete (separated by commas).
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setFileNames($value)
    {
        return $this->set('FileNames', $value);
    }
}


/**
 * Execution object for the DeleteMultipleObjects choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteMultipleObjects choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteMultipleObjects execution.
     * @param Amazon_S3_DeleteMultipleObjects $choreo The choregraphy object for this execution.
     * @param Amazon_S3_DeleteMultipleObjects_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteMultipleObjects_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteMultipleObjects_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteMultipleObjects $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteMultipleObjects execution.
     *
     * @return Amazon_S3_DeleteMultipleObjects_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteMultipleObjects execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteMultipleObjects_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteMultipleObjects choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteMultipleObjects choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteMultipleObjects execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for a successful delete operation.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Disable monitoring for a specified instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances extends Temboo_Choreography
{
    /**
     * Disable monitoring for a specified instance.
     *
     * @param Temboo_Session $session The session that owns this UnmonitorInstances choreography.
     * @return Amazon_EC2_UnmonitorInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/UnmonitorInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UnmonitorInstances choreography.
     *
     * @param Amazon_EC2_UnmonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_UnmonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_UnmonitorInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_UnmonitorInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UnmonitorInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_UnmonitorInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_UnmonitorInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UnmonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UnmonitorInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_UnmonitorInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UnmonitorInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UnmonitorInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UnmonitorInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this UnmonitorInstances choreography.
     *
     * @param string $value (required, string) The id for the instance you want to stop monitoring.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the UnmonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UnmonitorInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this UnmonitorInstances execution.
     * @param Amazon_EC2_UnmonitorInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_UnmonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_UnmonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_UnmonitorInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_UnmonitorInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UnmonitorInstances execution.
     *
     * @return Amazon_EC2_UnmonitorInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UnmonitorInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_UnmonitorInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_UnmonitorInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UnmonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UnmonitorInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_UnmonitorInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UnmonitorInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying values for the Choreo inputs.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance extends Temboo_Choreography
{
    /**
     * Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying values for the Choreo inputs.
     *
     * @param Temboo_Session $session The session that owns this ModifyDBInstance choreography.
     * @return Amazon_RDS_ModifyDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/ModifyDBInstance/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ModifyDBInstance choreography.
     *
     * @param Amazon_RDS_ModifyDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_ModifyDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_ModifyDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_ModifyDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ModifyDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_ModifyDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_ModifyDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ModifyDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ModifyDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_ModifyDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ModifyDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ModifyDBInstance choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ModifyDBInstance choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocatedStorage input for this ModifyDBInstance choreography.
     *
     * @param int $value (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL or 10 to 1024 for Oracle. Value supplied must be at least 10% greater than the current value
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAllocatedStorage($value)
    {
        return $this->set('AllocatedStorage', $value);
    }

    /**
     * Set the value for the AllowMajorVersionUpgrade input for this ModifyDBInstance choreography.
     *
     * @param bool $value (optional, boolean) Indicates that major version upgrades are allowed. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAllowMajorVersionUpgrade($value)
    {
        return $this->set('AllowMajorVersionUpgrade', $value);
    }

    /**
     * Set the value for the ApplyImmediately input for this ModifyDBInstance choreography.
     *
     * @param bool $value (optional, boolean) Specifies whether or not the modifications applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB Instance. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setApplyImmediately($value)
    {
        return $this->set('ApplyImmediately', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this ModifyDBInstance choreography.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the BackupRetentionPeriod input for this ModifyDBInstance choreography.
     *
     * @param int $value (optional, integer) Number of days to retain automated backups. Setting to a positive number enables backups. Setting to 0 disables automated backups. Must be a value from 0 to 8. Defaults to 0 (disabled).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setBackupRetentionPeriod($value)
    {
        return $this->set('BackupRetentionPeriod', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this ModifyDBInstance choreography.
     *
     * @param string $value (required, string) Capacity for the DB instance.  (db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this ModifyDBInstance choreography.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBParameterGroupName input for this ModifyDBInstance choreography.
     *
     * @param string $value (optional, string) The name of the DB Parameter Group to apply to this DB Instance.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBParameterGroupName($value)
    {
        return $this->set('DBParameterGroupName', $value);
    }

    /**
     * Set the value for the DBSecurityGroup input for this ModifyDBInstance choreography.
     *
     * @param string $value (optional, string) A DB Security Groups to authorize on this DB Instance.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBSecurityGroup($value)
    {
        return $this->set('DBSecurityGroup', $value);
    }

    /**
     * Set the value for the EngineVersion input for this ModifyDBInstance choreography.
     *
     * @param string $value (optional, string) The version number of the database engine to upgrade to.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setEngineVersion($value)
    {
        return $this->set('EngineVersion', $value);
    }

    /**
     * Set the value for the MasterUserPassword input for this ModifyDBInstance choreography.
     *
     * @param string $value (required, string) The new password for the DB Instance master user.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setMasterUserPassword($value)
    {
        return $this->set('MasterUserPassword', $value);
    }

    /**
     * Set the value for the MultiAZ input for this ModifyDBInstance choreography.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the PreferredBackupWindow input for this ModifyDBInstance choreography.
     *
     * @param string $value (optional, string) The daily time range during which automated backups are created. Format: hh24:mi-hh24:mi (in UTC). Must be at least 30 minutes. Can not conflict with PreferredMaintenanceWindow setting.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setPreferredBackupWindow($value)
    {
        return $this->set('PreferredBackupWindow', $value);
    }

    /**
     * Set the value for the PreferredMaintenanceWindow input for this ModifyDBInstance choreography.
     *
     * @param string $value (optional, string) The weekly time range (in UTC) during which system maintenance can occur, which may result in an outage. Format: ddd:hh24:mi-ddd:hh24:mi. Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setPreferredMaintenanceWindow($value)
    {
        return $this->set('PreferredMaintenanceWindow', $value);
    }
}


/**
 * Execution object for the ModifyDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ModifyDBInstance choreography.
     *
     * @param Temboo_Session $session The session that owns this ModifyDBInstance execution.
     * @param Amazon_RDS_ModifyDBInstance $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_ModifyDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_ModifyDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_ModifyDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_ModifyDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ModifyDBInstance execution.
     *
     * @return Amazon_RDS_ModifyDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ModifyDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_ModifyDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_ModifyDBInstance_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ModifyDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ModifyDBInstance choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_ModifyDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ModifyDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance extends Temboo_Choreography
{
    /**
     * Creates a new database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBInstance choreography.
     * @return Amazon_RDS_CreateDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBInstance/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateDBInstance choreography.
     *
     * @param Amazon_RDS_CreateDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocatedStorage input for this CreateDBInstance choreography.
     *
     * @param int $value (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL or 10 to 1024 for Oracle.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAllocatedStorage($value)
    {
        return $this->set('AllocatedStorage', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) Capacity for the DB instance.  (db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBName input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) For MySQL, this is the name of the db that is created on the instance. For Oracle, it refers to the SID.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the Engine input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The name of the database engine to use for the instance. Options are: MySQL, oracle-se1, oracle-se, and oracle-ee.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the MasterUserPassword input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The master password for the DB instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setMasterUserPassword($value)
    {
        return $this->set('MasterUserPassword', $value);
    }

    /**
     * Set the value for the MasterUsername input for this CreateDBInstance choreography.
     *
     * @param string $value (required, string) The master username for the DB instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setMasterUsername($value)
    {
        return $this->set('MasterUsername', $value);
    }
}


/**
 * Execution object for the CreateDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBInstance choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateDBInstance execution.
     * @param Amazon_RDS_CreateDBInstance $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_CreateDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBInstance execution.
     *
     * @return Amazon_RDS_CreateDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBInstance_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateDBInstance choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new EC2 security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup extends Temboo_Choreography
{
    /**
     * Creates a new EC2 security group.
     *
     * @param Temboo_Session $session The session that owns this CreateSecurityGroup choreography.
     * @return Amazon_EC2_CreateSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateSecurityGroup/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateSecurityGroup choreography.
     *
     * @param Amazon_EC2_CreateSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateSecurityGroup choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateSecurityGroup choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupDescription input for this CreateSecurityGroup choreography.
     *
     * @param string $value (required, string) A description for the security group that that you want to create.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setGroupDescription($value)
    {
        return $this->set('GroupDescription', $value);
    }

    /**
     * Set the value for the GroupName input for this CreateSecurityGroup choreography.
     *
     * @param string $value (required, string) A name for the security group to create.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }
}


/**
 * Execution object for the CreateSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSecurityGroup choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateSecurityGroup execution.
     * @param Amazon_EC2_CreateSecurityGroup $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_CreateSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSecurityGroup execution.
     *
     * @return Amazon_EC2_CreateSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateSecurityGroup choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the policy of a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy extends Temboo_Choreography
{
    /**
     * Returns the policy of a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketPolicy choreography.
     * @return Amazon_S3_GetBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketPolicy/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBucketPolicy choreography.
     *
     * @param Amazon_S3_GetBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketPolicy choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketPolicy choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketPolicy choreography.
     *
     * @param string $value (required, string) The name of the bucket associated with the policy you want to retrieve.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the GetBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketPolicy choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBucketPolicy execution.
     * @param Amazon_S3_GetBucketPolicy $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketPolicy execution.
     *
     * @return Amazon_S3_GetBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBucketPolicy choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBucketPolicy execution.
     *
     * @return string (json) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates only the price and quantity of a particular product with a given product SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity extends Temboo_Choreography
{
    /**
     * Updates only the price and quantity of a particular product with a given product SKU.
     *
     * @param Temboo_Session $session The session that owns this UpdatePriceAndQuantity choreography.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/UpdatePriceAndQuantity/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this UpdatePriceAndQuantity choreography.
     *
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdatePriceAndQuantity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdatePriceAndQuantity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the UpdatePriceAndQuantity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdatePriceAndQuantity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Price input for this UpdatePriceAndQuantity choreography.
     *
     * @param float $value (required, decimal) Enter the unit price for this product. The price must be greater than 0.00. Do NOT include the currency symbol (e.g. $).
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setPrice($value)
    {
        return $this->set('Price', $value);
    }

    /**
     * Set the value for the Quantity input for this UpdatePriceAndQuantity choreography.
     *
     * @param int $value (required, integer) Enter the quantity of the product you have for sale. The quantity must be a whole number, and should be greater than zero.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setQuantity($value)
    {
        return $this->set('Quantity', $value);
    }

    /**
     * Set the value for the SKU input for this UpdatePriceAndQuantity choreography.
     *
     * @param string $value (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU that you want to modify.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this UpdatePriceAndQuantity choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the UpdatePriceAndQuantity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdatePriceAndQuantity choreography.
     *
     * @param Temboo_Session $session The session that owns this UpdatePriceAndQuantity execution.
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_UpdatePriceAndQuantity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdatePriceAndQuantity execution.
     *
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this UpdatePriceAndQuantity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the UpdatePriceAndQuantity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the UpdatePriceAndQuantity choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this UpdatePriceAndQuantity execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Registers a new AMI with Amazon EC2.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage extends Temboo_Choreography
{
    /**
     * Registers a new AMI with Amazon EC2.
     *
     * @param Temboo_Session $session The session that owns this RegisterImage choreography.
     * @return Amazon_EC2_RegisterImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RegisterImage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RegisterImage choreography.
     *
     * @param Amazon_EC2_RegisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RegisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RegisterImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RegisterImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RegisterImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RegisterImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RegisterImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RegisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RegisterImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RegisterImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RegisterImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RegisterImage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RegisterImage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Architecture input for this RegisterImage choreography.
     *
     * @param string $value (optional, string) The architecture of the image. Valid values are: i386 or x86_64. Defaults to i386.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setArchitecture($value)
    {
        return $this->set('Architecture', $value);
    }

    /**
     * Set the value for the DeleteOnTermination input for this RegisterImage choreography.
     *
     * @param bool $value (optional, boolean) Whether the Amazon EBS volume is deleted on instance termination. Defaults to 1 (true).
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDeleteOnTermination($value)
    {
        return $this->set('DeleteOnTermination', $value);
    }

    /**
     * Set the value for the Description input for this RegisterImage choreography.
     *
     * @param string $value (optional, string) The description of the AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the DeviceName input for this RegisterImage choreography.
     *
     * @param string $value (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, specify this input with the root device name (e.g., /dev/sda1, or xvda), and SnapshotId.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDeviceName($value)
    {
        return $this->set('DeviceName', $value);
    }

    /**
     * Set the value for the ImageLocation input for this RegisterImage choreography.
     *
     * @param string $value (conditional, string) Full path to your AMI manifest in Amazon S3 storage. Required if registering an Amazon-S3 backed AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setImageLocation($value)
    {
        return $this->set('ImageLocation', $value);
    }

    /**
     * Set the value for the KernelId input for this RegisterImage choreography.
     *
     * @param string $value (optional, string) The ID of the kernel to select.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setKernelId($value)
    {
        return $this->set('KernelId', $value);
    }

    /**
     * Set the value for the Name input for this RegisterImage choreography.
     *
     * @param string $value (required, string) A name for your AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the NoDevice input for this RegisterImage choreography.
     *
     * @param bool $value (optional, boolean) Specifies that no device should be mapped. Defaults to 1 (true).
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setNoDevice($value)
    {
        return $this->set('NoDevice', $value);
    }

    /**
     * Set the value for the RamdiskId input for this RegisterImage choreography.
     *
     * @param string $value (optional, string) The ID of the RAM disk to select.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setRamdiskId($value)
    {
        return $this->set('RamdiskId', $value);
    }

    /**
     * Set the value for the RootDeviceName input for this RegisterImage choreography.
     *
     * @param string $value (conditional, string) The root device name (e.g., /dev/sda1, or xvda). Required if registering an Amazon EBS-backed AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setRootDeviceName($value)
    {
        return $this->set('RootDeviceName', $value);
    }

    /**
     * Set the value for the SnapshotId input for this RegisterImage choreography.
     *
     * @param string $value (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, you must at least specify this input with the snapshot ID, and DeviceName with the root device name.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }

    /**
     * Set the value for the VirtualName input for this RegisterImage choreography.
     *
     * @param string $value (optional, string) The virtual device name.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setVirtualName($value)
    {
        return $this->set('VirtualName', $value);
    }

    /**
     * Set the value for the VolumeSize input for this RegisterImage choreography.
     *
     * @param int $value (conditional, integer) The size of the volume, in GiBs. Required if you are not creating a volume from a snapshot.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setVolumeSize($value)
    {
        return $this->set('VolumeSize', $value);
    }
}


/**
 * Execution object for the RegisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RegisterImage choreography.
     *
     * @param Temboo_Session $session The session that owns this RegisterImage execution.
     * @param Amazon_EC2_RegisterImage $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_RegisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RegisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RegisterImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RegisterImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RegisterImage execution.
     *
     * @return Amazon_EC2_RegisterImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RegisterImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RegisterImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RegisterImage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RegisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RegisterImage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RegisterImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RegisterImage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a specified item from an Amazon S3 bucket, and returns the file content as base64-encoded data.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject extends Temboo_Choreography
{
    /**
     * Retrieves a specified item from an Amazon S3 bucket, and returns the file content as base64-encoded data.
     *
     * @param Temboo_Session $session The session that owns this GetBase64EncodedObject choreography.
     * @return Amazon_S3_GetBase64EncodedObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBase64EncodedObject/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBase64EncodedObject choreography.
     *
     * @param Amazon_S3_GetBase64EncodedObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBase64EncodedObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBase64EncodedObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBase64EncodedObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBase64EncodedObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBase64EncodedObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBase64EncodedObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBase64EncodedObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBase64EncodedObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBase64EncodedObject choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBase64EncodedObject choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBase64EncodedObject choreography.
     *
     * @param string $value (required, string) The name of the bucket that contains the object to retrieve.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this GetBase64EncodedObject choreography.
     *
     * @param string $value (required, string) The name of the file to retrieve.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }
}


/**
 * Execution object for the GetBase64EncodedObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBase64EncodedObject choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBase64EncodedObject execution.
     * @param Amazon_S3_GetBase64EncodedObject $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetBase64EncodedObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBase64EncodedObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBase64EncodedObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBase64EncodedObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBase64EncodedObject execution.
     *
     * @return Amazon_S3_GetBase64EncodedObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBase64EncodedObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBase64EncodedObject_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBase64EncodedObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBase64EncodedObject choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) The base64-encoded contents of the file you are retrieving.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes any permission in the queue policy by specifying the permission label.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission extends Temboo_Choreography
{
    /**
     * Removes any permission in the queue policy by specifying the permission label.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission choreography.
     * @return Amazon_SQS_RemovePermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/RemovePermission/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RemovePermission choreography.
     *
     * @param Amazon_SQS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_RemovePermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_RemovePermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemovePermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_RemovePermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_RemovePermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RemovePermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_RemovePermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemovePermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this RemovePermission choreography.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Label input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The unique identifier for the permission that is being removed.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the QueueName input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The name of the queue that that has the policy you want to adjust.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemovePermission choreography.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission execution.
     * @param Amazon_SQS_RemovePermission $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_RemovePermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_RemovePermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemovePermission execution.
     *
     * @return Amazon_SQS_RemovePermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RemovePermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_RemovePermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_RemovePermission_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RemovePermission choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_RemovePermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RemovePermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified item from an Amazon S3 bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject extends Temboo_Choreography
{
    /**
     * Deletes a specified item from an Amazon S3 bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteObject choreography.
     * @return Amazon_S3_DeleteObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteObject/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteObject choreography.
     *
     * @param Amazon_S3_DeleteObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteObject choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteObject choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteObject choreography.
     *
     * @param string $value (required, string) The the name of the bucket that contains the object that you want to delete.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this DeleteObject choreography.
     *
     * @param string $value (required, string) The file name that you want to delete.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }
}


/**
 * Execution object for the DeleteObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteObject choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteObject execution.
     * @param Amazon_S3_DeleteObject $choreo The choregraphy object for this execution.
     * @param Amazon_S3_DeleteObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteObject execution.
     *
     * @return Amazon_S3_DeleteObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteObject_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteObject choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteObject execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for a successful delete operation.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes the statement from a topic's access control policy that was created with the AddPermission action.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission extends Temboo_Choreography
{
    /**
     * Removes the statement from a topic's access control policy that was created with the AddPermission action.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission choreography.
     * @return Amazon_SNS_RemovePermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/RemovePermission/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RemovePermission choreography.
     *
     * @param Amazon_SNS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_RemovePermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_RemovePermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemovePermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_RemovePermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_RemovePermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RemovePermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_RemovePermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemovePermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Label input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The unique identifier for the policy statement that you want to delete.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the TopicArn input for this RemovePermission choreography.
     *
     * @param string $value (required, string) The ARN of the topic that has an access control policy you want to adjust.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemovePermission choreography.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission execution.
     * @param Amazon_SNS_RemovePermission $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_RemovePermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_RemovePermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemovePermission execution.
     *
     * @return Amazon_SNS_RemovePermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RemovePermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_RemovePermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_RemovePermission_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RemovePermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RemovePermission choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_RemovePermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RemovePermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Restores a DB Instance to an specified point-in-time.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime extends Temboo_Choreography
{
    /**
     * Restores a DB Instance to an specified point-in-time.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceToPointInTime choreography.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RestoreDBInstanceToPointInTime/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RestoreDBInstanceToPointInTime choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RestoreDBInstanceToPointInTime choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RestoreDBInstanceToPointInTime input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBName input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the Engine input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the LicenseModel input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setLicenseModel($value)
    {
        return $this->set('LicenseModel', $value);
    }

    /**
     * Set the value for the MultiAZ input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the Port input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param int $value (optional, integer) The port number on which the database accepts connections.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setPort($value)
    {
        return $this->set('Port', $value);
    }

    /**
     * Set the value for the RestoreTime input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (optional, date) The date and time to restore from in UTC. Cannot be specified if UseLatestRestorableTime parameter is set to 1. (format: 2009-09-07T23:45:00Z).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setRestoreTime($value)
    {
        return $this->set('RestoreTime', $value);
    }

    /**
     * Set the value for the SourceDBInstanceIdentifier input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (required, string) The identifier of the source DB Instance from which to restore.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setSourceDBInstanceIdentifier($value)
    {
        return $this->set('SourceDBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the TargetDBInstanceIdentifier input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param string $value (required, string) The name of the new database instance to be created.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setTargetDBInstanceIdentifier($value)
    {
        return $this->set('TargetDBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the UseLatestRestorableTime input for this RestoreDBInstanceToPointInTime choreography.
     *
     * @param bool $value (optional, boolean) Specifies whether or not the DB Instance is restored from the latest backup time. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setUseLatestRestorableTime($value)
    {
        return $this->set('UseLatestRestorableTime', $value);
    }
}


/**
 * Execution object for the RestoreDBInstanceToPointInTime choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RestoreDBInstanceToPointInTime choreography.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceToPointInTime execution.
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RestoreDBInstanceToPointInTime $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RestoreDBInstanceToPointInTime execution.
     *
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RestoreDBInstanceToPointInTime execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RestoreDBInstanceToPointInTime choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RestoreDBInstanceToPointInTime choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RestoreDBInstanceToPointInTime execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Add or update an individual inventory listing.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem extends Temboo_Choreography
{
    /**
     * Add or update an individual inventory listing.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItem choreography.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItem/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateInventoryItem choreography.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateInventoryItem choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddOrUpdateInventoryItem choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateInventoryItem input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ExpeditedShipping input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (optional, string) The expedited shipping options that you offer for this item. Valid values: 3 = UK Only; N = None, no express delivery offered.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setExpeditedShipping($value)
    {
        return $this->set('ExpeditedShipping', $value);
    }

    /**
     * Set the value for the FulfillmentCenterId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (conditional, string) For those merchants using Amazon fulfillment services, this designates which fulfillment network will be used. Required when using Amazon fulfillment services. Valid values are: AMAZON_EU, DEFAULT.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setFulfillmentCenterId($value)
    {
        return $this->set('FulfillmentCenterId', $value);
    }

    /**
     * Set the value for the ItemCondition input for this AddOrUpdateInventoryItem choreography.
     *
     * @param int $value (conditional, integer) A numerical entry that indicates the condition of the item. Required for new listings. Valid values are: 1-11. See documentation for description of item condition numeric values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setItemCondition($value)
    {
        return $this->set('ItemCondition', $value);
    }

    /**
     * Set the value for the ItemNote input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (optional, string) A description or note for the item you're adding or updating.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setItemNote($value)
    {
        return $this->set('ItemNote', $value);
    }

    /**
     * Set the value for the Price input for this AddOrUpdateInventoryItem choreography.
     *
     * @param float $value (conditional, decimal) The price at which the merchant offers the product for sale. Required if ProductId is provided.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setPrice($value)
    {
        return $this->set('Price', $value);
    }

    /**
     * Set the value for the ProductIdType input for this AddOrUpdateInventoryItem choreography.
     *
     * @param int $value (conditional, integer) The type of standard, unique identifier entered in the product-id field. This is a required field if product-id is provided. Valid values are: 1 (ASIN), 2 (ISBN), 3 (UPC), 4  (EAN).
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setProductIdType($value)
    {
        return $this->set('ProductIdType', $value);
    }

    /**
     * Set the value for the ProductId input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (conditional, string) A standard, alphanumeric string that uniquely identifies the product. This could be a UPC, EAN or ISBN.  This is a required field if product-id-type is provided.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setProductId($value)
    {
        return $this->set('ProductId', $value);
    }

    /**
     * Set the value for the Quantity input for this AddOrUpdateInventoryItem choreography.
     *
     * @param int $value (conditional, integer) Enter the quantity of the item you are making available for sale. Required for merchant-fulfilled items. Leave blank for amazon-fullfilled items.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setQuantity($value)
    {
        return $this->set('Quantity', $value);
    }

    /**
     * Set the value for the SKU input for this AddOrUpdateInventoryItem choreography.
     *
     * @param string $value (required, string) A unique identifier for the product, assigned by the merchant. The SKU must be unique for each product listed.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateInventoryItem choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

    /**
     * Set the value for the WillShipInternationally input for this AddOrUpdateInventoryItem choreography.
     *
     * @param int $value (optional, integer) Specify your international shipping options. Valid values are: 3 = UK Only; 4 = UK and Europe; 5 = UK, Europe, and North America; 6 = Worldwide
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setWillShipInternationally($value)
    {
        return $this->set('WillShipInternationally', $value);
    }
}


/**
 * Execution object for the AddOrUpdateInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateInventoryItem choreography.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItem execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateInventoryItem execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddOrUpdateInventoryItem execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddOrUpdateInventoryItem choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddOrUpdateInventoryItem choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (string) The processing status of the product submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateInventoryItem execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Attaches an Amazon EBS volume to a running instance and exposes it as the specified device.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume extends Temboo_Choreography
{
    /**
     * Attaches an Amazon EBS volume to a running instance and exposes it as the specified device.
     *
     * @param Temboo_Session $session The session that owns this AttachVolume choreography.
     * @return Amazon_EC2_AttachVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/AttachVolume/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AttachVolume choreography.
     *
     * @param Amazon_EC2_AttachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AttachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AttachVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_AttachVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AttachVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AttachVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_AttachVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AttachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AttachVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AttachVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AttachVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AttachVolume choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AttachVolume choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Device input for this AttachVolume choreography.
     *
     * @param string $value (required, string) How the device is exposed to the instance (i.e. " /dev/sdh" or "xvdh").
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setDevice($value)
    {
        return $this->set('Device', $value);
    }

    /**
     * Set the value for the InstanceId input for this AttachVolume choreography.
     *
     * @param string $value (required, string) The ID of the instance to which the volume attaches. The volume and instance must be within the same Availability Zone and the instance must be running.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the VolumeId input for this AttachVolume choreography.
     *
     * @param string $value (required, string) The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone and the instance must be running.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the AttachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AttachVolume choreography.
     *
     * @param Temboo_Session $session The session that owns this AttachVolume execution.
     * @param Amazon_EC2_AttachVolume $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_AttachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AttachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AttachVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_AttachVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AttachVolume execution.
     *
     * @return Amazon_EC2_AttachVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AttachVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_AttachVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_AttachVolume_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AttachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AttachVolume choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_AttachVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AttachVolume execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Reboot an instance by specifying the instance id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances extends Temboo_Choreography
{
    /**
     * Reboot an instance by specifying the instance id.
     *
     * @param Temboo_Session $session The session that owns this RebootInstances choreography.
     * @return Amazon_EC2_RebootInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RebootInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RebootInstances choreography.
     *
     * @param Amazon_EC2_RebootInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RebootInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RebootInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RebootInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RebootInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RebootInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RebootInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RebootInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RebootInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RebootInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RebootInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RebootInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RebootInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this RebootInstances choreography.
     *
     * @param string $value (required, string) The id for the instance you want to reboot.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the RebootInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RebootInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this RebootInstances execution.
     * @param Amazon_EC2_RebootInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_RebootInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RebootInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RebootInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RebootInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RebootInstances execution.
     *
     * @return Amazon_EC2_RebootInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RebootInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RebootInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RebootInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RebootInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RebootInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RebootInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RebootInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a security group using the group name you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup extends Temboo_Choreography
{
    /**
     * Deletes a security group using the group name you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteSecurityGroup choreography.
     * @return Amazon_EC2_DeleteSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteSecurityGroup/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteSecurityGroup choreography.
     *
     * @param Amazon_EC2_DeleteSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteSecurityGroup choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteSecurityGroup choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteSecurityGroup choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this DeleteSecurityGroup choreography.
     *
     * @param string $value (required, string) The name of the security group to delete.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }
}


/**
 * Execution object for the DeleteSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSecurityGroup choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteSecurityGroup execution.
     * @param Amazon_EC2_DeleteSecurityGroup $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DeleteSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSecurityGroup execution.
     *
     * @return Amazon_EC2_DeleteSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteSecurityGroup choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteSecurityGroup choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the availability of a seller's inventory using a given date range.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange extends Temboo_Choreography
{
    /**
     * Returns information about the availability of a seller's inventory using a given date range.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyByDateRange choreography.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Inventory/ListInventorySupplyByDateRange/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListInventorySupplyByDateRange choreography.
     *
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventorySupplyByDateRange choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventorySupplyByDateRange choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListInventorySupplyByDateRange choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventorySupplyByDateRange input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the QueryStartDateTime input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (optional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setQueryStartDateTime($value)
    {
        return $this->set('QueryStartDateTime', $value);
    }

    /**
     * Set the value for the ResponseGroup input for this ListInventorySupplyByDateRange choreography.
     *
     * @param string $value (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setResponseGroup($value)
    {
        return $this->set('ResponseGroup', $value);
    }
}


/**
 * Execution object for the ListInventorySupplyByDateRange choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventorySupplyByDateRange choreography.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyByDateRange execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventorySupplyByDateRange execution.
     *
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListInventorySupplyByDateRange execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListInventorySupplyByDateRange choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListInventorySupplyByDateRange choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListInventorySupplyByDateRange execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a volume using a volume id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume extends Temboo_Choreography
{
    /**
     * Deletes a volume using a volume id that you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteVolume choreography.
     * @return Amazon_EC2_DeleteVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteVolume/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteVolume choreography.
     *
     * @param Amazon_EC2_DeleteVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteVolume choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteVolume choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the VolumeId input for this DeleteVolume choreography.
     *
     * @param string $value (required, string) The id of the volume to delete.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the DeleteVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteVolume choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteVolume execution.
     * @param Amazon_EC2_DeleteVolume $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DeleteVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteVolume execution.
     *
     * @return Amazon_EC2_DeleteVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteVolume_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteVolume choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteVolume execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new topic that notifications can be published to.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic extends Temboo_Choreography
{
    /**
     * Creates a new topic that notifications can be published to.
     *
     * @param Temboo_Session $session The session that owns this CreateTopic choreography.
     * @return Amazon_SNS_CreateTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/CreateTopic/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateTopic choreography.
     *
     * @param Amazon_SNS_CreateTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_CreateTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_CreateTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_CreateTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_CreateTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_CreateTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_CreateTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateTopic choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateTopic choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Name input for this CreateTopic choreography.
     *
     * @param string $value (required, string) The name of the topic you want to create.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }
}


/**
 * Execution object for the CreateTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateTopic choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateTopic execution.
     * @param Amazon_SNS_CreateTopic $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_CreateTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_CreateTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_CreateTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_CreateTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateTopic execution.
     *
     * @return Amazon_SNS_CreateTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_CreateTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_CreateTopic_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateTopic choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_CreateTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sends a message to a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage extends Temboo_Choreography
{
    /**
     * Sends a message to a specified queue.
     *
     * @param Temboo_Session $session The session that owns this SendMessage choreography.
     * @return Amazon_SQS_SendMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/SendMessage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SendMessage choreography.
     *
     * @param Amazon_SQS_SendMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SendMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SendMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_SendMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SendMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SendMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_SendMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SendMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SendMessage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SendMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SendMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SendMessage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this SendMessage choreography.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're sending a message to (remove all dashes in the account number).
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SendMessage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MessageBody input for this SendMessage choreography.
     *
     * @param string $value (required, string) The message to send. Maximum size is 64 KB.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setMessageBody($value)
    {
        return $this->set('MessageBody', $value);
    }

    /**
     * Set the value for the QueueName input for this SendMessage choreography.
     *
     * @param string $value (required, string) The name of the queue you want to send a message to.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the SendMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SendMessage choreography.
     *
     * @param Temboo_Session $session The session that owns this SendMessage execution.
     * @param Amazon_SQS_SendMessage $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_SendMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SendMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SendMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_SendMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SendMessage execution.
     *
     * @return Amazon_SQS_SendMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SendMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_SendMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_SendMessage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SendMessage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SendMessage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_SendMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SendMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Revokes access from a DBSecurityGroup for previously authorized IP ranges or EC2 Security Groups.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Revokes access from a DBSecurityGroup for previously authorized IP ranges or EC2 Security Groups.
     *
     * @param Temboo_Session $session The session that owns this RevokeDBSecurityGroupIngress choreography.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RevokeDBSecurityGroupIngress/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RevokeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RevokeDBSecurityGroupIngress choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RevokeDBSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CIDRIP input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) IP range that should be revoked. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCIDRIP($value)
    {
        return $this->set('CIDRIP', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (required, string) A unique name for the security group you want to revoke ingress from.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupName input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) The EC2 security group to revoke. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupName($value)
    {
        return $this->set('EC2SecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupOwnerId input for this RevokeDBSecurityGroupIngress choreography.
     *
     * @param string $value (conditional, string) The account number for the security group owner to revoke. This and EC2SecurityGroupName are required if CIDRIP is not used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupOwnerId($value)
    {
        return $this->set('EC2SecurityGroupOwnerId', $value);
    }
}


/**
 * Execution object for the RevokeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RevokeDBSecurityGroupIngress choreography.
     *
     * @param Temboo_Session $session The session that owns this RevokeDBSecurityGroupIngress execution.
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RevokeDBSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RevokeDBSecurityGroupIngress execution.
     *
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RevokeDBSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RevokeDBSecurityGroupIngress choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RevokeDBSecurityGroupIngress choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RevokeDBSecurityGroupIngress execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of report requests that you can use to get the ReportProcessingStatus and ReportId in order to retrieve a report.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList extends Temboo_Choreography
{
    /**
     * Returns a list of report requests that you can use to get the ReportProcessingStatus and ReportId in order to retrieve a report.
     *
     * @param Temboo_Session $session The session that owns this GetReportRequestList choreography.
     * @return Amazon_Marketplace_Reports_GetReportRequestList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportRequestList/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetReportRequestList choreography.
     *
     * @param Amazon_Marketplace_Reports_GetReportRequestList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportRequestList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportRequestList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportRequestList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetReportRequestList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportRequestList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportRequestList choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportRequestList choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportRequestList choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportRequestList choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetReportRequestList choreography.
     *
     * @param int $value (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the ReportProcessingStatusList input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportProcessingStatuses by which to filter report requests.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportProcessingStatusList($value)
    {
        return $this->set('ReportProcessingStatusList', $value);
    }

    /**
     * Set the value for the ReportRequestIdList input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportRequestId values. If you pass in a ReportRequestId values, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportRequestIdList($value)
    {
        return $this->set('ReportRequestIdList', $value);
    }

    /**
     * Set the value for the ReportTypeList input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportType enumeration values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportTypeList($value)
    {
        return $this->set('ReportTypeList', $value);
    }

    /**
     * Set the value for the RequestedFromDate input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setRequestedFromDate($value)
    {
        return $this->set('RequestedFromDate', $value);
    }

    /**
     * Set the value for the RequestedToDate input for this GetReportRequestList choreography.
     *
     * @param string $value (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setRequestedToDate($value)
    {
        return $this->set('RequestedToDate', $value);
    }
}


/**
 * Execution object for the GetReportRequestList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportRequestList choreography.
     *
     * @param Temboo_Session $session The session that owns this GetReportRequestList execution.
     * @param Amazon_Marketplace_Reports_GetReportRequestList $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportRequestList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportRequestList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportRequestList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportRequestList execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetReportRequestList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetReportRequestList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetReportRequestList choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetReportRequestList execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this GetReportRequestList execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this GetReportRequestList execution.
     *
     * @return string (string) The report status parsed from the Amazon response. If multiple records are returned, this output variable will contain the report status in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this GetReportRequestList execution.
     *
     * @return int (integer) The report request id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Deletes a specified database snapshot.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot extends Temboo_Choreography
{
    /**
     * Deletes a specified database snapshot.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSnapshot choreography.
     * @return Amazon_RDS_DeleteDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteDBSnapshot choreography.
     *
     * @param Amazon_RDS_DeleteDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this DeleteDBSnapshot choreography.
     *
     * @param string $value (required, string) A unique identifier for the snapshot you want to delete.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }
}


/**
 * Execution object for the DeleteDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSnapshot execution.
     * @param Amazon_RDS_DeleteDBSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DeleteDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBSnapshot execution.
     *
     * @return Amazon_RDS_DeleteDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteDBSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN extends Temboo_Choreography
{
    /**
     * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForASIN choreography.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetProductCategoriesForASIN/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetProductCategoriesForASIN choreography.
     *
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetProductCategoriesForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetProductCategoriesForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetProductCategoriesForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetProductCategoriesForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (required, string) An ASIN value used to identify a product in the given marketplace.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetProductCategoriesForASIN choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetProductCategoriesForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetProductCategoriesForASIN choreography.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForASIN execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetProductCategoriesForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetProductCategoriesForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetProductCategoriesForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetProductCategoriesForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetProductCategoriesForASIN choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetProductCategoriesForASIN execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns torrent files from an Amazon S3 bucket.t
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent extends Temboo_Choreography
{
    /**
     * Returns torrent files from an Amazon S3 bucket.t
     *
     * @param Temboo_Session $session The session that owns this GetObjectTorrent choreography.
     * @return Amazon_S3_GetObjectTorrent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetObjectTorrent/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetObjectTorrent choreography.
     *
     * @param Amazon_S3_GetObjectTorrent_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectTorrent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectTorrent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetObjectTorrent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetObjectTorrent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectTorrent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetObjectTorrent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetObjectTorrent choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetObjectTorrent choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectTorrent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetObjectTorrent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetObjectTorrent choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetObjectTorrent choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetObjectTorrent choreography.
     *
     * @param string $value (required, string) The name of the bucket that contains the object to retrieve.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this GetObjectTorrent choreography.
     *
     * @param string $value (required, string) The name of the torrent file to retrieve.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }
}


/**
 * Execution object for the GetObjectTorrent choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetObjectTorrent choreography.
     *
     * @param Temboo_Session $session The session that owns this GetObjectTorrent execution.
     * @param Amazon_S3_GetObjectTorrent $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetObjectTorrent_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectTorrent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectTorrent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetObjectTorrent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetObjectTorrent execution.
     *
     * @return Amazon_S3_GetObjectTorrent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetObjectTorrent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetObjectTorrent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetObjectTorrent_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetObjectTorrent choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetObjectTorrent choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetObjectTorrent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetObjectTorrent execution.
     *
     * @return string The retrieved file. A Bencoded dictionary as defined by the BitTorrent specification.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns properties for a specified topic.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes extends Temboo_Choreography
{
    /**
     * Returns properties for a specified topic.
     *
     * @param Temboo_Session $session The session that owns this GetTopicAttributes choreography.
     * @return Amazon_SNS_GetTopicAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/GetTopicAttributes/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetTopicAttributes choreography.
     *
     * @param Amazon_SNS_GetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_GetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_GetTopicAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_GetTopicAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTopicAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_GetTopicAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_GetTopicAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetTopicAttributes choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_GetTopicAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTopicAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTopicAttributes choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTopicAttributes choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the TopicArn input for this GetTopicAttributes choreography.
     *
     * @param string $value (required, string) The ARN of the topic you want to retrieve attributes for.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the GetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTopicAttributes choreography.
     *
     * @param Temboo_Session $session The session that owns this GetTopicAttributes execution.
     * @param Amazon_SNS_GetTopicAttributes $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_GetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_GetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_GetTopicAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_GetTopicAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTopicAttributes execution.
     *
     * @return Amazon_SNS_GetTopicAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetTopicAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_GetTopicAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_GetTopicAttributes_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetTopicAttributes choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetTopicAttributes choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_GetTopicAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetTopicAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of products and their attributes, based on a ASIN value that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct extends Temboo_Choreography
{
    /**
     * Returns a list of products and their attributes, based on a ASIN value that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetMatchingProduct choreography.
     * @return Amazon_Marketplace_Products_GetMatchingProduct New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetMatchingProduct/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetMatchingProduct choreography.
     *
     * @param Amazon_Marketplace_Products_GetMatchingProduct_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetMatchingProduct_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetMatchingProduct choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetMatchingProduct choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetMatchingProduct choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetMatchingProduct input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetMatchingProduct choreography.
     *
     * @param string $value (required, string) An ASIN value used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetMatchingProduct choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetMatchingProduct choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetMatchingProduct choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetMatchingProduct choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetMatchingProduct choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetMatchingProduct choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetMatchingProduct choreography.
     *
     * @param Temboo_Session $session The session that owns this GetMatchingProduct execution.
     * @param Amazon_Marketplace_Products_GetMatchingProduct $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_GetMatchingProduct_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetMatchingProduct_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetMatchingProduct $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetMatchingProduct execution.
     *
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetMatchingProduct execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetMatchingProduct choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetMatchingProduct choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetMatchingProduct execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Verifies that the endpoint owner wishes to receive messages by verifying the token sent during the Subscribe action.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription extends Temboo_Choreography
{
    /**
     * Verifies that the endpoint owner wishes to receive messages by verifying the token sent during the Subscribe action.
     *
     * @param Temboo_Session $session The session that owns this ConfirmSubscription choreography.
     * @return Amazon_SNS_ConfirmSubscription New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ConfirmSubscription/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ConfirmSubscription choreography.
     *
     * @param Amazon_SNS_ConfirmSubscription_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ConfirmSubscription_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ConfirmSubscription_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ConfirmSubscription_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ConfirmSubscription choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ConfirmSubscription_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ConfirmSubscription_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ConfirmSubscription choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ConfirmSubscription choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ConfirmSubscription_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ConfirmSubscription input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ConfirmSubscription choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ConfirmSubscription choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AuthenticateOnUnsubscribed input for this ConfirmSubscription choreography.
     *
     * @param bool $value (optional, boolean) Indicates that you want to disable the ability to unsubscribe from the subscription without authenticating. Specify 1 to enable this flag.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAuthenticateOnUnsubscribed($value)
    {
        return $this->set('AuthenticateOnUnsubscribed', $value);
    }

    /**
     * Set the value for the Token input for this ConfirmSubscription choreography.
     *
     * @param string $value (required, string) The short-lived token sent to an endpoint during the Subscribe action.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setToken($value)
    {
        return $this->set('Token', $value);
    }

    /**
     * Set the value for the TopicArn input for this ConfirmSubscription choreography.
     *
     * @param string $value (required, string) The ARN of the topic you want to confirm a subscription for.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the ConfirmSubscription choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ConfirmSubscription choreography.
     *
     * @param Temboo_Session $session The session that owns this ConfirmSubscription execution.
     * @param Amazon_SNS_ConfirmSubscription $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_ConfirmSubscription_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ConfirmSubscription_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ConfirmSubscription_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ConfirmSubscription $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ConfirmSubscription execution.
     *
     * @return Amazon_SNS_ConfirmSubscription_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ConfirmSubscription execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ConfirmSubscription_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ConfirmSubscription_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ConfirmSubscription choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ConfirmSubscription choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ConfirmSubscription_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ConfirmSubscription execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the number of your available Amazon Marketplace reports, ready for download, that were generated in the last 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount extends Temboo_Choreography
{
    /**
     * Retrieves the number of your available Amazon Marketplace reports, ready for download, that were generated in the last 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetReportCount choreography.
     * @return Amazon_Marketplace_Reports_GetReportCount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportCount/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetReportCount choreography.
     *
     * @param Amazon_Marketplace_Reports_GetReportCount_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportCount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportCount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportCount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportCount choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetReportCount choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportCount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportCount choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportCount choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportCount choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportCount choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this GetReportCount choreography.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the AvailableFromDate input for this GetReportCount choreography.
     *
     * @param string $value (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAvailableFromDate($value)
    {
        return $this->set('AvailableFromDate', $value);
    }

    /**
     * Set the value for the AvailableToDate input for this GetReportCount choreography.
     *
     * @param string $value (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAvailableToDate($value)
    {
        return $this->set('AvailableToDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportCount choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportType input for this GetReportCount choreography.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. _GET_FLAT_FILE_OPEN_LISTINGS_DATA_).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }
}


/**
 * Execution object for the GetReportCount choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportCount choreography.
     *
     * @param Temboo_Session $session The session that owns this GetReportCount execution.
     * @param Amazon_Marketplace_Reports_GetReportCount $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportCount_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportCount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportCount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportCount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportCount execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetReportCount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetReportCount choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetReportCount choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetReportCount execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "Count" output from this GetReportCount execution.
     *
     * @return int (integer) A non-negative integer. parsed from the Amazon response, that represents the total number of reports available to download.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCount()
    {
        return $this->get('Count');
    }
}

/**
 * Returns orders based on the AmazonOrderId values that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder extends Temboo_Choreography
{
    /**
     * Returns orders based on the AmazonOrderId values that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetOrder choreography.
     * @return Amazon_Marketplace_Orders_GetOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/GetOrder/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetOrder choreography.
     *
     * @param Amazon_Marketplace_Orders_GetOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_GetOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_GetOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_GetOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_GetOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetOrder choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetOrder choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetOrder choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetOrder choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetOrder choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AmazonOrderId input for this GetOrder choreography.
     *
     * @param string $value (required, string) An AmazonOrderId value used to retrieve the order.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAmazonOrderId($value)
    {
        return $this->set('AmazonOrderId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetOrder choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetOrder choreography.
     *
     * @param Temboo_Session $session The session that owns this GetOrder execution.
     * @param Amazon_Marketplace_Orders_GetOrder $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Orders_GetOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_GetOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_GetOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_GetOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetOrder execution.
     *
     * @return Amazon_Marketplace_Orders_GetOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_GetOrder_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetOrder choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetOrder choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetOrder execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of products and their attributes, ordered by relevancy, based on a search query that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts extends Temboo_Choreography
{
    /**
     * Returns a list of products and their attributes, ordered by relevancy, based on a search query that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListMatchingProducts choreography.
     * @return Amazon_Marketplace_Products_ListMatchingProducts New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/ListMatchingProducts/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListMatchingProducts choreography.
     *
     * @param Amazon_Marketplace_Products_ListMatchingProducts_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_ListMatchingProducts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListMatchingProducts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListMatchingProducts choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListMatchingProducts choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListMatchingProducts input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListMatchingProducts choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListMatchingProducts choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListMatchingProducts choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListMatchingProducts choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListMatchingProducts choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Query input for this ListMatchingProducts choreography.
     *
     * @param string $value (required, string) A search string used to search for products.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }
}


/**
 * Execution object for the ListMatchingProducts choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListMatchingProducts choreography.
     *
     * @param Temboo_Session $session The session that owns this ListMatchingProducts execution.
     * @param Amazon_Marketplace_Products_ListMatchingProducts $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_ListMatchingProducts_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_ListMatchingProducts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_ListMatchingProducts $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListMatchingProducts execution.
     *
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListMatchingProducts execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListMatchingProducts choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListMatchingProducts choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListMatchingProducts execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Reboots a specified database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance extends Temboo_Choreography
{
    /**
     * Reboots a specified database instance.
     *
     * @param Temboo_Session $session The session that owns this RebootDBInstance choreography.
     * @return Amazon_RDS_RebootDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RebootDBInstance/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RebootDBInstance choreography.
     *
     * @param Amazon_RDS_RebootDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RebootDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RebootDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RebootDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RebootDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RebootDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RebootDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RebootDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RebootDBInstance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RebootDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RebootDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RebootDBInstance choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RebootDBInstance choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this RebootDBInstance choreography.
     *
     * @param string $value (required, string) The ID for the DB instance to reboot.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }
}


/**
 * Execution object for the RebootDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RebootDBInstance choreography.
     *
     * @param Temboo_Session $session The session that owns this RebootDBInstance execution.
     * @param Amazon_RDS_RebootDBInstance $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_RebootDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RebootDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RebootDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RebootDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RebootDBInstance execution.
     *
     * @return Amazon_RDS_RebootDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RebootDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RebootDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RebootDBInstance_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RebootDBInstance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RebootDBInstance choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RebootDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RebootDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns account transactions from a specified start date.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity extends Temboo_Choreography
{
    /**
     * Returns account transactions from a specified start date.
     *
     * @param Temboo_Session $session The session that owns this GetAccountActivity choreography.
     * @return Amazon_FPS_GetAccountActivity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetAccountActivity/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAccountActivity choreography.
     *
     * @param Amazon_FPS_GetAccountActivity_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountActivity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetAccountActivity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountActivity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountActivity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetAccountActivity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountActivity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAccountActivity choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountActivity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountActivity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountActivity choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountActivity choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAccountActivity choreography.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the StartDate input for this GetAccountActivity choreography.
     *
     * @param string $value (required, date) The first date of transactions to return (epoch timestamp in milliseconds or formatted like 2009-10-07Z).
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }
}


/**
 * Execution object for the GetAccountActivity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountActivity choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAccountActivity execution.
     * @param Amazon_FPS_GetAccountActivity $choreo The choregraphy object for this execution.
     * @param Amazon_FPS_GetAccountActivity_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountActivity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetAccountActivity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountActivity execution.
     *
     * @return Amazon_FPS_GetAccountActivity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAccountActivity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetAccountActivity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetAccountActivity_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAccountActivity choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAccountActivity choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetAccountActivity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAccountActivity execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information on available Amazon EBS snapshots.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots extends Temboo_Choreography
{
    /**
     * Returns information on available Amazon EBS snapshots.
     *
     * @param Temboo_Session $session The session that owns this DescribeSnapshots choreography.
     * @return Amazon_EC2_DescribeSnapshots New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeSnapshots/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeSnapshots choreography.
     *
     * @param Amazon_EC2_DescribeSnapshots_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSnapshots_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSnapshots_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeSnapshots_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeSnapshots choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSnapshots_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeSnapshots_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeSnapshots choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeSnapshots choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSnapshots_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeSnapshots input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeSnapshots choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeSnapshots choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the SnapshotId input for this DescribeSnapshots choreography.
     *
     * @param string $value (optional, string) The ID of the snapshot you want to retrieve. Returns all snapshots if not specified.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }
}


/**
 * Execution object for the DescribeSnapshots choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeSnapshots choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeSnapshots execution.
     * @param Amazon_EC2_DescribeSnapshots $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeSnapshots_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSnapshots_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSnapshots_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeSnapshots $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeSnapshots execution.
     *
     * @return Amazon_EC2_DescribeSnapshots_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeSnapshots execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeSnapshots_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeSnapshots_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeSnapshots choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeSnapshots choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeSnapshots_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeSnapshots execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about privisioned database instances.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances extends Temboo_Choreography
{
    /**
     * Returns information about privisioned database instances.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBInstances choreography.
     * @return Amazon_RDS_DescribeDBInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeDBInstances choreography.
     *
     * @param Amazon_RDS_DescribeDBInstances_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeDBInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DescribeDBInstances choreography.
     *
     * @param string $value (optional, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeDBInstances choreography.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBInstances choreography.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBInstances execution.
     * @param Amazon_RDS_DescribeDBInstances $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_DescribeDBInstances_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBInstances execution.
     *
     * @return Amazon_RDS_DescribeDBInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeDBInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeDBInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeDBInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeDBInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns security group information associated with your AWS Account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups extends Temboo_Choreography
{
    /**
     * Returns security group information associated with your AWS Account.
     *
     * @param Temboo_Session $session The session that owns this DescribeSecurityGroups choreography.
     * @return Amazon_EC2_DescribeSecurityGroups New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeSecurityGroups/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeSecurityGroups choreography.
     *
     * @param Amazon_EC2_DescribeSecurityGroups_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSecurityGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSecurityGroups_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeSecurityGroups_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeSecurityGroups choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeSecurityGroups_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeSecurityGroups choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeSecurityGroups choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeSecurityGroups input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeSecurityGroups choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeSecurityGroups choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this DescribeSecurityGroups choreography.
     *
     * @param string $value (optional, string) The name of the security group to return. Returns all groups if not specified.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }
}


/**
 * Execution object for the DescribeSecurityGroups choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeSecurityGroups choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeSecurityGroups execution.
     * @param Amazon_EC2_DescribeSecurityGroups $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeSecurityGroups_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSecurityGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSecurityGroups_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeSecurityGroups $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeSecurityGroups execution.
     *
     * @return Amazon_EC2_DescribeSecurityGroups_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeSecurityGroups execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeSecurityGroups_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeSecurityGroups choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeSecurityGroups choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeSecurityGroups execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of reports that were created in the previous 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList extends Temboo_Choreography
{
    /**
     * Returns a list of reports that were created in the previous 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetReportList choreography.
     * @return Amazon_Marketplace_Reports_GetReportList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportList/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetReportList choreography.
     *
     * @param Amazon_Marketplace_Reports_GetReportList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetReportList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportList choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportList choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportList choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportList choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this GetReportList choreography.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the AvailableFromDate input for this GetReportList choreography.
     *
     * @param string $value (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAvailableFromDate($value)
    {
        return $this->set('AvailableFromDate', $value);
    }

    /**
     * Set the value for the AvailableToDate input for this GetReportList choreography.
     *
     * @param string $value (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAvailableToDate($value)
    {
        return $this->set('AvailableToDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportList choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetReportList choreography.
     *
     * @param int $value (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the ReportRequestId input for this GetReportList choreography.
     *
     * @param int $value (optional, integer) A ReportRequestId value. If you pass a ReportRequestId value, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setReportRequestId($value)
    {
        return $this->set('ReportRequestId', $value);
    }

    /**
     * Set the value for the ReportType input for this GetReportList choreography.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }
}


/**
 * Execution object for the GetReportList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportList choreography.
     *
     * @param Temboo_Session $session The session that owns this GetReportList execution.
     * @param Amazon_Marketplace_Reports_GetReportList $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportList execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetReportList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportList_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetReportList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetReportList choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetReportList execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ReportId" output from this GetReportList execution.
     *
     * @return int (integer) The report id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportId()
    {
        return $this->get('ReportId');
    }
}

/**
 * Sets the access control list (ACL) permissions for an existing bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL extends Temboo_Choreography
{
    /**
     * Sets the access control list (ACL) permissions for an existing bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketACL choreography.
     * @return Amazon_S3_PutBucketACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketACL/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PutBucketACL choreography.
     *
     * @param Amazon_S3_PutBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketACL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PutBucketACL choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the GranteeEmailAddress input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The email address of the grantee.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setGranteeEmailAddress($value)
    {
        return $this->set('GranteeEmailAddress', $value);
    }

    /**
     * Set the value for the GranteeId input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The canonical user id of the grantee.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setGranteeId($value)
    {
        return $this->set('GranteeId', $value);
    }

    /**
     * Set the value for the OwnerEmailAddress input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The email address of the owner who is granting permission.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setOwnerEmailAddress($value)
    {
        return $this->set('OwnerEmailAddress', $value);
    }

    /**
     * Set the value for the OwnerId input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The canonical user id of the owner who is granting permission.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setOwnerId($value)
    {
        return $this->set('OwnerId', $value);
    }

    /**
     * Set the value for the Permission input for this PutBucketACL choreography.
     *
     * @param string $value (required, string) The permission you are granting (i.e. FULL_CONTROL).
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setPermission($value)
    {
        return $this->set('Permission', $value);
    }
}


/**
 * Execution object for the PutBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketACL choreography.
     *
     * @param Temboo_Session $session The session that owns this PutBucketACL execution.
     * @param Amazon_S3_PutBucketACL $choreo The choregraphy object for this execution.
     * @param Amazon_S3_PutBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketACL execution.
     *
     * @return Amazon_S3_PutBucketACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PutBucketACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketACL_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PutBucketACL choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PutBucketACL choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PutBucketACL execution.
     *
     * @return string (xml) Stores the response from Amazon. Note that for a successful ACL creation, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the policy on a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy extends Temboo_Choreography
{
    /**
     * Deletes the policy on a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketPolicy choreography.
     * @return Amazon_S3_DeleteBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketPolicy/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteBucketPolicy choreography.
     *
     * @param Amazon_S3_DeleteBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteBucketPolicy choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketPolicy choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketPolicy choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketPolicy choreography.
     *
     * @param string $value (required, string) The name of the bucket associated with the policy you want to delete.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketPolicy choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketPolicy execution.
     * @param Amazon_S3_DeleteBucketPolicy $choreo The choregraphy object for this execution.
     * @param Amazon_S3_DeleteBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketPolicy execution.
     *
     * @return Amazon_S3_DeleteBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteBucketPolicy choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteBucketPolicy choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteBucketPolicy execution.
     *
     * @return string (xml) Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * This is the standard method following MWS API GetServiceStatus standard. It can return a GREEN, GREEN_I, YELLOW or RED status.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus extends Temboo_Choreography
{
    /**
     * This is the standard method following MWS API GetServiceStatus standard. It can return a GREEN, GREEN_I, YELLOW or RED status.
     *
     * @param Temboo_Session $session The session that owns this GetServiceStatus choreography.
     * @return Amazon_Marketplace_Products_GetServiceStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetServiceStatus/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetServiceStatus choreography.
     *
     * @param Amazon_Marketplace_Products_GetServiceStatus_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetServiceStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetServiceStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetServiceStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetServiceStatus choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetServiceStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetServiceStatus choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetServiceStatus choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetServiceStatus choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetServiceStatus choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetServiceStatus choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetServiceStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetServiceStatus choreography.
     *
     * @param Temboo_Session $session The session that owns this GetServiceStatus execution.
     * @param Amazon_Marketplace_Products_GetServiceStatus $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_GetServiceStatus_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetServiceStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetServiceStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetServiceStatus execution.
     *
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetServiceStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetServiceStatus choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetServiceStatus choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetServiceStatus execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "Status" output from this GetServiceStatus execution.
     *
     * @return string (string) The service status parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getStatus()
    {
        return $this->get('Status');
    }
}

/**
 * Returns the current competitive pricing of a product, based on the ASIN and MarketplaceId that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN extends Temboo_Choreography
{
    /**
     * Returns the current competitive pricing of a product, based on the ASIN and MarketplaceId that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForASIN choreography.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetCompetitivePricingForASIN/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetCompetitivePricingForASIN choreography.
     *
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCompetitivePricingForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCompetitivePricingForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetCompetitivePricingForASIN choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCompetitivePricingForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (required, string) An ASIN value used to identify a product in the given marketplace.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetCompetitivePricingForASIN choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetCompetitivePricingForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCompetitivePricingForASIN choreography.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForASIN execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetCompetitivePricingForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCompetitivePricingForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetCompetitivePricingForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetCompetitivePricingForASIN choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetCompetitivePricingForASIN choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetCompetitivePricingForASIN execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited report of active listings.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited report of active listings.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsReport choreography.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/MerchantListingsReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this MerchantListingsReport choreography.
     *
     * @param Amazon_Marketplace_Reports_MerchantListingsReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MerchantListingsReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MerchantListingsReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the MerchantListingsReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MerchantListingsReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MerchantListingsReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this MerchantListingsReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this MerchantListingsReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MerchantListingsReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this MerchantListingsReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this MerchantListingsReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the MerchantListingsReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MerchantListingsReport choreography.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsReport execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_MerchantListingsReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MerchantListingsReport execution.
     *
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this MerchantListingsReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the MerchantListingsReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the MerchantListingsReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this MerchantListingsReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this MerchantListingsReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this MerchantListingsReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this MerchantListingsReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Sends the endpoint a confirmation message in preparation for subscribing an endpoint.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe extends Temboo_Choreography
{
    /**
     * Sends the endpoint a confirmation message in preparation for subscribing an endpoint.
     *
     * @param Temboo_Session $session The session that owns this Subscribe choreography.
     * @return Amazon_SNS_Subscribe New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Subscribe/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this Subscribe choreography.
     *
     * @param Amazon_SNS_Subscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Subscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Subscribe_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Subscribe_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Subscribe choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Subscribe_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Subscribe_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Subscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the Subscribe choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Subscribe_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Subscribe input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Subscribe choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Subscribe choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this Subscribe choreography.
     *
     * @param string $value (required, string) The endpoint that will receive the notifications. Can be an email address, URL, or the ARN of an Amazon SQS queue depending on the protocol specified.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Protocol input for this Subscribe choreography.
     *
     * @param string $value (required, string) The protocol you want to use. Accepted values are: http, https, email, email-json, or sqs.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setProtocol($value)
    {
        return $this->set('Protocol', $value);
    }

    /**
     * Set the value for the TopicArn input for this Subscribe choreography.
     *
     * @param string $value (required, string) The ARN of the topic you want to subscribe to.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the Subscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Subscribe choreography.
     *
     * @param Temboo_Session $session The session that owns this Subscribe execution.
     * @param Amazon_SNS_Subscribe $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_Subscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Subscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Subscribe_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Subscribe $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Subscribe execution.
     *
     * @return Amazon_SNS_Subscribe_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this Subscribe execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Subscribe_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Subscribe_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the Subscribe choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the Subscribe choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Subscribe_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this Subscribe execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of the items that are in a specified Amazon S3 storage bucket, and returns the list information in XML format.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList extends Temboo_Choreography
{
    /**
     * Retrieves a list of the items that are in a specified Amazon S3 storage bucket, and returns the list information in XML format.
     *
     * @param Temboo_Session $session The session that owns this GetBucketList choreography.
     * @return Amazon_S3_GetBucketList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketList/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetBucketList choreography.
     *
     * @param Amazon_S3_GetBucketList_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetBucketList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketList choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketList choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketList choreography.
     *
     * @param string $value (required, string) The name of the bucket that contains the list of objects that you want to retrieve.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the GetBucketList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketList choreography.
     *
     * @param Temboo_Session $session The session that owns this GetBucketList execution.
     * @param Amazon_S3_GetBucketList $choreo The choregraphy object for this execution.
     * @param Amazon_S3_GetBucketList_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketList execution.
     *
     * @return Amazon_S3_GetBucketList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetBucketList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketList_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetBucketList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetBucketList choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetBucketList execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of the subscriptions for a specified topic.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic extends Temboo_Choreography
{
    /**
     * Returns a list of the subscriptions for a specified topic.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptionsByTopic choreography.
     * @return Amazon_SNS_ListSubscriptionsByTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListSubscriptionsByTopic/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListSubscriptionsByTopic choreography.
     *
     * @param Amazon_SNS_ListSubscriptionsByTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptionsByTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListSubscriptionsByTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListSubscriptionsByTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListSubscriptionsByTopic choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListSubscriptionsByTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListSubscriptionsByTopic choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListSubscriptionsByTopic choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListSubscriptionsByTopic choreography.
     *
     * @param string $value (optional, string) The token returned from a previous LIstSubscriptionsByTopic request.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }

    /**
     * Set the value for the TopicArn input for this ListSubscriptionsByTopic choreography.
     *
     * @param string $value (required, string) The ARN of the topic that you want to find subscriptions for.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the ListSubscriptionsByTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListSubscriptionsByTopic choreography.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptionsByTopic execution.
     * @param Amazon_SNS_ListSubscriptionsByTopic $choreo The choregraphy object for this execution.
     * @param Amazon_SNS_ListSubscriptionsByTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptionsByTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListSubscriptionsByTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListSubscriptionsByTopic execution.
     *
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListSubscriptionsByTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListSubscriptionsByTopic choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListSubscriptionsByTopic choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListSubscriptionsByTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a report request and submits the request to Amazon MWS.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport extends Temboo_Choreography
{
    /**
     * Creates a report request and submits the request to Amazon MWS.
     *
     * @param Temboo_Session $session The session that owns this RequestReport choreography.
     * @return Amazon_Marketplace_Reports_RequestReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/RequestReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RequestReport choreography.
     *
     * @param Amazon_Marketplace_Reports_RequestReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RequestReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RequestReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_RequestReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RequestReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_RequestReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RequestReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RequestReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RequestReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RequestReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this RequestReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this RequestReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RequestReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the EndDate input for this RequestReport choreography.
     *
     * @param string $value (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this RequestReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportOptions input for this RequestReport choreography.
     *
     * @param string $value (optional, string) A Boolean value that shows or hides an additional column of information on several order reports. When set to ShowSalesChannel=true, an additional column is added showing the sales channel.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setReportOptions($value)
    {
        return $this->set('ReportOptions', $value);
    }

    /**
     * Set the value for the ReportType input for this RequestReport choreography.
     *
     * @param string $value (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the StartDate input for this RequestReport choreography.
     *
     * @param string $value (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }
}


/**
 * Execution object for the RequestReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RequestReport choreography.
     *
     * @param Temboo_Session $session The session that owns this RequestReport execution.
     * @param Amazon_Marketplace_Reports_RequestReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_RequestReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RequestReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RequestReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_RequestReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RequestReport execution.
     *
     * @return Amazon_Marketplace_Reports_RequestReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RequestReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_RequestReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RequestReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RequestReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this RequestReport execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this RequestReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this RequestReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Returns a list of all feed submissions submitted in the previous 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList extends Temboo_Choreography
{
    /**
     * Returns a list of all feed submissions submitted in the previous 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionList choreography.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionList/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetFeedSubmissionList choreography.
     *
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetFeedSubmissionList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetFeedSubmissionList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetFeedSubmissionList choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetFeedSubmissionList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedProcessingStatusList input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, string) A comma separated list of one or more feed processing statuses by which to filter the list of feed submissions.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedProcessingStatusList($value)
    {
        return $this->set('FeedProcessingStatusList', $value);
    }

    /**
     * Set the value for the FeedSubmissionIdList input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, string) A comma separated list of FeedSubmmissionId values. If you pass in FeedSubmmissionId values in a request, other query conditions are ignored.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedSubmissionIdList($value)
    {
        return $this->set('FeedSubmissionIdList', $value);
    }

    /**
     * Set the value for the FeedTypeList input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, string) A comma separated list of one or more FeedType enumeration values by which to filter the list of feed submissions.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedTypeList($value)
    {
        return $this->set('FeedTypeList', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetFeedSubmissionList choreography.
     *
     * @param int $value (optional, integer) A non-negative integer that indicates the maximum number of feed submissions to return in the list. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the SubmittedFromDate input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, date) The earliest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setSubmittedFromDate($value)
    {
        return $this->set('SubmittedFromDate', $value);
    }

    /**
     * Set the value for the SubmittedToDate input for this GetFeedSubmissionList choreography.
     *
     * @param string $value (optional, date) The latest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setSubmittedToDate($value)
    {
        return $this->set('SubmittedToDate', $value);
    }
}


/**
 * Execution object for the GetFeedSubmissionList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetFeedSubmissionList choreography.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionList execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_GetFeedSubmissionList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetFeedSubmissionList execution.
     *
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetFeedSubmissionList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetFeedSubmissionList choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetFeedSubmissionList choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetFeedSubmissionList execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "FeedProcessingStatus" output from this GetFeedSubmissionList execution.
     *
     * @return string (string) The FeedProcessingStatus parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFeedProcessingStatus()
    {
        return $this->get('FeedProcessingStatus');
    }

    /**
     * Retrieve the value for the "FeedSubmissionId" output from this GetFeedSubmissionList execution.
     *
     * @return int (integer) The FeedSubmissionId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFeedSubmissionId()
    {
        return $this->get('FeedSubmissionId');
    }
}

/**
 * Retrieves the current balance of your account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance extends Temboo_Choreography
{
    /**
     * Retrieves the current balance of your account.
     *
     * @param Temboo_Session $session The session that owns this GetAccountBalance choreography.
     * @return Amazon_FPS_GetAccountBalance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetAccountBalance/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetAccountBalance choreography.
     *
     * @param Amazon_FPS_GetAccountBalance_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountBalance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountBalance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetAccountBalance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountBalance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountBalance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetAccountBalance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountBalance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetAccountBalance choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountBalance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountBalance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountBalance choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountBalance choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAccountBalance choreography.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetAccountBalance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountBalance choreography.
     *
     * @param Temboo_Session $session The session that owns this GetAccountBalance execution.
     * @param Amazon_FPS_GetAccountBalance $choreo The choregraphy object for this execution.
     * @param Amazon_FPS_GetAccountBalance_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountBalance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountBalance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetAccountBalance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountBalance execution.
     *
     * @return Amazon_FPS_GetAccountBalance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetAccountBalance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetAccountBalance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetAccountBalance_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetAccountBalance choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetAccountBalance choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetAccountBalance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetAccountBalance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deregisters the specified AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage extends Temboo_Choreography
{
    /**
     * Deregisters the specified AMI.
     *
     * @param Temboo_Session $session The session that owns this DeregisterImage choreography.
     * @return Amazon_EC2_DeregisterImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeregisterImage/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeregisterImage choreography.
     *
     * @param Amazon_EC2_DeregisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeregisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeregisterImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeregisterImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeregisterImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeregisterImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeregisterImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeregisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeregisterImage choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeregisterImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeregisterImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeregisterImage choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeregisterImage choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ImageId input for this DeregisterImage choreography.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }
}


/**
 * Execution object for the DeregisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeregisterImage choreography.
     *
     * @param Temboo_Session $session The session that owns this DeregisterImage execution.
     * @param Amazon_EC2_DeregisterImage $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DeregisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeregisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeregisterImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeregisterImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeregisterImage execution.
     *
     * @return Amazon_EC2_DeregisterImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeregisterImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeregisterImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeregisterImage_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeregisterImage choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeregisterImage choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeregisterImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeregisterImage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to start an Amazon Machine Image by specifying its Instance ID.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances extends Temboo_Choreography
{
    /**
     * Allows you to start an Amazon Machine Image by specifying its Instance ID.
     *
     * @param Temboo_Session $session The session that owns this StartInstances choreography.
     * @return Amazon_EC2_StartInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/StartInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this StartInstances choreography.
     *
     * @param Amazon_EC2_StartInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StartInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StartInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_StartInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StartInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StartInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_StartInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StartInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the StartInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StartInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StartInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this StartInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this StartInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this StartInstances choreography.
     *
     * @param string $value (required, string) The instance ID to start.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the StartInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StartInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this StartInstances execution.
     * @param Amazon_EC2_StartInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_StartInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StartInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StartInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_StartInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StartInstances execution.
     *
     * @return Amazon_EC2_StartInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this StartInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_StartInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_StartInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the StartInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the StartInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_StartInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this StartInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Submits a feed, of the specified type, to Amazon Marketplace.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed extends Temboo_Choreography
{
    /**
     * Submits a feed, of the specified type, to Amazon Marketplace.
     *
     * @param Temboo_Session $session The session that owns this SubmitFeed choreography.
     * @return Amazon_Marketplace_Feeds_SubmitFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/SubmitFeed/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this SubmitFeed choreography.
     *
     * @param Amazon_Marketplace_Feeds_SubmitFeed_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_SubmitFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SubmitFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SubmitFeed choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the SubmitFeed choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SubmitFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FeedData input for this SubmitFeed choreography.
     *
     * @param mixed $value (conditional, any) The feed data to sumbit to Amazon Marketplace.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setFeedData($value)
    {
        return $this->set('FeedData', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SubmitFeed choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this SubmitFeed choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this SubmitFeed choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SubmitFeed choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this SubmitFeed choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedType input for this SubmitFeed choreography.
     *
     * @param string $value (optional, string) The type of feed being submitted.  Default value is set to  _POST_FLAT_FILE_INVLOADER_DATA_).
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setFeedType($value)
    {
        return $this->set('FeedType', $value);
    }

    /**
     * Set the value for the TimeToWait input for this SubmitFeed choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the SubmitFeed choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SubmitFeed choreography.
     *
     * @param Temboo_Session $session The session that owns this SubmitFeed execution.
     * @param Amazon_Marketplace_Feeds_SubmitFeed $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_SubmitFeed_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_SubmitFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_SubmitFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SubmitFeed execution.
     *
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this SubmitFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the SubmitFeed choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the SubmitFeed choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this SubmitFeed execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this SubmitFeed execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this SubmitFeed execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this SubmitFeed execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Returns orders associated with a seller order id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId extends Temboo_Choreography
{
    /**
     * Returns orders associated with a seller order id that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithSellerOrderId choreography.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrdersWithSellerOrderId/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListOrdersWithSellerOrderId choreography.
     *
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrdersWithSellerOrderId choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrdersWithSellerOrderId choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListOrdersWithSellerOrderId choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrdersWithSellerOrderId input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }

    /**
     * Set the value for the SellerOrderId input for this ListOrdersWithSellerOrderId choreography.
     *
     * @param string $value (required, string) An order identifier that is specified by the seller.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setSellerOrderId($value)
    {
        return $this->set('SellerOrderId', $value);
    }
}


/**
 * Execution object for the ListOrdersWithSellerOrderId choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrdersWithSellerOrderId choreography.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithSellerOrderId execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrdersWithSellerOrderId execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListOrdersWithSellerOrderId execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListOrdersWithSellerOrderId choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListOrdersWithSellerOrderId choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListOrdersWithSellerOrderId execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Enable monitoring for a specified instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances extends Temboo_Choreography
{
    /**
     * Enable monitoring for a specified instance.
     *
     * @param Temboo_Session $session The session that owns this MonitorInstances choreography.
     * @return Amazon_EC2_MonitorInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/MonitorInstances/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this MonitorInstances choreography.
     *
     * @param Amazon_EC2_MonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_MonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_MonitorInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_MonitorInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MonitorInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_MonitorInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_MonitorInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the MonitorInstances choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_MonitorInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MonitorInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MonitorInstances choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MonitorInstances choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this MonitorInstances choreography.
     *
     * @param string $value (required, string) The id for the instance you want to monitor.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }
}


/**
 * Execution object for the MonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MonitorInstances choreography.
     *
     * @param Temboo_Session $session The session that owns this MonitorInstances execution.
     * @param Amazon_EC2_MonitorInstances $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_MonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_MonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_MonitorInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_MonitorInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MonitorInstances execution.
     *
     * @return Amazon_EC2_MonitorInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this MonitorInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_MonitorInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_MonitorInstances_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the MonitorInstances choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the MonitorInstances choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_MonitorInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this MonitorInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a report request of any report type, polls for the status of the report, and downloads the report when it's available.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport extends Temboo_Choreography
{
    /**
     * Creates a report request of any report type, polls for the status of the report, and downloads the report when it's available.
     *
     * @param Temboo_Session $session The session that owns this RetrieveReport choreography.
     * @return Amazon_Marketplace_Reports_RetrieveReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/RetrieveReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this RetrieveReport choreography.
     *
     * @param Amazon_Marketplace_Reports_RetrieveReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RetrieveReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the RetrieveReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RetrieveReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this RetrieveReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this RetrieveReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RetrieveReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the EndDate input for this RetrieveReport choreography.
     *
     * @param string $value (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this RetrieveReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportType input for this RetrieveReport choreography.
     *
     * @param string $value (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the StartDate input for this RetrieveReport choreography.
     *
     * @param string $value (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the TimeToWait input for this RetrieveReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the RetrieveReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveReport choreography.
     *
     * @param Temboo_Session $session The session that owns this RetrieveReport execution.
     * @param Amazon_Marketplace_Reports_RetrieveReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_RetrieveReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RetrieveReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_RetrieveReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveReport execution.
     *
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this RetrieveReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the RetrieveReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the RetrieveReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this RetrieveReport execution.
     *
     * @return string The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this RetrieveReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this RetrieveReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this RetrieveReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Adds a permission to a queue for a specific principal user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission extends Temboo_Choreography
{
    /**
     * Adds a permission to a queue for a specific principal user.
     *
     * @param Temboo_Session $session The session that owns this AddPermission choreography.
     * @return Amazon_SQS_AddPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/AddPermission/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddPermission choreography.
     *
     * @param Amazon_SQS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_AddPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_AddPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_AddPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_AddPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddPermission choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_AddPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddPermission choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId1 input for this AddPermission choreography.
     *
     * @param int $value (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId1($value)
    {
        return $this->set('AWSAccountId1', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this AddPermission choreography.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddPermission choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ActionName input for this AddPermission choreography.
     *
     * @param string $value (required, string) The action to allow for a specified user. Valid values: SendMessage, ReceiveMessage, DeleteMessage,ChangeMessageVisibility, GetQueueAttributes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setActionName($value)
    {
        return $this->set('ActionName', $value);
    }

    /**
     * Set the value for the Label input for this AddPermission choreography.
     *
     * @param string $value (required, string) The unique identifier for the new permission that is being set.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the QueueName input for this AddPermission choreography.
     *
     * @param string $value (required, string) The name of the queue that you're granting access to.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddPermission choreography.
     *
     * @param Temboo_Session $session The session that owns this AddPermission execution.
     * @param Amazon_SQS_AddPermission $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_AddPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_AddPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddPermission execution.
     *
     * @return Amazon_SQS_AddPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_AddPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_AddPermission_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddPermission choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddPermission choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_AddPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddPermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets lifecycle configuration for your bucket. This is used to remove objects from a bucket automatically after a certain time.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle extends Temboo_Choreography
{
    /**
     * Sets lifecycle configuration for your bucket. This is used to remove objects from a bucket automatically after a certain time.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLifecycle choreography.
     * @return Amazon_S3_PutBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketLifecycle/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PutBucketLifecycle choreography.
     *
     * @param Amazon_S3_PutBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PutBucketLifecycle choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketLifecycle choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketLifecycle choreography.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the LifecycleId input for this PutBucketLifecycle choreography.
     *
     * @param string $value (optional, string) A unique ID for this lifecycle (i.e. delete-logs-in-30-days-rule).
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setLifecycleId($value)
    {
        return $this->set('LifecycleId', $value);
    }

    /**
     * Set the value for the NumberOfDays input for this PutBucketLifecycle choreography.
     *
     * @param int $value (required, integer) The number of days until this lifecycle expires.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setNumberOfDays($value)
    {
        return $this->set('NumberOfDays', $value);
    }

    /**
     * Set the value for the Prefix input for this PutBucketLifecycle choreography.
     *
     * @param string $value (optional, string) Indicating that objects with this prefix will expire and be removed after the number of days specified. If not specified this lifecycle will apply to all objects in the bucket.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setPrefix($value)
    {
        return $this->set('Prefix', $value);
    }

    /**
     * Set the value for the Status input for this PutBucketLifecycle choreography.
     *
     * @param string $value (optional, string) The lifecycle status. Accepted values are: "Enabled" or "Disabled". Defaults to "Enabled".
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setStatus($value)
    {
        return $this->set('Status', $value);
    }
}


/**
 * Execution object for the PutBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketLifecycle choreography.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLifecycle execution.
     * @param Amazon_S3_PutBucketLifecycle $choreo The choregraphy object for this execution.
     * @param Amazon_S3_PutBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketLifecycle execution.
     *
     * @return Amazon_S3_PutBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PutBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PutBucketLifecycle choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PutBucketLifecycle choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PutBucketLifecycle execution.
     *
     * @return string (xml) Stores the response from Amazon. Note that for a successful lifecycle creation, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns orders associated with a buyer's email address that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail extends Temboo_Choreography
{
    /**
     * Returns orders associated with a buyer's email address that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithBuyerEmail choreography.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrdersWithBuyerEmail/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListOrdersWithBuyerEmail choreography.
     *
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrdersWithBuyerEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrdersWithBuyerEmail choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListOrdersWithBuyerEmail choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrdersWithBuyerEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BuyerEmail input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (required, string) The e-mail address of a buyer. Used to select only the orders that contain the specified e-mail address.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setBuyerEmail($value)
    {
        return $this->set('BuyerEmail', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrdersWithBuyerEmail choreography.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }
}


/**
 * Execution object for the ListOrdersWithBuyerEmail choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrdersWithBuyerEmail choreography.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithBuyerEmail execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrdersWithBuyerEmail execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListOrdersWithBuyerEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListOrdersWithBuyerEmail choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListOrdersWithBuyerEmail choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListOrdersWithBuyerEmail execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the contents of a report with a given report id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById extends Temboo_Choreography
{
    /**
     * Returns the contents of a report with a given report id.
     *
     * @param Temboo_Session $session The session that owns this GetReportById choreography.
     * @return Amazon_Marketplace_Reports_GetReportById New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportById/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this GetReportById choreography.
     *
     * @param Amazon_Marketplace_Reports_GetReportById_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportById_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportById_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportById choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportById_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportById choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the GetReportById choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportById input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportById choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportById choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportById choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportById choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportById choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportId input for this GetReportById choreography.
     *
     * @param int $value (required, integer) The id of the report to retrieve.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setReportId($value)
    {
        return $this->set('ReportId', $value);
    }
}


/**
 * Execution object for the GetReportById choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportById choreography.
     *
     * @param Temboo_Session $session The session that owns this GetReportById execution.
     * @param Amazon_Marketplace_Reports_GetReportById $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportById_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportById_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportById $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportById execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportById_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this GetReportById execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportById_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the GetReportById choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the GetReportById choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this GetReportById execution.
     *
     * @return string The response from Amazon which contains the contents of the report requested. This is typically a flat file or XML information.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ContentMD5Header" output from this GetReportById execution.
     *
     * @return string (string) 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContentMD5Header()
    {
        return $this->get('ContentMD5Header');
    }
}

/**
 * Creates a new bucket in your Amazon S3 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket extends Temboo_Choreography
{
    /**
     * Creates a new bucket in your Amazon S3 account.
     *
     * @param Temboo_Session $session The session that owns this PutBucket choreography.
     * @return Amazon_S3_PutBucket New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucket/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this PutBucket choreography.
     *
     * @param Amazon_S3_PutBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucket_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucket_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucket choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucket_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucket_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the PutBucket choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucket_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucket input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucket choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucket choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucket choreography.
     *
     * @param string $value (required, string) The name of the bucket that will be created.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the LocationConstraint input for this PutBucket choreography.
     *
     * @param string $value (optional, string) The region to create the bucket in. Valid Values: EU, us-west-1, ap-southeast-1, ap-northeast-1. Defaults to US Classic Region when empty.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setLocationConstraint($value)
    {
        return $this->set('LocationConstraint', $value);
    }
}


/**
 * Execution object for the PutBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucket choreography.
     *
     * @param Temboo_Session $session The session that owns this PutBucket execution.
     * @param Amazon_S3_PutBucket $choreo The choregraphy object for this execution.
     * @param Amazon_S3_PutBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucket_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucket $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucket execution.
     *
     * @return Amazon_S3_PutBucket_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this PutBucket execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucket_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucket_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the PutBucket choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the PutBucket choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucket_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this PutBucket execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for successful uploads.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a snapshot of an existing database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot extends Temboo_Choreography
{
    /**
     * Creates a snapshot of an existing database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSnapshot choreography.
     * @return Amazon_RDS_CreateDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CreateDBSnapshot choreography.
     *
     * @param Amazon_RDS_CreateDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CreateDBSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this CreateDBSnapshot choreography.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this CreateDBSnapshot choreography.
     *
     * @param string $value (required, string) The unique identifier for the db snapshot you're creating.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }
}


/**
 * Execution object for the CreateDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSnapshot execution.
     * @param Amazon_RDS_CreateDBSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_RDS_CreateDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBSnapshot execution.
     *
     * @return Amazon_RDS_CreateDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CreateDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CreateDBSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CreateDBSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CreateDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of fulfillment orders fulfilled after (or at) a specified date or by fulfillment method.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders extends Temboo_Choreography
{
    /**
     * Returns a list of fulfillment orders fulfilled after (or at) a specified date or by fulfillment method.
     *
     * @param Temboo_Session $session The session that owns this ListAllFulfillmentOrders choreography.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/OutboundShipments/ListAllFulfillmentOrders/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListAllFulfillmentOrders choreography.
     *
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAllFulfillmentOrders choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAllFulfillmentOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListAllFulfillmentOrders choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAllFulfillmentOrders input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FulfillmentMethod input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (optional, string) A value used for selecting fulfillment orders based on their fulfillment method. "Consumer" indicates a customer order, and "Removal" indicates that the inventory should be returned to the specified.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setFulfillmentMethod($value)
    {
        return $this->set('FulfillmentMethod', $value);
    }

    /**
     * Set the value for the QueryStartDateTime input for this ListAllFulfillmentOrders choreography.
     *
     * @param string $value (optional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setQueryStartDateTime($value)
    {
        return $this->set('QueryStartDateTime', $value);
    }
}


/**
 * Execution object for the ListAllFulfillmentOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAllFulfillmentOrders choreography.
     *
     * @param Temboo_Session $session The session that owns this ListAllFulfillmentOrders execution.
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAllFulfillmentOrders execution.
     *
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListAllFulfillmentOrders execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListAllFulfillmentOrders choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListAllFulfillmentOrders choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListAllFulfillmentOrders execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a snapshot using a snapshot id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot extends Temboo_Choreography
{
    /**
     * Deletes a snapshot using a snapshot id that you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteSnapshot choreography.
     * @return Amazon_EC2_DeleteSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteSnapshot/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DeleteSnapshot choreography.
     *
     * @param Amazon_EC2_DeleteSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DeleteSnapshot choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteSnapshot choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteSnapshot choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the SnapshotId input for this DeleteSnapshot choreography.
     *
     * @param string $value (required, string) The id of the snapshot to delete.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }
}


/**
 * Execution object for the DeleteSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSnapshot choreography.
     *
     * @param Temboo_Session $session The session that owns this DeleteSnapshot execution.
     * @param Amazon_EC2_DeleteSnapshot $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DeleteSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSnapshot execution.
     *
     * @return Amazon_EC2_DeleteSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DeleteSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteSnapshot_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DeleteSnapshot choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DeleteSnapshot choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DeleteSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds or updates one or more inventory listings in your Seller Central account with a given flat flile.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems extends Temboo_Choreography
{
    /**
     * Adds or updates one or more inventory listings in your Seller Central account with a given flat flile.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItems choreography.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItems/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateInventoryItems choreography.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateInventoryItems choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the AddOrUpdateInventoryItems choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateInventoryItems input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FeedData input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (conditional, multiline) The feed data to sumbit to Amazon Marketplace.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setFeedData($value)
    {
        return $this->set('FeedData', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateInventoryItems choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateInventoryItems choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the AddOrUpdateInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateInventoryItems choreography.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItems execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateInventoryItems execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this AddOrUpdateInventoryItems execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the AddOrUpdateInventoryItems choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the AddOrUpdateInventoryItems choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }

    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }

    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateInventoryItems execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }

    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Returns Availability Zones that are available for your EC2 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones extends Temboo_Choreography
{
    /**
     * Returns Availability Zones that are available for your EC2 account.
     *
     * @param Temboo_Session $session The session that owns this DescribeAvailabilityZones choreography.
     * @return Amazon_EC2_DescribeAvailabilityZones New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeAvailabilityZones/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeAvailabilityZones choreography.
     *
     * @param Amazon_EC2_DescribeAvailabilityZones_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAvailabilityZones_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAvailabilityZones_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeAvailabilityZones choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeAvailabilityZones choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeAvailabilityZones choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeAvailabilityZones input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeAvailabilityZones choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeAvailabilityZones choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }
}


/**
 * Execution object for the DescribeAvailabilityZones choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeAvailabilityZones choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeAvailabilityZones execution.
     * @param Amazon_EC2_DescribeAvailabilityZones $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeAvailabilityZones_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAvailabilityZones_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAvailabilityZones_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeAvailabilityZones $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeAvailabilityZones execution.
     *
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeAvailabilityZones execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeAvailabilityZones choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeAvailabilityZones choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeAvailabilityZones execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of your queues.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues extends Temboo_Choreography
{
    /**
     * Returns a list of your queues.
     *
     * @param Temboo_Session $session The session that owns this ListQueues choreography.
     * @return Amazon_SQS_ListQueues New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ListQueues/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ListQueues choreography.
     *
     * @param Amazon_SQS_ListQueues_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ListQueues_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ListQueues_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ListQueues_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListQueues choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ListQueues_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ListQueues_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListQueues choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ListQueues choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ListQueues_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListQueues input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListQueues choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListQueues choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueNamePrefix input for this ListQueues choreography.
     *
     * @param string $value (optional, string) A string used to filter the list of queues.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setQueueNamePrefix($value)
    {
        return $this->set('QueueNamePrefix', $value);
    }
}


/**
 * Execution object for the ListQueues choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListQueues choreography.
     *
     * @param Temboo_Session $session The session that owns this ListQueues execution.
     * @param Amazon_SQS_ListQueues $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_ListQueues_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ListQueues_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ListQueues_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ListQueues $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListQueues execution.
     *
     * @return Amazon_SQS_ListQueues_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ListQueues execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ListQueues_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ListQueues_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ListQueues choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ListQueues choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ListQueues_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ListQueues execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Detaches an Amazon EBS volume from an instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume extends Temboo_Choreography
{
    /**
     * Detaches an Amazon EBS volume from an instance.
     *
     * @param Temboo_Session $session The session that owns this DetachVolume choreography.
     * @return Amazon_EC2_DetachVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DetachVolume/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DetachVolume choreography.
     *
     * @param Amazon_EC2_DetachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DetachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DetachVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DetachVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DetachVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DetachVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DetachVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DetachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DetachVolume choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DetachVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DetachVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DetachVolume choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DetachVolume choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Device input for this DetachVolume choreography.
     *
     * @param string $value (optional, string) The device name.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setDevice($value)
    {
        return $this->set('Device', $value);
    }

    /**
     * Set the value for the InstanceId input for this DetachVolume choreography.
     *
     * @param string $value (optional, string) The ID of the instance.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the VolumeId input for this DetachVolume choreography.
     *
     * @param string $value (required, string) The ID of the volume.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the DetachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DetachVolume choreography.
     *
     * @param Temboo_Session $session The session that owns this DetachVolume execution.
     * @param Amazon_EC2_DetachVolume $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DetachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DetachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DetachVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DetachVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DetachVolume execution.
     *
     * @return Amazon_EC2_DetachVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DetachVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DetachVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DetachVolume_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DetachVolume choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DetachVolume choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DetachVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DetachVolume execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file order report. The report shows orders from the previous 60 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file order report. The report shows orders from the previous 60 days.
     *
     * @param Temboo_Session $session The session that owns this FlatFileOrderReport choreography.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/FlatFileOrderReport/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this FlatFileOrderReport choreography.
     *
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this FlatFileOrderReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the FlatFileOrderReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the FlatFileOrderReport choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this FlatFileOrderReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this FlatFileOrderReport choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this FlatFileOrderReport choreography.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this FlatFileOrderReport choreography.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this FlatFileOrderReport choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this FlatFileOrderReport choreography.
     *
     * @param string $value (optional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this FlatFileOrderReport choreography.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the FlatFileOrderReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the FlatFileOrderReport choreography.
     *
     * @param Temboo_Session $session The session that owns this FlatFileOrderReport execution.
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport $choreo The choregraphy object for this execution.
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_FlatFileOrderReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this FlatFileOrderReport execution.
     *
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this FlatFileOrderReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the FlatFileOrderReport choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the FlatFileOrderReport choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Report" output from this FlatFileOrderReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }

    /**
     * Retrieve the value for the "GeneratedReportId" output from this FlatFileOrderReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }

    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this FlatFileOrderReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }

    /**
     * Retrieve the value for the "ReportRequestId" output from this FlatFileOrderReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
}

/**
 * Updates the visibility timeout parameter of a message.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility extends Temboo_Choreography
{
    /**
     * Updates the visibility timeout parameter of a message.
     *
     * @param Temboo_Session $session The session that owns this ChangeMessageVisibility choreography.
     * @return Amazon_SQS_ChangeMessageVisibility New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ChangeMessageVisibility/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this ChangeMessageVisibility choreography.
     *
     * @param Amazon_SQS_ChangeMessageVisibility_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ChangeMessageVisibility_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ChangeMessageVisibility_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ChangeMessageVisibility_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ChangeMessageVisibility choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ChangeMessageVisibility_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ChangeMessageVisibility choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the ChangeMessageVisibility choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ChangeMessageVisibility input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ChangeMessageVisibility choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this ChangeMessageVisibility choreography.
     *
     * @param int $value (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ChangeMessageVisibility choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this ChangeMessageVisibility choreography.
     *
     * @param string $value (required, string) The name of the queue that contains the message.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the ReceiptHandle input for this ChangeMessageVisibility choreography.
     *
     * @param string $value (required, string) The receipt handle associated with the message you want to modify. This is returned in the RecieveMessage request.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setReceiptHandle($value)
    {
        return $this->set('ReceiptHandle', $value);
    }

    /**
     * Set the value for the VisibilityTimeout input for this ChangeMessageVisibility choreography.
     *
     * @param int $value (required, integer) The new value for the visibility timeout of the message (in seconds).
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setVisibilityTimeout($value)
    {
        return $this->set('VisibilityTimeout', $value);
    }
}


/**
 * Execution object for the ChangeMessageVisibility choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ChangeMessageVisibility choreography.
     *
     * @param Temboo_Session $session The session that owns this ChangeMessageVisibility execution.
     * @param Amazon_SQS_ChangeMessageVisibility $choreo The choregraphy object for this execution.
     * @param Amazon_SQS_ChangeMessageVisibility_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ChangeMessageVisibility_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ChangeMessageVisibility_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ChangeMessageVisibility $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ChangeMessageVisibility execution.
     *
     * @return Amazon_SQS_ChangeMessageVisibility_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this ChangeMessageVisibility execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ChangeMessageVisibility_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the ChangeMessageVisibility choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the ChangeMessageVisibility choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this ChangeMessageVisibility execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about an attribute of an AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute extends Temboo_Choreography
{
    /**
     * Retrieves information about an attribute of an AMI.
     *
     * @param Temboo_Session $session The session that owns this DescribeImageAttribute choreography.
     * @return Amazon_EC2_DescribeImageAttribute New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeImageAttribute/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this DescribeImageAttribute choreography.
     *
     * @param Amazon_EC2_DescribeImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImageAttribute_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeImageAttribute_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeImageAttribute choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeImageAttribute_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the DescribeImageAttribute choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeImageAttribute input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeImageAttribute choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeImageAttribute choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Attribute input for this DescribeImageAttribute choreography.
     *
     * @param string $value (required, string) The AMI attribute to get. Valid Values are: description | kernel | ramdisk | launchPermission | productCodes | blockDeviceMapping.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAttribute($value)
    {
        return $this->set('Attribute', $value);
    }

    /**
     * Set the value for the ImageId input for this DescribeImageAttribute choreography.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }
}


/**
 * Execution object for the DescribeImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeImageAttribute choreography.
     *
     * @param Temboo_Session $session The session that owns this DescribeImageAttribute execution.
     * @param Amazon_EC2_DescribeImageAttribute $choreo The choregraphy object for this execution.
     * @param Amazon_EC2_DescribeImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImageAttribute_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeImageAttribute $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeImageAttribute execution.
     *
     * @return Amazon_EC2_DescribeImageAttribute_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this DescribeImageAttribute execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeImageAttribute_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the DescribeImageAttribute choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the DescribeImageAttribute choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this DescribeImageAttribute execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Makes a copy of an existing object in S3 Storage.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject extends Temboo_Choreography
{
    /**
     * Makes a copy of an existing object in S3 Storage.
     *
     * @param Temboo_Session $session The session that owns this CopyObject choreography.
     * @return Amazon_S3_CopyObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/CopyObject/');
    }

    /**
     * Executes this choreography.
     *
     * Execution object provides access to results appropriate for this CopyObject choreography.
     *
     * @param Amazon_S3_CopyObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_CopyObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_CopyObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_CopyObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CopyObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_CopyObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_CopyObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CopyObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appopriate setters for the CopyObject choreography.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_CopyObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CopyObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a Credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CopyObject choreography.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CopyObject choreography.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this CopyObject choreography.
     *
     * @param string $value (required, string) The name of the bucket that will be the file destination.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileToCopy input for this CopyObject choreography.
     *
     * @param string $value (required, string) The name of the file to copy.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setFileToCopy($value)
    {
        return $this->set('FileToCopy', $value);
    }

    /**
     * Set the value for the NewFileName input for this CopyObject choreography.
     *
     * @param string $value (required, string) The file name for the new copy.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setNewFileName($value)
    {
        return $this->set('NewFileName', $value);
    }

}


/**
 * Execution object for the CopyObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CopyObject choreography.
     *
     * @param Temboo_Session $session The session that owns this CopyObject execution.
     * @param Amazon_S3_CopyObject $choreo The choregraphy object for this execution.
     * @param Amazon_S3_CopyObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_CopyObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_CopyObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_CopyObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CopyObject execution.
     *
     * @return Amazon_S3_CopyObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occured in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appopriate results class for this CopyObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_CopyObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_CopyObject_Results($outputs);
    }
}


/**
 * Results object with appopriate getters for the CopyObject choreography.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Results extends Temboo_Results
{
    /**
     * Results object with appopriate getters for the CopyObject choreography.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_CopyObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }

    /**
     * Retrieve the value for the "Response" output from this CopyObject execution.
     *
     * @return string (xml) The response from Amazon. Note that no content is returned for successful uploads.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

?>